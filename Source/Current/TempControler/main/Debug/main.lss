
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00001cb2  00001d66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cb2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000054  00800154  00800154  00001dba  2**0
                  ALLOC
  3 .eeprom       00000009  00810000  00810000  00001dba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00001dc3  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000002f8  00000000  00000000  00001e1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001eee  00000000  00000000  00002117  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ea  00000000  00000000  00004005  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014e0  00000000  00000000  000047ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000978  00000000  00000000  00005cd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000924  00000000  00000000  00006648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001989  00000000  00000000  00006f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002d0  00000000  00000000  000088f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a6 c0       	rjmp	.+332    	; 0x14e <__ctors_end>
       2:	00 00       	nop
       4:	cd c0       	rjmp	.+410    	; 0x1a0 <__vector_1>
       6:	00 00       	nop
       8:	d5 c0       	rjmp	.+426    	; 0x1b4 <__vector_2>
       a:	00 00       	nop
       c:	dd c0       	rjmp	.+442    	; 0x1c8 <__vector_3>
       e:	00 00       	nop
      10:	e5 c0       	rjmp	.+458    	; 0x1dc <__vector_4>
      12:	00 00       	nop
      14:	ed c0       	rjmp	.+474    	; 0x1f0 <__vector_5>
      16:	00 00       	nop
      18:	f5 c0       	rjmp	.+490    	; 0x204 <__vector_6>
      1a:	00 00       	nop
      1c:	fd c0       	rjmp	.+506    	; 0x218 <__vector_7>
      1e:	00 00       	nop
      20:	05 c1       	rjmp	.+522    	; 0x22c <__vector_8>
      22:	00 00       	nop
      24:	0d c1       	rjmp	.+538    	; 0x240 <__vector_9>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__vector_10>
      2a:	00 00       	nop
      2c:	1d c1       	rjmp	.+570    	; 0x268 <__vector_11>
      2e:	00 00       	nop
      30:	25 c1       	rjmp	.+586    	; 0x27c <__vector_12>
      32:	00 00       	nop
      34:	2d c1       	rjmp	.+602    	; 0x290 <__vector_13>
      36:	00 00       	nop
      38:	35 c1       	rjmp	.+618    	; 0x2a4 <__vector_14>
      3a:	00 00       	nop
      3c:	3d c1       	rjmp	.+634    	; 0x2b8 <__vector_15>
      3e:	00 00       	nop
      40:	8b c1       	rjmp	.+790    	; 0x358 <__vector_16>
      42:	00 00       	nop
      44:	93 c1       	rjmp	.+806    	; 0x36c <__vector_17>
      46:	00 00       	nop
      48:	9b c1       	rjmp	.+822    	; 0x380 <__vector_18>
      4a:	00 00       	nop
      4c:	c1 c1       	rjmp	.+898    	; 0x3d0 <__vector_19>
      4e:	00 00       	nop
      50:	c9 c1       	rjmp	.+914    	; 0x3e4 <__vector_20>
      52:	00 00       	nop
      54:	d1 c1       	rjmp	.+930    	; 0x3f8 <__vector_21>
      56:	00 00       	nop
      58:	d9 c1       	rjmp	.+946    	; 0x40c <__vector_22>
      5a:	00 00       	nop
      5c:	e1 c1       	rjmp	.+962    	; 0x420 <__vector_23>
      5e:	00 00       	nop
      60:	e9 c1       	rjmp	.+978    	; 0x434 <__vector_24>
      62:	00 00       	nop
      64:	f1 c1       	rjmp	.+994    	; 0x448 <__vector_25>
      66:	00 00       	nop
      68:	f9 c1       	rjmp	.+1010   	; 0x45c <__vector_26>
      6a:	00 00       	nop
      6c:	01 c2       	rjmp	.+1026   	; 0x470 <__vector_27>
      6e:	00 00       	nop
      70:	09 c2       	rjmp	.+1042   	; 0x484 <__vector_28>
      72:	00 00       	nop
      74:	11 c2       	rjmp	.+1058   	; 0x498 <__vector_29>
      76:	00 00       	nop
      78:	19 c2       	rjmp	.+1074   	; 0x4ac <__vector_30>
      7a:	00 00       	nop
      7c:	5c c2       	rjmp	.+1208   	; 0x536 <__vector_31>
      7e:	00 00       	nop
      80:	64 c2       	rjmp	.+1224   	; 0x54a <__vector_32>
      82:	00 00       	nop
      84:	6c c2       	rjmp	.+1240   	; 0x55e <__vector_33>
      86:	00 00       	nop
      88:	74 c2       	rjmp	.+1256   	; 0x572 <__vector_34>
      8a:	00 00       	nop
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa07>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc37>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa55>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <checkTempError+0x24>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <LcdCustomChar>:
     10e:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
     11e:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
     12e:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
     13e:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf ef       	ldi	r28, 0xFF	; 255
     154:	d0 e1       	ldi	r29, 0x10	; 16
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e0       	ldi	r26, 0x00	; 0
     15e:	b1 e0       	ldi	r27, 0x01	; 1
     160:	e2 eb       	ldi	r30, 0xB2	; 178
     162:	fc e1       	ldi	r31, 0x1C	; 28
     164:	00 e0       	ldi	r16, 0x00	; 0
     166:	0b bf       	out	0x3b, r16	; 59
     168:	02 c0       	rjmp	.+4      	; 0x16e <__do_copy_data+0x14>
     16a:	07 90       	elpm	r0, Z+
     16c:	0d 92       	st	X+, r0
     16e:	a4 35       	cpi	r26, 0x54	; 84
     170:	b1 07       	cpc	r27, r17
     172:	d9 f7       	brne	.-10     	; 0x16a <__do_copy_data+0x10>

00000174 <__do_clear_bss>:
     174:	21 e0       	ldi	r18, 0x01	; 1
     176:	a4 e5       	ldi	r26, 0x54	; 84
     178:	b1 e0       	ldi	r27, 0x01	; 1
     17a:	01 c0       	rjmp	.+2      	; 0x17e <.do_clear_bss_start>

0000017c <.do_clear_bss_loop>:
     17c:	1d 92       	st	X+, r1

0000017e <.do_clear_bss_start>:
     17e:	a8 3a       	cpi	r26, 0xA8	; 168
     180:	b2 07       	cpc	r27, r18
     182:	e1 f7       	brne	.-8      	; 0x17c <.do_clear_bss_loop>
     184:	bf d6       	rcall	.+3454   	; 0xf04 <main>
     186:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <_exit>

0000018a <clearBuffer>:


/************************************************************************/
/* @Clear Buffer                                                        */
/************************************************************************/
void clearBuffer(void){
     18a:	80 e0       	ldi	r24, 0x00	; 0
     18c:	90 e0       	ldi	r25, 0x00	; 0
	uint8_t i;
	for(i=0; i< USART_BUFFER_LENGHT; i++) usartBuffer[i]=0;
     18e:	fc 01       	movw	r30, r24
     190:	ee 59       	subi	r30, 0x9E	; 158
     192:	fe 4f       	sbci	r31, 0xFE	; 254
     194:	10 82       	st	Z, r1
     196:	01 96       	adiw	r24, 0x01	; 1
     198:	82 33       	cpi	r24, 0x32	; 50
     19a:	91 05       	cpc	r25, r1
     19c:	c1 f7       	brne	.-16     	; 0x18e <clearBuffer+0x4>

}
     19e:	08 95       	ret

000001a0 <__vector_1>:
/************************************************************************/

/************************************************************************/
/* handler External Interrupt Request 0                                                                     */
/************************************************************************/
ISR(INT0_vect){
     1a0:	1f 92       	push	r1
     1a2:	0f 92       	push	r0
     1a4:	0f b6       	in	r0, 0x3f	; 63
     1a6:	0f 92       	push	r0
     1a8:	11 24       	eor	r1, r1
	
}
     1aa:	0f 90       	pop	r0
     1ac:	0f be       	out	0x3f, r0	; 63
     1ae:	0f 90       	pop	r0
     1b0:	1f 90       	pop	r1
     1b2:	18 95       	reti

000001b4 <__vector_2>:


/************************************************************************/
/* handler External Interrupt Request 1                                                                   */
/************************************************************************/
ISR(INT1_vect){
     1b4:	1f 92       	push	r1
     1b6:	0f 92       	push	r0
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	0f 92       	push	r0
     1bc:	11 24       	eor	r1, r1
	
}
     1be:	0f 90       	pop	r0
     1c0:	0f be       	out	0x3f, r0	; 63
     1c2:	0f 90       	pop	r0
     1c4:	1f 90       	pop	r1
     1c6:	18 95       	reti

000001c8 <__vector_3>:


/************************************************************************/
/* handler External Interrupt Request 2                                                                    */
/************************************************************************/
ISR(INT2_vect){
     1c8:	1f 92       	push	r1
     1ca:	0f 92       	push	r0
     1cc:	0f b6       	in	r0, 0x3f	; 63
     1ce:	0f 92       	push	r0
     1d0:	11 24       	eor	r1, r1
	
}
     1d2:	0f 90       	pop	r0
     1d4:	0f be       	out	0x3f, r0	; 63
     1d6:	0f 90       	pop	r0
     1d8:	1f 90       	pop	r1
     1da:	18 95       	reti

000001dc <__vector_4>:


/************************************************************************/
/* handler External Interrupt Request 3                                                                    */
/************************************************************************/
ISR(INT3_vect){
     1dc:	1f 92       	push	r1
     1de:	0f 92       	push	r0
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	0f 92       	push	r0
     1e4:	11 24       	eor	r1, r1
	
}
     1e6:	0f 90       	pop	r0
     1e8:	0f be       	out	0x3f, r0	; 63
     1ea:	0f 90       	pop	r0
     1ec:	1f 90       	pop	r1
     1ee:	18 95       	reti

000001f0 <__vector_5>:


/************************************************************************/
/* handler External Interrupt Request 4                                                                   */
/************************************************************************/
ISR(INT4_vect){
     1f0:	1f 92       	push	r1
     1f2:	0f 92       	push	r0
     1f4:	0f b6       	in	r0, 0x3f	; 63
     1f6:	0f 92       	push	r0
     1f8:	11 24       	eor	r1, r1
	
}
     1fa:	0f 90       	pop	r0
     1fc:	0f be       	out	0x3f, r0	; 63
     1fe:	0f 90       	pop	r0
     200:	1f 90       	pop	r1
     202:	18 95       	reti

00000204 <__vector_6>:

/************************************************************************/
/* handler External Interrupt Request 5                                                                    */
/************************************************************************/
ISR(INT5_vect){
     204:	1f 92       	push	r1
     206:	0f 92       	push	r0
     208:	0f b6       	in	r0, 0x3f	; 63
     20a:	0f 92       	push	r0
     20c:	11 24       	eor	r1, r1
	
}
     20e:	0f 90       	pop	r0
     210:	0f be       	out	0x3f, r0	; 63
     212:	0f 90       	pop	r0
     214:	1f 90       	pop	r1
     216:	18 95       	reti

00000218 <__vector_7>:


/************************************************************************/
/* handler External Interrupt Request 6                                                                  */
/************************************************************************/
ISR(INT6_vect){
     218:	1f 92       	push	r1
     21a:	0f 92       	push	r0
     21c:	0f b6       	in	r0, 0x3f	; 63
     21e:	0f 92       	push	r0
     220:	11 24       	eor	r1, r1
	
}
     222:	0f 90       	pop	r0
     224:	0f be       	out	0x3f, r0	; 63
     226:	0f 90       	pop	r0
     228:	1f 90       	pop	r1
     22a:	18 95       	reti

0000022c <__vector_8>:


/************************************************************************/
/* handler External Interrupt Request 7                                                                   */
/************************************************************************/
ISR(INT7_vect){
     22c:	1f 92       	push	r1
     22e:	0f 92       	push	r0
     230:	0f b6       	in	r0, 0x3f	; 63
     232:	0f 92       	push	r0
     234:	11 24       	eor	r1, r1
	
}
     236:	0f 90       	pop	r0
     238:	0f be       	out	0x3f, r0	; 63
     23a:	0f 90       	pop	r0
     23c:	1f 90       	pop	r1
     23e:	18 95       	reti

00000240 <__vector_9>:
/************************************************************************/

/************************************************************************/
/* handler Timer/Counter2 Compare Match                                                                  */
/************************************************************************/
ISR(TIMER2_COMP_vect){
     240:	1f 92       	push	r1
     242:	0f 92       	push	r0
     244:	0f b6       	in	r0, 0x3f	; 63
     246:	0f 92       	push	r0
     248:	11 24       	eor	r1, r1
	
}
     24a:	0f 90       	pop	r0
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	0f 90       	pop	r0
     250:	1f 90       	pop	r1
     252:	18 95       	reti

00000254 <__vector_10>:


/************************************************************************/
/* handler Timer/Counter2 Overflow                                                                 */
/************************************************************************/
ISR(TIMER2_OVF_vect){
     254:	1f 92       	push	r1
     256:	0f 92       	push	r0
     258:	0f b6       	in	r0, 0x3f	; 63
     25a:	0f 92       	push	r0
     25c:	11 24       	eor	r1, r1
	
	
	
}
     25e:	0f 90       	pop	r0
     260:	0f be       	out	0x3f, r0	; 63
     262:	0f 90       	pop	r0
     264:	1f 90       	pop	r1
     266:	18 95       	reti

00000268 <__vector_11>:


/************************************************************************/
/* handler Timer/Counter1 Capture Event                                                               */
/************************************************************************/
ISR(TIMER1_CAPT_vect){
     268:	1f 92       	push	r1
     26a:	0f 92       	push	r0
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	0f 92       	push	r0
     270:	11 24       	eor	r1, r1
	
}
     272:	0f 90       	pop	r0
     274:	0f be       	out	0x3f, r0	; 63
     276:	0f 90       	pop	r0
     278:	1f 90       	pop	r1
     27a:	18 95       	reti

0000027c <__vector_12>:


/************************************************************************/
/* handler Timer/Counter1 Compare Match A                                                              */
/************************************************************************/
ISR(TIMER1_COMPA_vect){
     27c:	1f 92       	push	r1
     27e:	0f 92       	push	r0
     280:	0f b6       	in	r0, 0x3f	; 63
     282:	0f 92       	push	r0
     284:	11 24       	eor	r1, r1
	
}
     286:	0f 90       	pop	r0
     288:	0f be       	out	0x3f, r0	; 63
     28a:	0f 90       	pop	r0
     28c:	1f 90       	pop	r1
     28e:	18 95       	reti

00000290 <__vector_13>:


/************************************************************************/
/* handler Timer/Counter1 Compare Match B                                                             */
/************************************************************************/
ISR(TIMER1_COMPB_vect){
     290:	1f 92       	push	r1
     292:	0f 92       	push	r0
     294:	0f b6       	in	r0, 0x3f	; 63
     296:	0f 92       	push	r0
     298:	11 24       	eor	r1, r1
	
}
     29a:	0f 90       	pop	r0
     29c:	0f be       	out	0x3f, r0	; 63
     29e:	0f 90       	pop	r0
     2a0:	1f 90       	pop	r1
     2a2:	18 95       	reti

000002a4 <__vector_14>:


/************************************************************************/
/* handler Timer/Counter1 Overflow                                                            */
/************************************************************************/
ISR(TIMER1_OVF_vect){
     2a4:	1f 92       	push	r1
     2a6:	0f 92       	push	r0
     2a8:	0f b6       	in	r0, 0x3f	; 63
     2aa:	0f 92       	push	r0
     2ac:	11 24       	eor	r1, r1
	
}
     2ae:	0f 90       	pop	r0
     2b0:	0f be       	out	0x3f, r0	; 63
     2b2:	0f 90       	pop	r0
     2b4:	1f 90       	pop	r1
     2b6:	18 95       	reti

000002b8 <__vector_15>:


/************************************************************************/
/* handler Timer/Counter0 Compare Match                                                           */
/************************************************************************/
ISR(TIMER0_COMP_vect){
     2b8:	1f 92       	push	r1
     2ba:	0f 92       	push	r0
     2bc:	0f b6       	in	r0, 0x3f	; 63
     2be:	0f 92       	push	r0
     2c0:	11 24       	eor	r1, r1
     2c2:	2f 93       	push	r18
     2c4:	3f 93       	push	r19
     2c6:	5f 93       	push	r21
     2c8:	6f 93       	push	r22
     2ca:	7f 93       	push	r23
     2cc:	8f 93       	push	r24
     2ce:	9f 93       	push	r25
     2d0:	af 93       	push	r26
     2d2:	bf 93       	push	r27
	
	static uint16_t tickCounter;
	// scheduling period
	// control enabled
	//TCNT0 = 200; // timer count reaload
	tickCounter++;
     2d4:	20 91 54 01 	lds	r18, 0x0154
     2d8:	30 91 55 01 	lds	r19, 0x0155
     2dc:	2f 5f       	subi	r18, 0xFF	; 255
     2de:	3f 4f       	sbci	r19, 0xFF	; 255
     2e0:	30 93 55 01 	sts	0x0155, r19
     2e4:	20 93 54 01 	sts	0x0154, r18
	
	if(tickCounter % taskControlPeriod == 0) flagTaskControl++;
     2e8:	60 91 0c 01 	lds	r22, 0x010C
     2ec:	70 91 0d 01 	lds	r23, 0x010D
     2f0:	c9 01       	movw	r24, r18
     2f2:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__udivmodhi4>
     2f6:	89 2b       	or	r24, r25
     2f8:	29 f4       	brne	.+10     	; 0x304 <__vector_15+0x4c>
     2fa:	80 91 5e 01 	lds	r24, 0x015E
     2fe:	8f 5f       	subi	r24, 0xFF	; 255
     300:	80 93 5e 01 	sts	0x015E, r24
	if(tickCounter % taskReadButtonsPeriod == 0) flagTaskReadButtons++;
     304:	60 91 10 01 	lds	r22, 0x0110
     308:	70 91 11 01 	lds	r23, 0x0111
     30c:	c9 01       	movw	r24, r18
     30e:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__udivmodhi4>
     312:	89 2b       	or	r24, r25
     314:	29 f4       	brne	.+10     	; 0x320 <__vector_15+0x68>
     316:	80 91 60 01 	lds	r24, 0x0160
     31a:	8f 5f       	subi	r24, 0xFF	; 255
     31c:	80 93 60 01 	sts	0x0160, r24
	if(tickCounter % taskUpdateLCDPeriod == 0) flagTaskUpdateLcd++;
     320:	60 91 0e 01 	lds	r22, 0x010E
     324:	70 91 0f 01 	lds	r23, 0x010F
     328:	c9 01       	movw	r24, r18
     32a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__udivmodhi4>
     32e:	89 2b       	or	r24, r25
     330:	29 f4       	brne	.+10     	; 0x33c <__vector_15+0x84>
     332:	80 91 5f 01 	lds	r24, 0x015F
     336:	8f 5f       	subi	r24, 0xFF	; 255
     338:	80 93 5f 01 	sts	0x015F, r24
	
	
	
}
     33c:	bf 91       	pop	r27
     33e:	af 91       	pop	r26
     340:	9f 91       	pop	r25
     342:	8f 91       	pop	r24
     344:	7f 91       	pop	r23
     346:	6f 91       	pop	r22
     348:	5f 91       	pop	r21
     34a:	3f 91       	pop	r19
     34c:	2f 91       	pop	r18
     34e:	0f 90       	pop	r0
     350:	0f be       	out	0x3f, r0	; 63
     352:	0f 90       	pop	r0
     354:	1f 90       	pop	r1
     356:	18 95       	reti

00000358 <__vector_16>:


/************************************************************************/
/* handler Timer/Counter0 Overflow     CHECK                                                     */
/************************************************************************/
ISR(TIMER0_OVF_vect){
     358:	1f 92       	push	r1
     35a:	0f 92       	push	r0
     35c:	0f b6       	in	r0, 0x3f	; 63
     35e:	0f 92       	push	r0
     360:	11 24       	eor	r1, r1
	
	
	
	
}
     362:	0f 90       	pop	r0
     364:	0f be       	out	0x3f, r0	; 63
     366:	0f 90       	pop	r0
     368:	1f 90       	pop	r1
     36a:	18 95       	reti

0000036c <__vector_17>:
/************************************************************************/

/************************************************************************/
/* handler SPI Serial Transfer Complete                                                         */
/************************************************************************/
ISR(SPI_STC_vect){
     36c:	1f 92       	push	r1
     36e:	0f 92       	push	r0
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	0f 92       	push	r0
     374:	11 24       	eor	r1, r1
	
}
     376:	0f 90       	pop	r0
     378:	0f be       	out	0x3f, r0	; 63
     37a:	0f 90       	pop	r0
     37c:	1f 90       	pop	r1
     37e:	18 95       	reti

00000380 <__vector_18>:


/************************************************************************/
/* handler USART0, Rx Complete                                                        */
/************************************************************************/
ISR(USART0_RX_vect){
     380:	1f 92       	push	r1
     382:	0f 92       	push	r0
     384:	0f b6       	in	r0, 0x3f	; 63
     386:	0f 92       	push	r0
     388:	11 24       	eor	r1, r1
     38a:	0b b6       	in	r0, 0x3b	; 59
     38c:	0f 92       	push	r0
     38e:	2f 93       	push	r18
     390:	3f 93       	push	r19
     392:	4f 93       	push	r20
     394:	5f 93       	push	r21
     396:	6f 93       	push	r22
     398:	7f 93       	push	r23
     39a:	8f 93       	push	r24
     39c:	9f 93       	push	r25
     39e:	af 93       	push	r26
     3a0:	bf 93       	push	r27
     3a2:	ef 93       	push	r30
     3a4:	ff 93       	push	r31
	char c;
	c =USART0_receiveChar();
     3a6:	31 d2       	rcall	.+1122   	; 0x80a <USART0_receiveChar>
	// manda caracter para usart 0
	USART1_sendChar(c);
     3a8:	f0 d1       	rcall	.+992    	; 0x78a <USART1_sendChar>
}
     3aa:	ff 91       	pop	r31
     3ac:	ef 91       	pop	r30
     3ae:	bf 91       	pop	r27
     3b0:	af 91       	pop	r26
     3b2:	9f 91       	pop	r25
     3b4:	8f 91       	pop	r24
     3b6:	7f 91       	pop	r23
     3b8:	6f 91       	pop	r22
     3ba:	5f 91       	pop	r21
     3bc:	4f 91       	pop	r20
     3be:	3f 91       	pop	r19
     3c0:	2f 91       	pop	r18
     3c2:	0f 90       	pop	r0
     3c4:	0b be       	out	0x3b, r0	; 59
     3c6:	0f 90       	pop	r0
     3c8:	0f be       	out	0x3f, r0	; 63
     3ca:	0f 90       	pop	r0
     3cc:	1f 90       	pop	r1
     3ce:	18 95       	reti

000003d0 <__vector_19>:


/************************************************************************/
/* handler USART0 Data Register Empty                                                       */
/************************************************************************/
ISR(USART0_UDRE_vect){
     3d0:	1f 92       	push	r1
     3d2:	0f 92       	push	r0
     3d4:	0f b6       	in	r0, 0x3f	; 63
     3d6:	0f 92       	push	r0
     3d8:	11 24       	eor	r1, r1

}
     3da:	0f 90       	pop	r0
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	0f 90       	pop	r0
     3e0:	1f 90       	pop	r1
     3e2:	18 95       	reti

000003e4 <__vector_20>:


/************************************************************************/
/* handler USART0, Tx Complete                                                       */
/************************************************************************/
ISR(USART0_TX_vect){
     3e4:	1f 92       	push	r1
     3e6:	0f 92       	push	r0
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	0f 92       	push	r0
     3ec:	11 24       	eor	r1, r1

}
     3ee:	0f 90       	pop	r0
     3f0:	0f be       	out	0x3f, r0	; 63
     3f2:	0f 90       	pop	r0
     3f4:	1f 90       	pop	r1
     3f6:	18 95       	reti

000003f8 <__vector_21>:
/************************************************************************/

/************************************************************************/
/* handler ADC Conversion Complete                                                    */
/************************************************************************/
ISR(ADC_vect){
     3f8:	1f 92       	push	r1
     3fa:	0f 92       	push	r0
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	0f 92       	push	r0
     400:	11 24       	eor	r1, r1

}
     402:	0f 90       	pop	r0
     404:	0f be       	out	0x3f, r0	; 63
     406:	0f 90       	pop	r0
     408:	1f 90       	pop	r1
     40a:	18 95       	reti

0000040c <__vector_22>:
/************************************************************************/

/************************************************************************/
/* handler EEPROM Ready                                                   */
/************************************************************************/
ISR(EE_READY_vect){
     40c:	1f 92       	push	r1
     40e:	0f 92       	push	r0
     410:	0f b6       	in	r0, 0x3f	; 63
     412:	0f 92       	push	r0
     414:	11 24       	eor	r1, r1

}
     416:	0f 90       	pop	r0
     418:	0f be       	out	0x3f, r0	; 63
     41a:	0f 90       	pop	r0
     41c:	1f 90       	pop	r1
     41e:	18 95       	reti

00000420 <__vector_23>:
/************************************************************************/

/************************************************************************/
/* handler Analog Comparator                                                  */
/************************************************************************/
ISR(ANALOG_COMP_vect){
     420:	1f 92       	push	r1
     422:	0f 92       	push	r0
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	0f 92       	push	r0
     428:	11 24       	eor	r1, r1

}
     42a:	0f 90       	pop	r0
     42c:	0f be       	out	0x3f, r0	; 63
     42e:	0f 90       	pop	r0
     430:	1f 90       	pop	r1
     432:	18 95       	reti

00000434 <__vector_24>:
/************************************************************************/

/************************************************************************/
/* handler  Timer/Counter1 Compare Match C                                               */
/************************************************************************/
ISR(TIMER1_COMPC_vect){
     434:	1f 92       	push	r1
     436:	0f 92       	push	r0
     438:	0f b6       	in	r0, 0x3f	; 63
     43a:	0f 92       	push	r0
     43c:	11 24       	eor	r1, r1

}
     43e:	0f 90       	pop	r0
     440:	0f be       	out	0x3f, r0	; 63
     442:	0f 90       	pop	r0
     444:	1f 90       	pop	r1
     446:	18 95       	reti

00000448 <__vector_25>:


/************************************************************************/
/* handler Timer/Counter3 Capture Event                                             */
/************************************************************************/
ISR(TIMER3_CAPT_vect){
     448:	1f 92       	push	r1
     44a:	0f 92       	push	r0
     44c:	0f b6       	in	r0, 0x3f	; 63
     44e:	0f 92       	push	r0
     450:	11 24       	eor	r1, r1

}
     452:	0f 90       	pop	r0
     454:	0f be       	out	0x3f, r0	; 63
     456:	0f 90       	pop	r0
     458:	1f 90       	pop	r1
     45a:	18 95       	reti

0000045c <__vector_26>:


/************************************************************************/
/* handler Timer/Counter3 Compare Match A                                             */
/************************************************************************/
ISR(TIMER3_COMPA_vect){
     45c:	1f 92       	push	r1
     45e:	0f 92       	push	r0
     460:	0f b6       	in	r0, 0x3f	; 63
     462:	0f 92       	push	r0
     464:	11 24       	eor	r1, r1

}
     466:	0f 90       	pop	r0
     468:	0f be       	out	0x3f, r0	; 63
     46a:	0f 90       	pop	r0
     46c:	1f 90       	pop	r1
     46e:	18 95       	reti

00000470 <__vector_27>:


/************************************************************************/
/* handler Timer/Counter3 Compare Match B                                             */
/************************************************************************/
ISR(TIMER3_COMPB_vect){
     470:	1f 92       	push	r1
     472:	0f 92       	push	r0
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	0f 92       	push	r0
     478:	11 24       	eor	r1, r1

}
     47a:	0f 90       	pop	r0
     47c:	0f be       	out	0x3f, r0	; 63
     47e:	0f 90       	pop	r0
     480:	1f 90       	pop	r1
     482:	18 95       	reti

00000484 <__vector_28>:


/************************************************************************/
/* handler Timer/Counter3 Compare Match C                                           */
/************************************************************************/
ISR(TIMER3_COMPC_vect){
     484:	1f 92       	push	r1
     486:	0f 92       	push	r0
     488:	0f b6       	in	r0, 0x3f	; 63
     48a:	0f 92       	push	r0
     48c:	11 24       	eor	r1, r1

}
     48e:	0f 90       	pop	r0
     490:	0f be       	out	0x3f, r0	; 63
     492:	0f 90       	pop	r0
     494:	1f 90       	pop	r1
     496:	18 95       	reti

00000498 <__vector_29>:


/************************************************************************/
/* handler Timer/Counter3 Overflow                                           */
/************************************************************************/
ISR(TIMER3_OVF_vect){
     498:	1f 92       	push	r1
     49a:	0f 92       	push	r0
     49c:	0f b6       	in	r0, 0x3f	; 63
     49e:	0f 92       	push	r0
     4a0:	11 24       	eor	r1, r1

}
     4a2:	0f 90       	pop	r0
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	0f 90       	pop	r0
     4a8:	1f 90       	pop	r1
     4aa:	18 95       	reti

000004ac <__vector_30>:
/************************************************************************/

/************************************************************************/
/* handler USART1, Rx Complete                                                                    */
/************************************************************************/
ISR(USART1_RX_vect){
     4ac:	1f 92       	push	r1
     4ae:	0f 92       	push	r0
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	0f 92       	push	r0
     4b4:	11 24       	eor	r1, r1
     4b6:	0b b6       	in	r0, 0x3b	; 59
     4b8:	0f 92       	push	r0
     4ba:	2f 93       	push	r18
     4bc:	3f 93       	push	r19
     4be:	4f 93       	push	r20
     4c0:	5f 93       	push	r21
     4c2:	6f 93       	push	r22
     4c4:	7f 93       	push	r23
     4c6:	8f 93       	push	r24
     4c8:	9f 93       	push	r25
     4ca:	af 93       	push	r26
     4cc:	bf 93       	push	r27
     4ce:	cf 93       	push	r28
     4d0:	ef 93       	push	r30
     4d2:	ff 93       	push	r31
	char c;

	
	c =USART1_receiveChar();
     4d4:	8e d1       	rcall	.+796    	; 0x7f2 <USART1_receiveChar>
     4d6:	c8 2f       	mov	r28, r24
	USART0_sendChar(c); // reply with received char
     4d8:	94 d1       	rcall	.+808    	; 0x802 <USART0_sendChar>
	if(c== MSG_END_CARACTER){
     4da:	cc 37       	cpi	r28, 0x7C	; 124
     4dc:	31 f4       	brne	.+12     	; 0x4ea <__vector_30+0x3e>
		nReceivedBytes=0;
     4de:	10 92 94 01 	sts	0x0194, r1
		flagNewMessage=1;
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	80 93 61 01 	sts	0x0161, r24
		return;
     4e8:	12 c0       	rjmp	.+36     	; 0x50e <__vector_30+0x62>
	}
	// save caracter to buffer
	usartBuffer[nReceivedBytes]=c;
     4ea:	e0 91 94 01 	lds	r30, 0x0194
     4ee:	f0 e0       	ldi	r31, 0x00	; 0
     4f0:	ee 59       	subi	r30, 0x9E	; 158
     4f2:	fe 4f       	sbci	r31, 0xFE	; 254
     4f4:	c0 83       	st	Z, r28
	nReceivedBytes++;
     4f6:	80 91 94 01 	lds	r24, 0x0194
     4fa:	8f 5f       	subi	r24, 0xFF	; 255
     4fc:	80 93 94 01 	sts	0x0194, r24

	// test if buffer underrun	
	if(nReceivedBytes> USART_BUFFER_LENGHT+1){
     500:	80 91 94 01 	lds	r24, 0x0194
     504:	84 33       	cpi	r24, 0x34	; 52
     506:	18 f0       	brcs	.+6      	; 0x50e <__vector_30+0x62>
		nReceivedBytes=0;
     508:	10 92 94 01 	sts	0x0194, r1
		clearBuffer();
     50c:	3e de       	rcall	.-900    	; 0x18a <clearBuffer>
	}
}
     50e:	ff 91       	pop	r31
     510:	ef 91       	pop	r30
     512:	cf 91       	pop	r28
     514:	bf 91       	pop	r27
     516:	af 91       	pop	r26
     518:	9f 91       	pop	r25
     51a:	8f 91       	pop	r24
     51c:	7f 91       	pop	r23
     51e:	6f 91       	pop	r22
     520:	5f 91       	pop	r21
     522:	4f 91       	pop	r20
     524:	3f 91       	pop	r19
     526:	2f 91       	pop	r18
     528:	0f 90       	pop	r0
     52a:	0b be       	out	0x3b, r0	; 59
     52c:	0f 90       	pop	r0
     52e:	0f be       	out	0x3f, r0	; 63
     530:	0f 90       	pop	r0
     532:	1f 90       	pop	r1
     534:	18 95       	reti

00000536 <__vector_31>:


/************************************************************************/
/* handler USART1 Data Register Empty                                          */
/************************************************************************/
ISR(USART1_UDRE_vect){
     536:	1f 92       	push	r1
     538:	0f 92       	push	r0
     53a:	0f b6       	in	r0, 0x3f	; 63
     53c:	0f 92       	push	r0
     53e:	11 24       	eor	r1, r1

}
     540:	0f 90       	pop	r0
     542:	0f be       	out	0x3f, r0	; 63
     544:	0f 90       	pop	r0
     546:	1f 90       	pop	r1
     548:	18 95       	reti

0000054a <__vector_32>:


/************************************************************************/
/* handler USART1, Tx Complete                                         */
/************************************************************************/
ISR(USART1_TX_vect){
     54a:	1f 92       	push	r1
     54c:	0f 92       	push	r0
     54e:	0f b6       	in	r0, 0x3f	; 63
     550:	0f 92       	push	r0
     552:	11 24       	eor	r1, r1

}
     554:	0f 90       	pop	r0
     556:	0f be       	out	0x3f, r0	; 63
     558:	0f 90       	pop	r0
     55a:	1f 90       	pop	r1
     55c:	18 95       	reti

0000055e <__vector_33>:


/************************************************************************/
/* handler Two-wire Serial Interface                                       */
/************************************************************************/
ISR(TWI_vect){
     55e:	1f 92       	push	r1
     560:	0f 92       	push	r0
     562:	0f b6       	in	r0, 0x3f	; 63
     564:	0f 92       	push	r0
     566:	11 24       	eor	r1, r1

}
     568:	0f 90       	pop	r0
     56a:	0f be       	out	0x3f, r0	; 63
     56c:	0f 90       	pop	r0
     56e:	1f 90       	pop	r1
     570:	18 95       	reti

00000572 <__vector_34>:


/************************************************************************/
/* handler Store Program Memory Ready                                       */
/************************************************************************/
ISR(SPM_READY_vect){
     572:	1f 92       	push	r1
     574:	0f 92       	push	r0
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	0f 92       	push	r0
     57a:	11 24       	eor	r1, r1

}
     57c:	0f 90       	pop	r0
     57e:	0f be       	out	0x3f, r0	; 63
     580:	0f 90       	pop	r0
     582:	1f 90       	pop	r1
     584:	18 95       	reti

00000586 <LCD_sendChar>:
	LCD_gotoXY(x,y);
	for(i=0;(uint8_t)pgm_read_byte(&FlashLoc[i]);i++)
	{
		LCD_sendChar((uint8_t)pgm_read_byte(&FlashLoc[i]));
	}
}
     586:	98 2f       	mov	r25, r24
     588:	90 7f       	andi	r25, 0xF0	; 240
     58a:	95 bb       	out	0x15, r25	; 21
     58c:	a8 9a       	sbi	0x15, 0	; 21
     58e:	aa 9a       	sbi	0x15, 2	; 21
     590:	e3 ef       	ldi	r30, 0xF3	; 243
     592:	f1 e0       	ldi	r31, 0x01	; 1
     594:	31 97       	sbiw	r30, 0x01	; 1
     596:	f1 f7       	brne	.-4      	; 0x594 <LCD_sendChar+0xe>
     598:	00 c0       	rjmp	.+0      	; 0x59a <LCD_sendChar+0x14>
     59a:	00 00       	nop
     59c:	aa 98       	cbi	0x15, 2	; 21
     59e:	a8 98       	cbi	0x15, 0	; 21
     5a0:	e3 ef       	ldi	r30, 0xF3	; 243
     5a2:	f1 e0       	ldi	r31, 0x01	; 1
     5a4:	31 97       	sbiw	r30, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <LCD_sendChar+0x1e>
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <LCD_sendChar+0x24>
     5aa:	00 00       	nop
     5ac:	f0 e1       	ldi	r31, 0x10	; 16
     5ae:	8f 9f       	mul	r24, r31
     5b0:	c0 01       	movw	r24, r0
     5b2:	11 24       	eor	r1, r1
     5b4:	85 bb       	out	0x15, r24	; 21
     5b6:	a8 9a       	sbi	0x15, 0	; 21
     5b8:	aa 9a       	sbi	0x15, 2	; 21
     5ba:	83 ef       	ldi	r24, 0xF3	; 243
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	01 97       	sbiw	r24, 0x01	; 1
     5c0:	f1 f7       	brne	.-4      	; 0x5be <LCD_sendChar+0x38>
     5c2:	00 c0       	rjmp	.+0      	; 0x5c4 <LCD_sendChar+0x3e>
     5c4:	00 00       	nop
     5c6:	aa 98       	cbi	0x15, 2	; 21
     5c8:	a8 98       	cbi	0x15, 0	; 21
     5ca:	e3 ef       	ldi	r30, 0xF3	; 243
     5cc:	f1 e0       	ldi	r31, 0x01	; 1
     5ce:	31 97       	sbiw	r30, 0x01	; 1
     5d0:	f1 f7       	brne	.-4      	; 0x5ce <LCD_sendChar+0x48>
     5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <LCD_sendChar+0x4e>
     5d4:	00 00       	nop
     5d6:	08 95       	ret

000005d8 <LCD_sendCommand>:
     5d8:	98 2f       	mov	r25, r24
     5da:	90 7f       	andi	r25, 0xF0	; 240
     5dc:	95 bb       	out	0x15, r25	; 21
     5de:	aa 9a       	sbi	0x15, 2	; 21
     5e0:	e3 ef       	ldi	r30, 0xF3	; 243
     5e2:	f1 e0       	ldi	r31, 0x01	; 1
     5e4:	31 97       	sbiw	r30, 0x01	; 1
     5e6:	f1 f7       	brne	.-4      	; 0x5e4 <LCD_sendCommand+0xc>
     5e8:	00 c0       	rjmp	.+0      	; 0x5ea <LCD_sendCommand+0x12>
     5ea:	00 00       	nop
     5ec:	aa 98       	cbi	0x15, 2	; 21
     5ee:	e3 ef       	ldi	r30, 0xF3	; 243
     5f0:	f1 e0       	ldi	r31, 0x01	; 1
     5f2:	31 97       	sbiw	r30, 0x01	; 1
     5f4:	f1 f7       	brne	.-4      	; 0x5f2 <LCD_sendCommand+0x1a>
     5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <LCD_sendCommand+0x20>
     5f8:	00 00       	nop
     5fa:	f0 e1       	ldi	r31, 0x10	; 16
     5fc:	8f 9f       	mul	r24, r31
     5fe:	c0 01       	movw	r24, r0
     600:	11 24       	eor	r1, r1
     602:	85 bb       	out	0x15, r24	; 21
     604:	aa 9a       	sbi	0x15, 2	; 21
     606:	83 ef       	ldi	r24, 0xF3	; 243
     608:	91 e0       	ldi	r25, 0x01	; 1
     60a:	01 97       	sbiw	r24, 0x01	; 1
     60c:	f1 f7       	brne	.-4      	; 0x60a <LCD_sendCommand+0x32>
     60e:	00 c0       	rjmp	.+0      	; 0x610 <LCD_sendCommand+0x38>
     610:	00 00       	nop
     612:	aa 98       	cbi	0x15, 2	; 21
     614:	e3 ef       	ldi	r30, 0xF3	; 243
     616:	f1 e0       	ldi	r31, 0x01	; 1
     618:	31 97       	sbiw	r30, 0x01	; 1
     61a:	f1 f7       	brne	.-4      	; 0x618 <LCD_sendCommand+0x40>
     61c:	00 c0       	rjmp	.+0      	; 0x61e <LCD_sendCommand+0x46>
     61e:	00 00       	nop
     620:	08 95       	ret

00000622 <LCD_clr>:
     622:	81 e0       	ldi	r24, 0x01	; 1
     624:	d9 df       	rcall	.-78     	; 0x5d8 <LCD_sendCommand>
     626:	84 e4       	ldi	r24, 0x44	; 68
     628:	91 e0       	ldi	r25, 0x01	; 1
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <LCD_clr+0x8>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <LCD_clr+0xe>
     630:	00 00       	nop
     632:	08 95       	ret

00000634 <LCD_sendString>:
     634:	0f 93       	push	r16
     636:	1f 93       	push	r17
     638:	cf 93       	push	r28
     63a:	df 93       	push	r29
     63c:	fc 01       	movw	r30, r24
     63e:	01 90       	ld	r0, Z+
     640:	00 20       	and	r0, r0
     642:	e9 f7       	brne	.-6      	; 0x63e <LCD_sendString+0xa>
     644:	31 97       	sbiw	r30, 0x01	; 1
     646:	1e 2f       	mov	r17, r30
     648:	18 1b       	sub	r17, r24
     64a:	00 97       	sbiw	r24, 0x00	; 0
     64c:	59 f0       	breq	.+22     	; 0x664 <LCD_sendString+0x30>
     64e:	11 23       	and	r17, r17
     650:	49 f0       	breq	.+18     	; 0x664 <LCD_sendString+0x30>
     652:	08 2f       	mov	r16, r24
     654:	c0 2f       	mov	r28, r16
     656:	d9 2f       	mov	r29, r25
     658:	89 91       	ld	r24, Y+
     65a:	95 df       	rcall	.-214    	; 0x586 <LCD_sendChar>
     65c:	8c 2f       	mov	r24, r28
     65e:	80 1b       	sub	r24, r16
     660:	81 17       	cp	r24, r17
     662:	d0 f3       	brcs	.-12     	; 0x658 <LCD_sendString+0x24>
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	1f 91       	pop	r17
     66a:	0f 91       	pop	r16
     66c:	08 95       	ret

0000066e <LCD_gotoXY>:
     66e:	62 30       	cpi	r22, 0x02	; 2
     670:	31 f0       	breq	.+12     	; 0x67e <LCD_gotoXY+0x10>
     672:	63 30       	cpi	r22, 0x03	; 3
     674:	31 f0       	breq	.+12     	; 0x682 <LCD_gotoXY+0x14>
     676:	61 30       	cpi	r22, 0x01	; 1
     678:	29 f4       	brne	.+10     	; 0x684 <LCD_gotoXY+0x16>
     67a:	80 5c       	subi	r24, 0xC0	; 192
     67c:	03 c0       	rjmp	.+6      	; 0x684 <LCD_gotoXY+0x16>
     67e:	8c 5e       	subi	r24, 0xEC	; 236
     680:	01 c0       	rjmp	.+2      	; 0x684 <LCD_gotoXY+0x16>
     682:	8c 5a       	subi	r24, 0xAC	; 172
     684:	80 68       	ori	r24, 0x80	; 128
     686:	a8 cf       	rjmp	.-176    	; 0x5d8 <LCD_sendCommand>
     688:	08 95       	ret

0000068a <LCD_defineChar>:


/************************************************************************/
/* @define char                                                                     */
/************************************************************************/
void LCD_defineChar(const uint8_t *pc,uint8_t char_code){
     68a:	ef 92       	push	r14
     68c:	ff 92       	push	r15
     68e:	0f 93       	push	r16
     690:	1f 93       	push	r17
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	8c 01       	movw	r16, r24
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
     698:	66 0f       	add	r22, r22
     69a:	66 0f       	add	r22, r22
     69c:	66 0f       	add	r22, r22
     69e:	60 64       	ori	r22, 0x40	; 64
     6a0:	e6 2e       	mov	r14, r22
	for (i=0; i<8; i++){
     6a2:	c0 e0       	ldi	r28, 0x00	; 0
     6a4:	d0 e0       	ldi	r29, 0x00	; 0
     6a6:	f8 01       	movw	r30, r16
     6a8:	ec 0f       	add	r30, r28
     6aa:	fd 1f       	adc	r31, r29
		pcc=pgm_read_byte(&pc[i]);
     6ac:	f4 90       	lpm	r15, Z
		LCD_sendCommand(a++);
     6ae:	8c 2f       	mov	r24, r28
     6b0:	8e 0d       	add	r24, r14
     6b2:	92 df       	rcall	.-220    	; 0x5d8 <LCD_sendCommand>
		LCD_sendChar(pcc);
     6b4:	8f 2d       	mov	r24, r15
     6b6:	67 df       	rcall	.-306    	; 0x586 <LCD_sendChar>
/************************************************************************/
void LCD_defineChar(const uint8_t *pc,uint8_t char_code){
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
	for (i=0; i<8; i++){
     6b8:	21 96       	adiw	r28, 0x01	; 1
     6ba:	c8 30       	cpi	r28, 0x08	; 8
     6bc:	d1 05       	cpc	r29, r1
     6be:	99 f7       	brne	.-26     	; 0x6a6 <LCD_defineChar+0x1c>
		pcc=pgm_read_byte(&pc[i]);
		LCD_sendCommand(a++);
		LCD_sendChar(pcc);
		}
}
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	1f 91       	pop	r17
     6c6:	0f 91       	pop	r16
     6c8:	ff 90       	pop	r15
     6ca:	ef 90       	pop	r14
     6cc:	08 95       	ret

000006ce <LCD_init>:


/************************************************************************/
/* @init lcd                                                                     */
/************************************************************************/
void LCD_init(void){
     6ce:	1f 93       	push	r17
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6d4:	8b e4       	ldi	r24, 0x4B	; 75
     6d6:	9d e1       	ldi	r25, 0x1D	; 29
     6d8:	01 97       	sbiw	r24, 0x01	; 1
     6da:	f1 f7       	brne	.-4      	; 0x6d8 <LCD_init+0xa>
     6dc:	00 c0       	rjmp	.+0      	; 0x6de <LCD_init+0x10>
     6de:	00 00       	nop
#ifdef LCD_4bit	
	//4 bit part
	_delay_ms(15);
	LDP=0x00;
     6e0:	15 ba       	out	0x15, r1	; 21
	LCP=0x00;
     6e2:	15 ba       	out	0x15, r1	; 21
	LDDR|=1<<LCD_D7|1<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
     6e4:	84 b3       	in	r24, 0x14	; 20
     6e6:	80 6f       	ori	r24, 0xF0	; 240
     6e8:	84 bb       	out	0x14, r24	; 20
	LCDR|=1<<LCD_E|1<<LCD_RW|1<<LCD_RS;
     6ea:	84 b3       	in	r24, 0x14	; 20
     6ec:	87 60       	ori	r24, 0x07	; 7
     6ee:	84 bb       	out	0x14, r24	; 20
   //---------one------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
     6f0:	80 e3       	ldi	r24, 0x30	; 48
     6f2:	85 bb       	out	0x15, r24	; 21
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
     6f4:	aa 9a       	sbi	0x15, 2	; 21
     6f6:	83 ef       	ldi	r24, 0xF3	; 243
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	01 97       	sbiw	r24, 0x01	; 1
     6fc:	f1 f7       	brne	.-4      	; 0x6fa <LCD_init+0x2c>
     6fe:	00 c0       	rjmp	.+0      	; 0x700 <LCD_init+0x32>
     700:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     702:	aa 98       	cbi	0x15, 2	; 21
     704:	83 ef       	ldi	r24, 0xF3	; 243
     706:	91 e0       	ldi	r25, 0x01	; 1
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	f1 f7       	brne	.-4      	; 0x708 <LCD_init+0x3a>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <LCD_init+0x40>
     70e:	00 00       	nop
	_delay_ms(1);
	//-----------two-----------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
     710:	80 e3       	ldi	r24, 0x30	; 48
     712:	85 bb       	out	0x15, r24	; 21
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
     714:	aa 9a       	sbi	0x15, 2	; 21
     716:	83 ef       	ldi	r24, 0xF3	; 243
     718:	91 e0       	ldi	r25, 0x01	; 1
     71a:	01 97       	sbiw	r24, 0x01	; 1
     71c:	f1 f7       	brne	.-4      	; 0x71a <LCD_init+0x4c>
     71e:	00 c0       	rjmp	.+0      	; 0x720 <LCD_init+0x52>
     720:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     722:	aa 98       	cbi	0x15, 2	; 21
     724:	83 ef       	ldi	r24, 0xF3	; 243
     726:	91 e0       	ldi	r25, 0x01	; 1
     728:	01 97       	sbiw	r24, 0x01	; 1
     72a:	f1 f7       	brne	.-4      	; 0x728 <LCD_init+0x5a>
     72c:	00 c0       	rjmp	.+0      	; 0x72e <LCD_init+0x60>
     72e:	00 00       	nop
	_delay_ms(1);
	//-------three-------------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|0<<LCD_D4; //4 bit mode
     730:	80 e2       	ldi	r24, 0x20	; 32
     732:	85 bb       	out	0x15, r24	; 21
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
     734:	aa 9a       	sbi	0x15, 2	; 21
     736:	83 ef       	ldi	r24, 0xF3	; 243
     738:	91 e0       	ldi	r25, 0x01	; 1
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	f1 f7       	brne	.-4      	; 0x73a <LCD_init+0x6c>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <LCD_init+0x72>
     740:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
     742:	aa 98       	cbi	0x15, 2	; 21
     744:	83 ef       	ldi	r24, 0xF3	; 243
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	01 97       	sbiw	r24, 0x01	; 1
     74a:	f1 f7       	brne	.-4      	; 0x748 <LCD_init+0x7a>
     74c:	00 c0       	rjmp	.+0      	; 0x74e <LCD_init+0x80>
     74e:	00 00       	nop
	_delay_ms(1);
	//--------4 bit--dual line---------------
	LCD_sendCommand(0b00101000);
     750:	88 e2       	ldi	r24, 0x28	; 40
     752:	42 df       	rcall	.-380    	; 0x5d8 <LCD_sendCommand>
   //-----increment address, invisible cursor shift------
	LCD_sendCommand(0b00001100);
     754:	8c e0       	ldi	r24, 0x0C	; 12
     756:	40 df       	rcall	.-384    	; 0x5d8 <LCD_sendCommand>
     758:	ce e0       	ldi	r28, 0x0E	; 14
     75a:	d1 e0       	ldi	r29, 0x01	; 1
		//init 8 custom chars
	uint8_t ch=0, chn=0;
     75c:	60 e0       	ldi	r22, 0x00	; 0
	while(ch<64)
	{
		LCD_defineChar((LcdCustomChar+ch),chn++);
     75e:	11 e0       	ldi	r17, 0x01	; 1
     760:	16 0f       	add	r17, r22
     762:	ce 01       	movw	r24, r28
     764:	92 df       	rcall	.-220    	; 0x68a <LCD_defineChar>
     766:	28 96       	adiw	r28, 0x08	; 8
	LCD_sendCommand(0b00101000);
   //-----increment address, invisible cursor shift------
	LCD_sendCommand(0b00001100);
		//init 8 custom chars
	uint8_t ch=0, chn=0;
	while(ch<64)
     768:	18 30       	cpi	r17, 0x08	; 8
     76a:	11 f0       	breq	.+4      	; 0x770 <LCD_init+0xa2>
	{
		LCD_defineChar((LcdCustomChar+ch),chn++);
     76c:	61 2f       	mov	r22, r17
     76e:	f7 cf       	rjmp	.-18     	; 0x75e <LCD_init+0x90>
		LCD_defineChar((LcdCustomChar+ch),chn++);
		ch=ch+8;
	}

#endif
}
     770:	df 91       	pop	r29
     772:	cf 91       	pop	r28
     774:	1f 91       	pop	r17
     776:	08 95       	ret

00000778 <USART1_config>:
		{
			USART0_sendChar(*(data+i));	//CALL FUNCTION AND SEND CHAR IN THAT POSITION
		}
	}

}
     778:	90 93 98 00 	sts	0x0098, r25
     77c:	80 93 99 00 	sts	0x0099, r24
     780:	40 93 9a 00 	sts	0x009A, r20
     784:	60 93 9d 00 	sts	0x009D, r22
     788:	08 95       	ret

0000078a <USART1_sendChar>:
     78a:	eb e9       	ldi	r30, 0x9B	; 155
     78c:	f0 e0       	ldi	r31, 0x00	; 0
     78e:	90 81       	ld	r25, Z
     790:	95 ff       	sbrs	r25, 5
     792:	fd cf       	rjmp	.-6      	; 0x78e <USART1_sendChar+0x4>
     794:	80 93 9c 00 	sts	0x009C, r24
     798:	08 95       	ret

0000079a <USART1_sendStr>:
     79a:	ef 92       	push	r14
     79c:	ff 92       	push	r15
     79e:	0f 93       	push	r16
     7a0:	1f 93       	push	r17
     7a2:	cf 93       	push	r28
     7a4:	df 93       	push	r29
     7a6:	fc 01       	movw	r30, r24
     7a8:	dc 01       	movw	r26, r24
     7aa:	0d 90       	ld	r0, X+
     7ac:	00 20       	and	r0, r0
     7ae:	e9 f7       	brne	.-6      	; 0x7aa <USART1_sendStr+0x10>
     7b0:	11 97       	sbiw	r26, 0x01	; 1
     7b2:	7d 01       	movw	r14, r26
     7b4:	e8 1a       	sub	r14, r24
     7b6:	f9 0a       	sbc	r15, r25
     7b8:	1e 14       	cp	r1, r14
     7ba:	1f 04       	cpc	r1, r15
     7bc:	9c f4       	brge	.+38     	; 0x7e4 <USART1_sendStr+0x4a>
     7be:	80 81       	ld	r24, Z
     7c0:	88 23       	and	r24, r24
     7c2:	81 f0       	breq	.+32     	; 0x7e4 <USART1_sendStr+0x4a>
     7c4:	8f 01       	movw	r16, r30
     7c6:	0f 5f       	subi	r16, 0xFF	; 255
     7c8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ca:	c0 e0       	ldi	r28, 0x00	; 0
     7cc:	d0 e0       	ldi	r29, 0x00	; 0
     7ce:	05 c0       	rjmp	.+10     	; 0x7da <USART1_sendStr+0x40>
     7d0:	f8 01       	movw	r30, r16
     7d2:	81 91       	ld	r24, Z+
     7d4:	8f 01       	movw	r16, r30
     7d6:	88 23       	and	r24, r24
     7d8:	29 f0       	breq	.+10     	; 0x7e4 <USART1_sendStr+0x4a>
     7da:	d7 df       	rcall	.-82     	; 0x78a <USART1_sendChar>
     7dc:	21 96       	adiw	r28, 0x01	; 1
     7de:	ec 16       	cp	r14, r28
     7e0:	fd 06       	cpc	r15, r29
     7e2:	b1 f7       	brne	.-20     	; 0x7d0 <USART1_sendStr+0x36>
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
     7f0:	08 95       	ret

000007f2 <USART1_receiveChar>:
     7f2:	eb e9       	ldi	r30, 0x9B	; 155
     7f4:	f0 e0       	ldi	r31, 0x00	; 0
     7f6:	80 81       	ld	r24, Z
     7f8:	88 23       	and	r24, r24
     7fa:	ec f7       	brge	.-6      	; 0x7f6 <USART1_receiveChar+0x4>
     7fc:	80 91 9c 00 	lds	r24, 0x009C
     800:	08 95       	ret

00000802 <USART0_sendChar>:
     802:	5d 9b       	sbis	0x0b, 5	; 11
     804:	fe cf       	rjmp	.-4      	; 0x802 <USART0_sendChar>
     806:	8c b9       	out	0x0c, r24	; 12
     808:	08 95       	ret

0000080a <USART0_receiveChar>:
/************************************************************************/
/* USART RECEIVE CHAR                                                   */
/************************************************************************/
char USART0_receiveChar(void){
	//wait for data to be received
	while ( !(UCSR0A & (1<<RXC0)) );	// do nothing
     80a:	5f 9b       	sbis	0x0b, 7	; 11
     80c:	fe cf       	rjmp	.-4      	; 0x80a <USART0_receiveChar>
	
	return UDR0;
     80e:	8c b1       	in	r24, 0x0c	; 12
}
     810:	08 95       	ret

00000812 <schedulerInit>:
// read temteprature
double readTemperatures(void){
	//return DS18_getTemp();
	return ds18b20_gettemp();
	
}
     812:	83 b7       	in	r24, 0x33	; 51
     814:	85 60       	ori	r24, 0x05	; 5
     816:	83 bf       	out	0x33, r24	; 51
     818:	83 b7       	in	r24, 0x33	; 51
     81a:	88 60       	ori	r24, 0x08	; 8
     81c:	83 bf       	out	0x33, r24	; 51
     81e:	8c e7       	ldi	r24, 0x7C	; 124
     820:	81 bf       	out	0x31, r24	; 49
     822:	87 b7       	in	r24, 0x37	; 55
     824:	82 60       	ori	r24, 0x02	; 2
     826:	87 bf       	out	0x37, r24	; 55
     828:	08 95       	ret

0000082a <decodeButton>:
     82a:	8f 70       	andi	r24, 0x0F	; 15
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	89 f0       	breq	.+34     	; 0x852 <decodeButton+0x28>
     830:	18 f4       	brcc	.+6      	; 0x838 <decodeButton+0xe>
     832:	81 30       	cpi	r24, 0x01	; 1
     834:	31 f0       	breq	.+12     	; 0x842 <decodeButton+0x18>
     836:	0b c0       	rjmp	.+22     	; 0x84e <decodeButton+0x24>
     838:	84 30       	cpi	r24, 0x04	; 4
     83a:	29 f0       	breq	.+10     	; 0x846 <decodeButton+0x1c>
     83c:	88 30       	cpi	r24, 0x08	; 8
     83e:	29 f0       	breq	.+10     	; 0x84a <decodeButton+0x20>
     840:	06 c0       	rjmp	.+12     	; 0x84e <decodeButton+0x24>
     842:	82 e0       	ldi	r24, 0x02	; 2
     844:	08 95       	ret
     846:	84 e0       	ldi	r24, 0x04	; 4
     848:	08 95       	ret
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	08 95       	ret
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	08 95       	ret
     852:	83 e0       	ldi	r24, 0x03	; 3
     854:	08 95       	ret

00000856 <debounceKey>:
     856:	28 2f       	mov	r18, r24
     858:	40 91 5a 01 	lds	r20, 0x015A
     85c:	50 91 5b 01 	lds	r21, 0x015B
     860:	41 15       	cp	r20, r1
     862:	51 05       	cpc	r21, r1
     864:	b9 f0       	breq	.+46     	; 0x894 <debounceKey+0x3e>
     866:	e8 2f       	mov	r30, r24
     868:	f0 e0       	ldi	r31, 0x00	; 0
     86a:	60 91 58 01 	lds	r22, 0x0158
     86e:	70 91 59 01 	lds	r23, 0x0159
     872:	e6 17       	cp	r30, r22
     874:	f7 07       	cpc	r31, r23
     876:	81 f5       	brne	.+96     	; 0x8d8 <debounceKey+0x82>
     878:	43 30       	cpi	r20, 0x03	; 3
     87a:	51 05       	cpc	r21, r1
     87c:	7c f5       	brge	.+94     	; 0x8dc <debounceKey+0x86>
     87e:	4f 5f       	subi	r20, 0xFF	; 255
     880:	5f 4f       	sbci	r21, 0xFF	; 255
     882:	50 93 5b 01 	sts	0x015B, r21
     886:	40 93 5a 01 	sts	0x015A, r20
     88a:	43 30       	cpi	r20, 0x03	; 3
     88c:	51 05       	cpc	r21, r1
     88e:	41 f1       	breq	.+80     	; 0x8e0 <debounceKey+0x8a>
     890:	45 2b       	or	r20, r21
     892:	71 f4       	brne	.+28     	; 0x8b0 <debounceKey+0x5a>
     894:	42 2f       	mov	r20, r18
     896:	50 e0       	ldi	r21, 0x00	; 0
     898:	50 93 59 01 	sts	0x0159, r21
     89c:	40 93 58 01 	sts	0x0158, r20
     8a0:	41 e0       	ldi	r20, 0x01	; 1
     8a2:	50 e0       	ldi	r21, 0x00	; 0
     8a4:	50 93 5b 01 	sts	0x015B, r21
     8a8:	40 93 5a 01 	sts	0x015A, r20
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	01 c0       	rjmp	.+2      	; 0x8b2 <debounceKey+0x5c>
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	40 91 58 01 	lds	r20, 0x0158
     8b8:	50 91 59 01 	lds	r21, 0x0159
     8bc:	24 17       	cp	r18, r20
     8be:	35 07       	cpc	r19, r21
     8c0:	81 f0       	breq	.+32     	; 0x8e2 <debounceKey+0x8c>
     8c2:	30 93 59 01 	sts	0x0159, r19
     8c6:	20 93 58 01 	sts	0x0158, r18
     8ca:	21 e0       	ldi	r18, 0x01	; 1
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	30 93 5b 01 	sts	0x015B, r19
     8d2:	20 93 5a 01 	sts	0x015A, r18
     8d6:	08 95       	ret
     8d8:	80 e0       	ldi	r24, 0x00	; 0
     8da:	eb cf       	rjmp	.-42     	; 0x8b2 <debounceKey+0x5c>
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	e9 cf       	rjmp	.-46     	; 0x8b2 <debounceKey+0x5c>
     8e0:	e8 cf       	rjmp	.-48     	; 0x8b2 <debounceKey+0x5c>
     8e2:	08 95       	ret

000008e4 <checkTempError>:
     8e4:	4f 92       	push	r4
     8e6:	5f 92       	push	r5
     8e8:	6f 92       	push	r6
     8ea:	7f 92       	push	r7
     8ec:	8f 92       	push	r8
     8ee:	9f 92       	push	r9
     8f0:	af 92       	push	r10
     8f2:	bf 92       	push	r11
     8f4:	cf 92       	push	r12
     8f6:	df 92       	push	r13
     8f8:	ef 92       	push	r14
     8fa:	ff 92       	push	r15
     8fc:	0f 93       	push	r16
     8fe:	1f 93       	push	r17
     900:	4b 01       	movw	r8, r22
     902:	5c 01       	movw	r10, r24
     904:	29 01       	movw	r4, r18
     906:	3a 01       	movw	r6, r20
     908:	c8 01       	movw	r24, r16
     90a:	b7 01       	movw	r22, r14
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	40 e0       	ldi	r20, 0x00	; 0
     912:	5f e3       	ldi	r21, 0x3F	; 63
     914:	13 d6       	rcall	.+3110   	; 0x153c <__mulsf3>
     916:	6b 01       	movw	r12, r22
     918:	7c 01       	movw	r14, r24
     91a:	a3 01       	movw	r20, r6
     91c:	92 01       	movw	r18, r4
     91e:	4c d3       	rcall	.+1688   	; 0xfb8 <__addsf3>
     920:	a5 01       	movw	r20, r10
     922:	94 01       	movw	r18, r8
     924:	ad d3       	rcall	.+1882   	; 0x1080 <__cmpsf2>
     926:	88 23       	and	r24, r24
     928:	24 f4       	brge	.+8      	; 0x932 <checkTempError+0x4e>
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	80 93 56 01 	sts	0x0156, r24
     930:	12 c0       	rjmp	.+36     	; 0x956 <checkTempError+0x72>
     932:	a7 01       	movw	r20, r14
     934:	96 01       	movw	r18, r12
     936:	c3 01       	movw	r24, r6
     938:	b2 01       	movw	r22, r4
     93a:	3d d3       	rcall	.+1658   	; 0xfb6 <__subsf3>
     93c:	9b 01       	movw	r18, r22
     93e:	ac 01       	movw	r20, r24
     940:	c5 01       	movw	r24, r10
     942:	b4 01       	movw	r22, r8
     944:	9d d3       	rcall	.+1850   	; 0x1080 <__cmpsf2>
     946:	88 23       	and	r24, r24
     948:	24 f4       	brge	.+8      	; 0x952 <checkTempError+0x6e>
     94a:	10 92 56 01 	sts	0x0156, r1
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	02 c0       	rjmp	.+4      	; 0x956 <checkTempError+0x72>
     952:	80 91 56 01 	lds	r24, 0x0156
     956:	1f 91       	pop	r17
     958:	0f 91       	pop	r16
     95a:	ff 90       	pop	r15
     95c:	ef 90       	pop	r14
     95e:	df 90       	pop	r13
     960:	cf 90       	pop	r12
     962:	bf 90       	pop	r11
     964:	af 90       	pop	r10
     966:	9f 90       	pop	r9
     968:	8f 90       	pop	r8
     96a:	7f 90       	pop	r7
     96c:	6f 90       	pop	r6
     96e:	5f 90       	pop	r5
     970:	4f 90       	pop	r4
     972:	08 95       	ret

00000974 <setTempSetPoint>:
     974:	cf 92       	push	r12
     976:	df 92       	push	r13
     978:	ef 92       	push	r14
     97a:	ff 92       	push	r15
     97c:	88 23       	and	r24, r24
     97e:	b1 f0       	breq	.+44     	; 0x9ac <setTempSetPoint+0x38>
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	40 e8       	ldi	r20, 0x80	; 128
     986:	5f e3       	ldi	r21, 0x3F	; 63
     988:	60 91 04 01 	lds	r22, 0x0104
     98c:	70 91 05 01 	lds	r23, 0x0105
     990:	80 91 06 01 	lds	r24, 0x0106
     994:	90 91 07 01 	lds	r25, 0x0107
     998:	0f d3       	rcall	.+1566   	; 0xfb8 <__addsf3>
     99a:	60 93 04 01 	sts	0x0104, r22
     99e:	70 93 05 01 	sts	0x0105, r23
     9a2:	80 93 06 01 	sts	0x0106, r24
     9a6:	90 93 07 01 	sts	0x0107, r25
     9aa:	15 c0       	rjmp	.+42     	; 0x9d6 <setTempSetPoint+0x62>
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	40 e8       	ldi	r20, 0x80	; 128
     9b2:	5f e3       	ldi	r21, 0x3F	; 63
     9b4:	60 91 04 01 	lds	r22, 0x0104
     9b8:	70 91 05 01 	lds	r23, 0x0105
     9bc:	80 91 06 01 	lds	r24, 0x0106
     9c0:	90 91 07 01 	lds	r25, 0x0107
     9c4:	f8 d2       	rcall	.+1520   	; 0xfb6 <__subsf3>
     9c6:	60 93 04 01 	sts	0x0104, r22
     9ca:	70 93 05 01 	sts	0x0105, r23
     9ce:	80 93 06 01 	sts	0x0106, r24
     9d2:	90 93 07 01 	sts	0x0107, r25
     9d6:	c0 90 04 01 	lds	r12, 0x0104
     9da:	d0 90 05 01 	lds	r13, 0x0105
     9de:	e0 90 06 01 	lds	r14, 0x0106
     9e2:	f0 90 07 01 	lds	r15, 0x0107
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	48 e4       	ldi	r20, 0x48	; 72
     9ec:	53 e4       	ldi	r21, 0x43	; 67
     9ee:	c7 01       	movw	r24, r14
     9f0:	b6 01       	movw	r22, r12
     9f2:	eb d4       	rcall	.+2518   	; 0x13ca <__gesf2>
     9f4:	18 16       	cp	r1, r24
     9f6:	6c f4       	brge	.+26     	; 0xa12 <setTempSetPoint+0x9e>
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a8 e4       	ldi	r26, 0x48	; 72
     9fe:	b3 e4       	ldi	r27, 0x43	; 67
     a00:	80 93 04 01 	sts	0x0104, r24
     a04:	90 93 05 01 	sts	0x0105, r25
     a08:	a0 93 06 01 	sts	0x0106, r26
     a0c:	b0 93 07 01 	sts	0x0107, r27
     a10:	15 c0       	rjmp	.+42     	; 0xa3c <setTempSetPoint+0xc8>
     a12:	20 e0       	ldi	r18, 0x00	; 0
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	48 e4       	ldi	r20, 0x48	; 72
     a18:	53 ec       	ldi	r21, 0xC3	; 195
     a1a:	c7 01       	movw	r24, r14
     a1c:	b6 01       	movw	r22, r12
     a1e:	30 d3       	rcall	.+1632   	; 0x1080 <__cmpsf2>
     a20:	88 23       	and	r24, r24
     a22:	64 f4       	brge	.+24     	; 0xa3c <setTempSetPoint+0xc8>
     a24:	80 e0       	ldi	r24, 0x00	; 0
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	a8 e4       	ldi	r26, 0x48	; 72
     a2a:	b3 ec       	ldi	r27, 0xC3	; 195
     a2c:	80 93 04 01 	sts	0x0104, r24
     a30:	90 93 05 01 	sts	0x0105, r25
     a34:	a0 93 06 01 	sts	0x0106, r26
     a38:	b0 93 07 01 	sts	0x0107, r27
     a3c:	ff 90       	pop	r15
     a3e:	ef 90       	pop	r14
     a40:	df 90       	pop	r13
     a42:	cf 90       	pop	r12
     a44:	08 95       	ret

00000a46 <setHistSetPoint>:
     a46:	88 23       	and	r24, r24
     a48:	b1 f0       	breq	.+44     	; 0xa76 <setHistSetPoint+0x30>
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	40 e8       	ldi	r20, 0x80	; 128
     a50:	5f e3       	ldi	r21, 0x3F	; 63
     a52:	60 91 00 01 	lds	r22, 0x0100
     a56:	70 91 01 01 	lds	r23, 0x0101
     a5a:	80 91 02 01 	lds	r24, 0x0102
     a5e:	90 91 03 01 	lds	r25, 0x0103
     a62:	aa d2       	rcall	.+1364   	; 0xfb8 <__addsf3>
     a64:	60 93 00 01 	sts	0x0100, r22
     a68:	70 93 01 01 	sts	0x0101, r23
     a6c:	80 93 02 01 	sts	0x0102, r24
     a70:	90 93 03 01 	sts	0x0103, r25
     a74:	15 c0       	rjmp	.+42     	; 0xaa0 <setHistSetPoint+0x5a>
     a76:	20 e0       	ldi	r18, 0x00	; 0
     a78:	30 e0       	ldi	r19, 0x00	; 0
     a7a:	40 e8       	ldi	r20, 0x80	; 128
     a7c:	5f e3       	ldi	r21, 0x3F	; 63
     a7e:	60 91 00 01 	lds	r22, 0x0100
     a82:	70 91 01 01 	lds	r23, 0x0101
     a86:	80 91 02 01 	lds	r24, 0x0102
     a8a:	90 91 03 01 	lds	r25, 0x0103
     a8e:	93 d2       	rcall	.+1318   	; 0xfb6 <__subsf3>
     a90:	60 93 00 01 	sts	0x0100, r22
     a94:	70 93 01 01 	sts	0x0101, r23
     a98:	80 93 02 01 	sts	0x0102, r24
     a9c:	90 93 03 01 	sts	0x0103, r25
     aa0:	20 e0       	ldi	r18, 0x00	; 0
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	40 e0       	ldi	r20, 0x00	; 0
     aa6:	5f e3       	ldi	r21, 0x3F	; 63
     aa8:	60 91 00 01 	lds	r22, 0x0100
     aac:	70 91 01 01 	lds	r23, 0x0101
     ab0:	80 91 02 01 	lds	r24, 0x0102
     ab4:	90 91 03 01 	lds	r25, 0x0103
     ab8:	e3 d2       	rcall	.+1478   	; 0x1080 <__cmpsf2>
     aba:	88 23       	and	r24, r24
     abc:	64 f4       	brge	.+24     	; 0xad6 <setHistSetPoint+0x90>
     abe:	80 e0       	ldi	r24, 0x00	; 0
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e8       	ldi	r26, 0x80	; 128
     ac4:	bf e3       	ldi	r27, 0x3F	; 63
     ac6:	80 93 00 01 	sts	0x0100, r24
     aca:	90 93 01 01 	sts	0x0101, r25
     ace:	a0 93 02 01 	sts	0x0102, r26
     ad2:	b0 93 03 01 	sts	0x0103, r27
     ad6:	08 95       	ret

00000ad8 <stateMachine>:
     ad8:	cf 93       	push	r28
     ada:	c8 2f       	mov	r28, r24
     adc:	90 91 57 01 	lds	r25, 0x0157
     ae0:	91 30       	cpi	r25, 0x01	; 1
     ae2:	71 f0       	breq	.+28     	; 0xb00 <stateMachine+0x28>
     ae4:	28 f0       	brcs	.+10     	; 0xaf0 <stateMachine+0x18>
     ae6:	92 30       	cpi	r25, 0x02	; 2
     ae8:	11 f1       	breq	.+68     	; 0xb2e <stateMachine+0x56>
     aea:	93 30       	cpi	r25, 0x03	; 3
     aec:	b1 f1       	breq	.+108    	; 0xb5a <stateMachine+0x82>
     aee:	3d c0       	rjmp	.+122    	; 0xb6a <stateMachine+0x92>
     af0:	c3 9a       	sbi	0x18, 3	; 24
     af2:	82 30       	cpi	r24, 0x02	; 2
     af4:	09 f0       	breq	.+2      	; 0xaf8 <stateMachine+0x20>
     af6:	3b c0       	rjmp	.+118    	; 0xb6e <stateMachine+0x96>
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	80 93 57 01 	sts	0x0157, r24
     afe:	37 c0       	rjmp	.+110    	; 0xb6e <stateMachine+0x96>
     b00:	c3 98       	cbi	0x18, 3	; 24
     b02:	83 30       	cpi	r24, 0x03	; 3
     b04:	19 f4       	brne	.+6      	; 0xb0c <stateMachine+0x34>
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	35 df       	rcall	.-406    	; 0x974 <setTempSetPoint>
     b0a:	0b c0       	rjmp	.+22     	; 0xb22 <stateMachine+0x4a>
     b0c:	84 30       	cpi	r24, 0x04	; 4
     b0e:	19 f4       	brne	.+6      	; 0xb16 <stateMachine+0x3e>
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	30 df       	rcall	.-416    	; 0x974 <setTempSetPoint>
     b14:	2c c0       	rjmp	.+88     	; 0xb6e <stateMachine+0x96>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <stateMachine+0x4a>
     b1a:	82 e0       	ldi	r24, 0x02	; 2
     b1c:	80 93 57 01 	sts	0x0157, r24
     b20:	26 c0       	rjmp	.+76     	; 0xb6e <stateMachine+0x96>
     b22:	c1 30       	cpi	r28, 0x01	; 1
     b24:	21 f5       	brne	.+72     	; 0xb6e <stateMachine+0x96>
     b26:	83 e0       	ldi	r24, 0x03	; 3
     b28:	80 93 57 01 	sts	0x0157, r24
     b2c:	20 c0       	rjmp	.+64     	; 0xb6e <stateMachine+0x96>
     b2e:	83 30       	cpi	r24, 0x03	; 3
     b30:	19 f4       	brne	.+6      	; 0xb38 <stateMachine+0x60>
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	88 df       	rcall	.-240    	; 0xa46 <setHistSetPoint>
     b36:	0b c0       	rjmp	.+22     	; 0xb4e <stateMachine+0x76>
     b38:	84 30       	cpi	r24, 0x04	; 4
     b3a:	19 f4       	brne	.+6      	; 0xb42 <stateMachine+0x6a>
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	83 df       	rcall	.-250    	; 0xa46 <setHistSetPoint>
     b40:	16 c0       	rjmp	.+44     	; 0xb6e <stateMachine+0x96>
     b42:	82 30       	cpi	r24, 0x02	; 2
     b44:	21 f4       	brne	.+8      	; 0xb4e <stateMachine+0x76>
     b46:	83 e0       	ldi	r24, 0x03	; 3
     b48:	80 93 57 01 	sts	0x0157, r24
     b4c:	10 c0       	rjmp	.+32     	; 0xb6e <stateMachine+0x96>
     b4e:	c1 30       	cpi	r28, 0x01	; 1
     b50:	71 f4       	brne	.+28     	; 0xb6e <stateMachine+0x96>
     b52:	83 e0       	ldi	r24, 0x03	; 3
     b54:	80 93 57 01 	sts	0x0157, r24
     b58:	0a c0       	rjmp	.+20     	; 0xb6e <stateMachine+0x96>
     b5a:	80 91 5d 01 	lds	r24, 0x015D
     b5e:	8f 5f       	subi	r24, 0xFF	; 255
     b60:	80 93 5d 01 	sts	0x015D, r24
     b64:	10 92 57 01 	sts	0x0157, r1
     b68:	02 c0       	rjmp	.+4      	; 0xb6e <stateMachine+0x96>
     b6a:	10 92 57 01 	sts	0x0157, r1
     b6e:	cf 91       	pop	r28
     b70:	08 95       	ret

00000b72 <readButtons>:
/************************************************************************/
/* @read the buttons and complement and clean                                                                     */
/************************************************************************/
uint8_t readButtons(void){

	return (~PINA) &0x0F; // read the low nibble
     b72:	89 b3       	in	r24, 0x19	; 25
     b74:	80 95       	com	r24
}
     b76:	8f 70       	andi	r24, 0x0F	; 15
     b78:	08 95       	ret

00000b7a <setOutputRelay>:
#define RELAY_OUT_OFF bit_clear(RELAY_PORT,RELAY_BIT)
/************************************************************************/
/* @set the output relay                                                                     */
/************************************************************************/
void setOutputRelay(uint8_t val){
	if(val >0){
     b7a:	88 23       	and	r24, r24
     b7c:	19 f0       	breq	.+6      	; 0xb84 <setOutputRelay+0xa>
		RELAY_OUT_ON;
     b7e:	c1 9a       	sbi	0x18, 1	; 24
		LED_OUT_ON;
     b80:	c4 98       	cbi	0x18, 4	; 24
     b82:	08 95       	ret
		
	}else{
		RELAY_OUT_OFF;
     b84:	c1 98       	cbi	0x18, 1	; 24
		LED_OUT_OFF;
     b86:	c4 9a       	sbi	0x18, 4	; 24
     b88:	08 95       	ret

00000b8a <initGPIO>:

/************************************************************************/
/* @init the gpio                                                                     */
/************************************************************************/
void initGPIO(void){
	DDRA = 0x00;
     b8a:	1a ba       	out	0x1a, r1	; 26
	PORTA = 0x0F; // enable pulls ups
     b8c:	8f e0       	ldi	r24, 0x0F	; 15
     b8e:	8b bb       	out	0x1b, r24	; 27
	
	DDRB = 0b00011110;
     b90:	8e e1       	ldi	r24, 0x1E	; 30
     b92:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x01;
     b94:	81 e0       	ldi	r24, 0x01	; 1
     b96:	88 bb       	out	0x18, r24	; 24
     b98:	08 95       	ret

00000b9a <paramLoadDefaultParameters>:

/************************************************************************/
/* @load hardcodded default values                                                                     */
/************************************************************************/
void paramLoadDefaultParameters(void){
	currentTempSetPoint = SETPOINT_TEMP_DEFAULT;
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	a0 ea       	ldi	r26, 0xA0	; 160
     ba0:	b1 e4       	ldi	r27, 0x41	; 65
     ba2:	80 93 04 01 	sts	0x0104, r24
     ba6:	90 93 05 01 	sts	0x0105, r25
     baa:	a0 93 06 01 	sts	0x0106, r26
     bae:	b0 93 07 01 	sts	0x0107, r27
	currentHistSetPoint = SETPOINT_HISTERESYS_DEFAULT;
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	a0 e4       	ldi	r26, 0x40	; 64
     bb8:	b0 e4       	ldi	r27, 0x40	; 64
     bba:	80 93 00 01 	sts	0x0100, r24
     bbe:	90 93 01 01 	sts	0x0101, r25
     bc2:	a0 93 02 01 	sts	0x0102, r26
     bc6:	b0 93 03 01 	sts	0x0103, r27
     bca:	08 95       	ret

00000bcc <eepromSetDefaultParameters>:

/************************************************************************/
/* @ set initial values to eeprom  if nothin there yet                                                                   */
/************************************************************************/
void eepromSetDefaultParameters(void){
	eestruct_var.initEeprom=1; // emprom init
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	80 93 9f 01 	sts	0x019F, r24
	
	eestruct_var.setPointTemp = SETPOINT_TEMP_DEFAULT;
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	a0 ea       	ldi	r26, 0xA0	; 160
     bd8:	b1 e4       	ldi	r27, 0x41	; 65
     bda:	80 93 a0 01 	sts	0x01A0, r24
     bde:	90 93 a1 01 	sts	0x01A1, r25
     be2:	a0 93 a2 01 	sts	0x01A2, r26
     be6:	b0 93 a3 01 	sts	0x01A3, r27
	eestruct_var.setPointHist = SETPOINT_HISTERESYS_DEFAULT;
     bea:	80 e0       	ldi	r24, 0x00	; 0
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	a0 e4       	ldi	r26, 0x40	; 64
     bf0:	b0 e4       	ldi	r27, 0x40	; 64
     bf2:	80 93 a4 01 	sts	0x01A4, r24
     bf6:	90 93 a5 01 	sts	0x01A5, r25
     bfa:	a0 93 a6 01 	sts	0x01A6, r26
     bfe:	b0 93 a7 01 	sts	0x01A7, r27
	
	eeprom_write_block((const void*)&eestruct_var,(void*)&eestruct_eemem,sizeof(eestruct_t));
     c02:	49 e0       	ldi	r20, 0x09	; 9
     c04:	50 e0       	ldi	r21, 0x00	; 0
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	70 e0       	ldi	r23, 0x00	; 0
     c0a:	8f e9       	ldi	r24, 0x9F	; 159
     c0c:	91 e0       	ldi	r25, 0x01	; 1
     c0e:	93 c7       	rjmp	.+3878   	; 0x1b36 <__eewr_block_m128>
     c10:	08 95       	ret

00000c12 <paramLoadFromEeprom>:
/* @ load eeprom saved values                                                                     */
/************************************************************************/
void paramLoadFromEeprom(void){
	//uint8_t temp=0;
	// read from emprom
	eeprom_read_block((void*)&eestruct_var, (const void*)&eestruct_eemem,sizeof(eestruct_t));
     c12:	49 e0       	ldi	r20, 0x09	; 9
     c14:	50 e0       	ldi	r21, 0x00	; 0
     c16:	60 e0       	ldi	r22, 0x00	; 0
     c18:	70 e0       	ldi	r23, 0x00	; 0
     c1a:	8f e9       	ldi	r24, 0x9F	; 159
     c1c:	91 e0       	ldi	r25, 0x01	; 1
     c1e:	7b d7       	rcall	.+3830   	; 0x1b16 <__eerd_block_m128>
	
	// test the fits field to check if it was written else use default and load
	if((eestruct_var.initEeprom &0xFF) ==0xFF){
     c20:	80 91 9f 01 	lds	r24, 0x019F
     c24:	8f 3f       	cpi	r24, 0xFF	; 255
     c26:	19 f4       	brne	.+6      	; 0xc2e <paramLoadFromEeprom+0x1c>
		eepromSetDefaultParameters();
     c28:	d1 df       	rcall	.-94     	; 0xbcc <eepromSetDefaultParameters>
		paramLoadDefaultParameters();
     c2a:	b7 cf       	rjmp	.-146    	; 0xb9a <paramLoadDefaultParameters>
     c2c:	08 95       	ret
		
	}
	else{
		// write to the global variables
		currentTempSetPoint = eestruct_var.setPointTemp;
     c2e:	80 91 a0 01 	lds	r24, 0x01A0
     c32:	90 91 a1 01 	lds	r25, 0x01A1
     c36:	a0 91 a2 01 	lds	r26, 0x01A2
     c3a:	b0 91 a3 01 	lds	r27, 0x01A3
     c3e:	80 93 04 01 	sts	0x0104, r24
     c42:	90 93 05 01 	sts	0x0105, r25
     c46:	a0 93 06 01 	sts	0x0106, r26
     c4a:	b0 93 07 01 	sts	0x0107, r27
		currentHistSetPoint = eestruct_var.setPointHist;
     c4e:	80 91 a4 01 	lds	r24, 0x01A4
     c52:	90 91 a5 01 	lds	r25, 0x01A5
     c56:	a0 91 a6 01 	lds	r26, 0x01A6
     c5a:	b0 91 a7 01 	lds	r27, 0x01A7
     c5e:	80 93 00 01 	sts	0x0100, r24
     c62:	90 93 01 01 	sts	0x0101, r25
     c66:	a0 93 02 01 	sts	0x0102, r26
     c6a:	b0 93 03 01 	sts	0x0103, r27
     c6e:	08 95       	ret

00000c70 <paramSavetoEeprom>:
/************************************************************************/
/* @save current values to eerprom                                                                     */
/************************************************************************/
void paramSavetoEeprom(void){
	// save paramenetrs on the run
	eestruct_var.initEeprom=1; // emprom init
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	80 93 9f 01 	sts	0x019F, r24
	eestruct_var.setPointTemp = currentTempSetPoint;
     c76:	80 91 04 01 	lds	r24, 0x0104
     c7a:	90 91 05 01 	lds	r25, 0x0105
     c7e:	a0 91 06 01 	lds	r26, 0x0106
     c82:	b0 91 07 01 	lds	r27, 0x0107
     c86:	80 93 a0 01 	sts	0x01A0, r24
     c8a:	90 93 a1 01 	sts	0x01A1, r25
     c8e:	a0 93 a2 01 	sts	0x01A2, r26
     c92:	b0 93 a3 01 	sts	0x01A3, r27
	eestruct_var.setPointHist = currentHistSetPoint;
     c96:	80 91 00 01 	lds	r24, 0x0100
     c9a:	90 91 01 01 	lds	r25, 0x0101
     c9e:	a0 91 02 01 	lds	r26, 0x0102
     ca2:	b0 91 03 01 	lds	r27, 0x0103
     ca6:	80 93 a4 01 	sts	0x01A4, r24
     caa:	90 93 a5 01 	sts	0x01A5, r25
     cae:	a0 93 a6 01 	sts	0x01A6, r26
     cb2:	b0 93 a7 01 	sts	0x01A7, r27
	
	// save block
	eeprom_write_block((const void*)&eestruct_var,(void*)&eestruct_eemem,sizeof(eestruct_t));
     cb6:	49 e0       	ldi	r20, 0x09	; 9
     cb8:	50 e0       	ldi	r21, 0x00	; 0
     cba:	60 e0       	ldi	r22, 0x00	; 0
     cbc:	70 e0       	ldi	r23, 0x00	; 0
     cbe:	8f e9       	ldi	r24, 0x9F	; 159
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	39 c7       	rjmp	.+3698   	; 0x1b36 <__eewr_block_m128>
     cc4:	08 95       	ret

00000cc6 <showLcdSplash>:
/************************************************************************/
/* @show initial splash                                                                     */
/************************************************************************/
void showLcdSplash(void){
	
	LCD_gotoXY(2,0);
     cc6:	60 e0       	ldi	r22, 0x00	; 0
     cc8:	82 e0       	ldi	r24, 0x02	; 2
     cca:	d1 dc       	rcall	.-1630   	; 0x66e <LCD_gotoXY>
	LCD_sendString("Wine Control");
     ccc:	82 e1       	ldi	r24, 0x12	; 18
     cce:	91 e0       	ldi	r25, 0x01	; 1
     cd0:	b1 dc       	rcall	.-1694   	; 0x634 <LCD_sendString>
	LCD_gotoXY(1,1);
     cd2:	61 e0       	ldi	r22, 0x01	; 1
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	cb dc       	rcall	.-1642   	; 0x66e <LCD_gotoXY>
	LCD_sendString("Serafim Cunha");
     cd8:	8f e1       	ldi	r24, 0x1F	; 31
     cda:	91 e0       	ldi	r25, 0x01	; 1
     cdc:	ab dc       	rcall	.-1706   	; 0x634 <LCD_sendString>
     cde:	2f ef       	ldi	r18, 0xFF	; 255
     ce0:	87 ea       	ldi	r24, 0xA7	; 167
     ce2:	91 e6       	ldi	r25, 0x61	; 97
     ce4:	21 50       	subi	r18, 0x01	; 1
     ce6:	80 40       	sbci	r24, 0x00	; 0
     ce8:	90 40       	sbci	r25, 0x00	; 0
     cea:	e1 f7       	brne	.-8      	; 0xce4 <showLcdSplash+0x1e>
     cec:	00 c0       	rjmp	.+0      	; 0xcee <showLcdSplash+0x28>
     cee:	00 00       	nop
	_delay_ms(2000);
	LCD_clr();
     cf0:	98 cc       	rjmp	.-1744   	; 0x622 <LCD_clr>
     cf2:	08 95       	ret

00000cf4 <setLcdInitialFields>:
/************************************************************************/
/* @set lcd initail fields                                                                     */
/************************************************************************/
void setLcdInitialFields(void){

	LCD_clr();
     cf4:	96 dc       	rcall	.-1748   	; 0x622 <LCD_clr>
	LCD_gotoXY(0,0);
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	80 e0       	ldi	r24, 0x00	; 0
     cfa:	b9 dc       	rcall	.-1678   	; 0x66e <LCD_gotoXY>
	LCD_sendString("T:");
     cfc:	8e e2       	ldi	r24, 0x2E	; 46
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	99 dc       	rcall	.-1742   	; 0x634 <LCD_sendString>
	LCD_gotoXY(9,0);
     d02:	60 e0       	ldi	r22, 0x00	; 0
     d04:	89 e0       	ldi	r24, 0x09	; 9
     d06:	b3 dc       	rcall	.-1690   	; 0x66e <LCD_gotoXY>
	LCD_sendString("ST:");
     d08:	8d e2       	ldi	r24, 0x2D	; 45
     d0a:	91 e0       	ldi	r25, 0x01	; 1
     d0c:	93 dc       	rcall	.-1754   	; 0x634 <LCD_sendString>
	
	// sendond filds	
	LCD_gotoXY(0,1);
     d0e:	61 e0       	ldi	r22, 0x01	; 1
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	ad dc       	rcall	.-1702   	; 0x66e <LCD_gotoXY>
	LCD_sendString("S:");
     d14:	81 e3       	ldi	r24, 0x31	; 49
     d16:	91 e0       	ldi	r25, 0x01	; 1
     d18:	8d dc       	rcall	.-1766   	; 0x634 <LCD_sendString>
	LCD_gotoXY(9,1);
     d1a:	61 e0       	ldi	r22, 0x01	; 1
     d1c:	89 e0       	ldi	r24, 0x09	; 9
     d1e:	a7 dc       	rcall	.-1714   	; 0x66e <LCD_gotoXY>
	LCD_sendString("D:");	
     d20:	84 e3       	ldi	r24, 0x34	; 52
     d22:	91 e0       	ldi	r25, 0x01	; 1
     d24:	87 cc       	rjmp	.-1778   	; 0x634 <LCD_sendString>
     d26:	08 95       	ret

00000d28 <showLcdSavedMessage>:
/************************************************************************/
/* @show saved messsage on lcd                                                                      */
/************************************************************************/
void showLcdSavedMessage(void){
	
	LCD_clr();
     d28:	7c dc       	rcall	.-1800   	; 0x622 <LCD_clr>
	LCD_gotoXY(7,0);
     d2a:	60 e0       	ldi	r22, 0x00	; 0
     d2c:	87 e0       	ldi	r24, 0x07	; 7
     d2e:	9f dc       	rcall	.-1730   	; 0x66e <LCD_gotoXY>
	LCD_sendString(" SAVED");
     d30:	87 e3       	ldi	r24, 0x37	; 55
     d32:	91 e0       	ldi	r25, 0x01	; 1
     d34:	7f dc       	rcall	.-1794   	; 0x634 <LCD_sendString>
     d36:	2f ef       	ldi	r18, 0xFF	; 255
     d38:	89 e6       	ldi	r24, 0x69	; 105
     d3a:	98 e1       	ldi	r25, 0x18	; 24
     d3c:	21 50       	subi	r18, 0x01	; 1
     d3e:	80 40       	sbci	r24, 0x00	; 0
     d40:	90 40       	sbci	r25, 0x00	; 0
     d42:	e1 f7       	brne	.-8      	; 0xd3c <showLcdSavedMessage+0x14>
     d44:	00 c0       	rjmp	.+0      	; 0xd46 <showLcdSavedMessage+0x1e>
     d46:	00 00       	nop
     d48:	08 95       	ret

00000d4a <splitDouble>:
}

/************************************************************************/
/* @ convert double two parts to print                                                                     */
/************************************************************************/
void splitDouble(double *d, int precision, int *intPart, int *decPart ){
     d4a:	8f 92       	push	r8
     d4c:	9f 92       	push	r9
     d4e:	af 92       	push	r10
     d50:	bf 92       	push	r11
     d52:	cf 92       	push	r12
     d54:	df 92       	push	r13
     d56:	ef 92       	push	r14
     d58:	ff 92       	push	r15
     d5a:	0f 93       	push	r16
     d5c:	1f 93       	push	r17
     d5e:	cf 93       	push	r28
     d60:	df 93       	push	r29
     d62:	ec 01       	movw	r28, r24
     d64:	7b 01       	movw	r14, r22
     d66:	6a 01       	movw	r12, r20
     d68:	89 01       	movw	r16, r18
	*intPart = (int)*d;
     d6a:	68 81       	ld	r22, Y
     d6c:	79 81       	ldd	r23, Y+1	; 0x01
     d6e:	8a 81       	ldd	r24, Y+2	; 0x02
     d70:	9b 81       	ldd	r25, Y+3	; 0x03
     d72:	23 d2       	rcall	.+1094   	; 0x11ba <__fixsfsi>
     d74:	4b 01       	movw	r8, r22
     d76:	5c 01       	movw	r10, r24
     d78:	f6 01       	movw	r30, r12
     d7a:	71 83       	std	Z+1, r23	; 0x01
     d7c:	60 83       	st	Z, r22
	*decPart = (int)( (*d - *intPart) *pow(10, precision) + 0.5);
     d7e:	b7 01       	movw	r22, r14
     d80:	88 27       	eor	r24, r24
     d82:	77 fd       	sbrc	r23, 7
     d84:	80 95       	com	r24
     d86:	98 2f       	mov	r25, r24
     d88:	4b d2       	rcall	.+1174   	; 0x1220 <__floatsisf>
     d8a:	9b 01       	movw	r18, r22
     d8c:	ac 01       	movw	r20, r24
     d8e:	60 e0       	ldi	r22, 0x00	; 0
     d90:	70 e0       	ldi	r23, 0x00	; 0
     d92:	80 e2       	ldi	r24, 0x20	; 32
     d94:	91 e4       	ldi	r25, 0x41	; 65
     d96:	35 d4       	rcall	.+2154   	; 0x1602 <pow>
     d98:	6b 01       	movw	r12, r22
     d9a:	7c 01       	movw	r14, r24
     d9c:	b4 01       	movw	r22, r8
     d9e:	88 27       	eor	r24, r24
     da0:	77 fd       	sbrc	r23, 7
     da2:	80 95       	com	r24
     da4:	98 2f       	mov	r25, r24
     da6:	3c d2       	rcall	.+1144   	; 0x1220 <__floatsisf>
     da8:	9b 01       	movw	r18, r22
     daa:	ac 01       	movw	r20, r24
     dac:	68 81       	ld	r22, Y
     dae:	79 81       	ldd	r23, Y+1	; 0x01
     db0:	8a 81       	ldd	r24, Y+2	; 0x02
     db2:	9b 81       	ldd	r25, Y+3	; 0x03
     db4:	00 d1       	rcall	.+512    	; 0xfb6 <__subsf3>
     db6:	a7 01       	movw	r20, r14
     db8:	96 01       	movw	r18, r12
     dba:	c0 d3       	rcall	.+1920   	; 0x153c <__mulsf3>
     dbc:	20 e0       	ldi	r18, 0x00	; 0
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	40 e0       	ldi	r20, 0x00	; 0
     dc2:	5f e3       	ldi	r21, 0x3F	; 63
     dc4:	f9 d0       	rcall	.+498    	; 0xfb8 <__addsf3>
     dc6:	f9 d1       	rcall	.+1010   	; 0x11ba <__fixsfsi>
     dc8:	f8 01       	movw	r30, r16
     dca:	71 83       	std	Z+1, r23	; 0x01
     dcc:	60 83       	st	Z, r22
	
}
     dce:	df 91       	pop	r29
     dd0:	cf 91       	pop	r28
     dd2:	1f 91       	pop	r17
     dd4:	0f 91       	pop	r16
     dd6:	ff 90       	pop	r15
     dd8:	ef 90       	pop	r14
     dda:	df 90       	pop	r13
     ddc:	cf 90       	pop	r12
     dde:	bf 90       	pop	r11
     de0:	af 90       	pop	r10
     de2:	9f 90       	pop	r9
     de4:	8f 90       	pop	r8
     de6:	08 95       	ret

00000de8 <updateLcd>:

/************************************************************************/
/* @update lcd with current vars                                                                     */
/************************************************************************/ 
void updateLcd(void){
     de8:	ef 92       	push	r14
     dea:	ff 92       	push	r15
     dec:	0f 93       	push	r16
     dee:	1f 93       	push	r17
     df0:	cf 93       	push	r28
     df2:	df 93       	push	r29
     df4:	cd b7       	in	r28, 0x3d	; 61
     df6:	de b7       	in	r29, 0x3e	; 62
     df8:	28 97       	sbiw	r28, 0x08	; 8
     dfa:	0f b6       	in	r0, 0x3f	; 63
     dfc:	f8 94       	cli
     dfe:	de bf       	out	0x3e, r29	; 62
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	cd bf       	out	0x3d, r28	; 61
	char buffer[4];
	int integerPart;
	int decimalPart;
	// RELAY
	LCD_gotoXY(13,0);
     e04:	60 e0       	ldi	r22, 0x00	; 0
     e06:	8d e0       	ldi	r24, 0x0D	; 13
     e08:	32 dc       	rcall	.-1948   	; 0x66e <LCD_gotoXY>
	if(currentStatus)LCD_sendString("ON ");
     e0a:	80 91 5c 01 	lds	r24, 0x015C
     e0e:	88 23       	and	r24, r24
     e10:	21 f0       	breq	.+8      	; 0xe1a <updateLcd+0x32>
     e12:	8e e3       	ldi	r24, 0x3E	; 62
     e14:	91 e0       	ldi	r25, 0x01	; 1
     e16:	0e dc       	rcall	.-2020   	; 0x634 <LCD_sendString>
     e18:	03 c0       	rjmp	.+6      	; 0xe20 <updateLcd+0x38>
	else LCD_sendString("OFF");
     e1a:	82 e4       	ldi	r24, 0x42	; 66
     e1c:	91 e0       	ldi	r25, 0x01	; 1
     e1e:	0a dc       	rcall	.-2028   	; 0x634 <LCD_sendString>
	
	
	// current temp
	LCD_gotoXY(2,0);
     e20:	60 e0       	ldi	r22, 0x00	; 0
     e22:	82 e0       	ldi	r24, 0x02	; 2
     e24:	24 dc       	rcall	.-1976   	; 0x66e <LCD_gotoXY>
	splitDouble(&currentTemp,1,&integerPart,&decimalPart);
     e26:	9e 01       	movw	r18, r28
     e28:	29 5f       	subi	r18, 0xF9	; 249
     e2a:	3f 4f       	sbci	r19, 0xFF	; 255
     e2c:	ae 01       	movw	r20, r28
     e2e:	4b 5f       	subi	r20, 0xFB	; 251
     e30:	5f 4f       	sbci	r21, 0xFF	; 255
     e32:	61 e0       	ldi	r22, 0x01	; 1
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	88 e0       	ldi	r24, 0x08	; 8
     e38:	91 e0       	ldi	r25, 0x01	; 1
     e3a:	87 df       	rcall	.-242    	; 0xd4a <splitDouble>
	sprintf(buffer,"%3d.%1d",integerPart, decimalPart);
     e3c:	88 85       	ldd	r24, Y+8	; 0x08
     e3e:	8f 93       	push	r24
     e40:	8f 81       	ldd	r24, Y+7	; 0x07
     e42:	8f 93       	push	r24
     e44:	8e 81       	ldd	r24, Y+6	; 0x06
     e46:	8f 93       	push	r24
     e48:	8d 81       	ldd	r24, Y+5	; 0x05
     e4a:	8f 93       	push	r24
     e4c:	0f 2e       	mov	r0, r31
     e4e:	f6 e4       	ldi	r31, 0x46	; 70
     e50:	ef 2e       	mov	r14, r31
     e52:	f1 e0       	ldi	r31, 0x01	; 1
     e54:	ff 2e       	mov	r15, r31
     e56:	f0 2d       	mov	r31, r0
     e58:	ff 92       	push	r15
     e5a:	ef 92       	push	r14
     e5c:	8e 01       	movw	r16, r28
     e5e:	0f 5f       	subi	r16, 0xFF	; 255
     e60:	1f 4f       	sbci	r17, 0xFF	; 255
     e62:	1f 93       	push	r17
     e64:	0f 93       	push	r16
     e66:	3b d4       	rcall	.+2166   	; 0x16de <sprintf>
	LCD_sendString(buffer);
     e68:	c8 01       	movw	r24, r16
     e6a:	e4 db       	rcall	.-2104   	; 0x634 <LCD_sendString>
	
	// current setpoint
	LCD_gotoXY(2,1);
     e6c:	61 e0       	ldi	r22, 0x01	; 1
     e6e:	82 e0       	ldi	r24, 0x02	; 2
     e70:	fe db       	rcall	.-2052   	; 0x66e <LCD_gotoXY>
	splitDouble(&currentTempSetPoint,1,&integerPart,&decimalPart);
     e72:	9e 01       	movw	r18, r28
     e74:	29 5f       	subi	r18, 0xF9	; 249
     e76:	3f 4f       	sbci	r19, 0xFF	; 255
     e78:	ae 01       	movw	r20, r28
     e7a:	4b 5f       	subi	r20, 0xFB	; 251
     e7c:	5f 4f       	sbci	r21, 0xFF	; 255
     e7e:	61 e0       	ldi	r22, 0x01	; 1
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	84 e0       	ldi	r24, 0x04	; 4
     e84:	91 e0       	ldi	r25, 0x01	; 1
     e86:	61 df       	rcall	.-318    	; 0xd4a <splitDouble>
	sprintf(buffer,"%3d.%1d",integerPart, decimalPart);
     e88:	88 85       	ldd	r24, Y+8	; 0x08
     e8a:	8f 93       	push	r24
     e8c:	8f 81       	ldd	r24, Y+7	; 0x07
     e8e:	8f 93       	push	r24
     e90:	8e 81       	ldd	r24, Y+6	; 0x06
     e92:	8f 93       	push	r24
     e94:	8d 81       	ldd	r24, Y+5	; 0x05
     e96:	8f 93       	push	r24
     e98:	ff 92       	push	r15
     e9a:	ef 92       	push	r14
     e9c:	1f 93       	push	r17
     e9e:	0f 93       	push	r16
     ea0:	1e d4       	rcall	.+2108   	; 0x16de <sprintf>
	LCD_sendString(buffer);
     ea2:	c8 01       	movw	r24, r16
     ea4:	c7 db       	rcall	.-2162   	; 0x634 <LCD_sendString>
	
	// current hist
	LCD_gotoXY(11,1);
     ea6:	61 e0       	ldi	r22, 0x01	; 1
     ea8:	8b e0       	ldi	r24, 0x0B	; 11
     eaa:	e1 db       	rcall	.-2110   	; 0x66e <LCD_gotoXY>
	splitDouble(&currentHistSetPoint,1,&integerPart,&decimalPart);
     eac:	9e 01       	movw	r18, r28
     eae:	29 5f       	subi	r18, 0xF9	; 249
     eb0:	3f 4f       	sbci	r19, 0xFF	; 255
     eb2:	ae 01       	movw	r20, r28
     eb4:	4b 5f       	subi	r20, 0xFB	; 251
     eb6:	5f 4f       	sbci	r21, 0xFF	; 255
     eb8:	61 e0       	ldi	r22, 0x01	; 1
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	91 e0       	ldi	r25, 0x01	; 1
     ec0:	44 df       	rcall	.-376    	; 0xd4a <splitDouble>
	sprintf(buffer,"%3d.%1d",integerPart, decimalPart);
     ec2:	88 85       	ldd	r24, Y+8	; 0x08
     ec4:	8f 93       	push	r24
     ec6:	8f 81       	ldd	r24, Y+7	; 0x07
     ec8:	8f 93       	push	r24
     eca:	8e 81       	ldd	r24, Y+6	; 0x06
     ecc:	8f 93       	push	r24
     ece:	8d 81       	ldd	r24, Y+5	; 0x05
     ed0:	8f 93       	push	r24
     ed2:	ff 92       	push	r15
     ed4:	ef 92       	push	r14
     ed6:	1f 93       	push	r17
     ed8:	0f 93       	push	r16
     eda:	01 d4       	rcall	.+2050   	; 0x16de <sprintf>
	LCD_sendString(buffer);
     edc:	c8 01       	movw	r24, r16
     ede:	aa db       	rcall	.-2220   	; 0x634 <LCD_sendString>
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	f8 94       	cli
     ee4:	de bf       	out	0x3e, r29	; 62
     ee6:	0f be       	out	0x3f, r0	; 63
     ee8:	cd bf       	out	0x3d, r28	; 61
	

}
     eea:	28 96       	adiw	r28, 0x08	; 8
     eec:	0f b6       	in	r0, 0x3f	; 63
     eee:	f8 94       	cli
     ef0:	de bf       	out	0x3e, r29	; 62
     ef2:	0f be       	out	0x3f, r0	; 63
     ef4:	cd bf       	out	0x3d, r28	; 61
     ef6:	df 91       	pop	r29
     ef8:	cf 91       	pop	r28
     efa:	1f 91       	pop	r17
     efc:	0f 91       	pop	r16
     efe:	ff 90       	pop	r15
     f00:	ef 90       	pop	r14
     f02:	08 95       	ret

00000f04 <main>:


// main loop
int main(void){
	
	initGPIO();
     f04:	42 de       	rcall	.-892    	; 0xb8a <initGPIO>
	LCD_init();
     f06:	e3 db       	rcall	.-2106   	; 0x6ce <LCD_init>
	
	
	
	
	showLcdSplash();
     f08:	de de       	rcall	.-580    	; 0xcc6 <showLcdSplash>
	setLcdInitialFields();
     f0a:	f4 de       	rcall	.-536    	; 0xcf4 <setLcdInitialFields>
	paramLoadFromEeprom();
     f0c:	82 de       	rcall	.-764    	; 0xc12 <paramLoadFromEeprom>
	
	USART1_config(USART1_MY_UBBRN,USART_DATA_FORMAT_8BITS|USART_STOP_BITS_1,USART_TRANSMIT_ENABLE|USART_RECEIVE_ENABLE| USART_INTERRUPT_ENABLE);
     f0e:	48 e9       	ldi	r20, 0x98	; 152
     f10:	66 e0       	ldi	r22, 0x06	; 6
     f12:	80 e1       	ldi	r24, 0x10	; 16
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	30 dc       	rcall	.-1952   	; 0x778 <USART1_config>
	
	USART1_sendStr("Hello");
     f18:	8e e4       	ldi	r24, 0x4E	; 78
     f1a:	91 e0       	ldi	r25, 0x01	; 1
     f1c:	3e dc       	rcall	.-1924   	; 0x79a <USART1_sendStr>
	
	schedulerInit();
     f1e:	79 dc       	rcall	.-1806   	; 0x812 <schedulerInit>
	
	// check for the default values
	
	sei(); //enable interrups
     f20:	78 94       	sei
	
    while(1){
		
		
		// cintrol zone
		if(flagTaskControl){
     f22:	80 91 5e 01 	lds	r24, 0x015E
     f26:	88 23       	and	r24, r24
     f28:	49 f1       	breq	.+82     	; 0xf7c <main+0x78>
			
			LED_RUN_ON;
     f2a:	c2 98       	cbi	0x18, 2	; 24
     f2c:	2f ef       	ldi	r18, 0xFF	; 255
     f2e:	80 e7       	ldi	r24, 0x70	; 112
     f30:	92 e0       	ldi	r25, 0x02	; 2
     f32:	21 50       	subi	r18, 0x01	; 1
     f34:	80 40       	sbci	r24, 0x00	; 0
     f36:	90 40       	sbci	r25, 0x00	; 0
     f38:	e1 f7       	brne	.-8      	; 0xf32 <main+0x2e>
     f3a:	00 c0       	rjmp	.+0      	; 0xf3c <main+0x38>
     f3c:	00 00       	nop
			//currentTemp = readTemperature();
			//currentTemp -=1.0;
			_delay_ms(50);
			LED_RUN_OFF;
     f3e:	c2 9a       	sbi	0x18, 2	; 24
			
			
			
			currentStatus = checkTempError(currentTemp,currentTempSetPoint,currentHistSetPoint); // chec the out
     f40:	e0 90 00 01 	lds	r14, 0x0100
     f44:	f0 90 01 01 	lds	r15, 0x0101
     f48:	00 91 02 01 	lds	r16, 0x0102
     f4c:	10 91 03 01 	lds	r17, 0x0103
     f50:	20 91 04 01 	lds	r18, 0x0104
     f54:	30 91 05 01 	lds	r19, 0x0105
     f58:	40 91 06 01 	lds	r20, 0x0106
     f5c:	50 91 07 01 	lds	r21, 0x0107
     f60:	60 91 08 01 	lds	r22, 0x0108
     f64:	70 91 09 01 	lds	r23, 0x0109
     f68:	80 91 0a 01 	lds	r24, 0x010A
     f6c:	90 91 0b 01 	lds	r25, 0x010B
     f70:	b9 dc       	rcall	.-1678   	; 0x8e4 <checkTempError>
     f72:	80 93 5c 01 	sts	0x015C, r24
			setOutputRelay(currentStatus);
     f76:	01 de       	rcall	.-1022   	; 0xb7a <setOutputRelay>
			flagTaskControl=0;
     f78:	10 92 5e 01 	sts	0x015E, r1
		}
		
		// user bottons area
		if(flagTaskReadButtons){
     f7c:	80 91 60 01 	lds	r24, 0x0160
     f80:	88 23       	and	r24, r24
     f82:	31 f0       	breq	.+12     	; 0xf90 <main+0x8c>
			uint8_t portVal = readButtons();
     f84:	f6 dd       	rcall	.-1044   	; 0xb72 <readButtons>
			uint8_t code = decodeButton(portVal);
     f86:	51 dc       	rcall	.-1886   	; 0x82a <decodeButton>
			code = debounceKey(code);
     f88:	66 dc       	rcall	.-1844   	; 0x856 <debounceKey>
			#ifdef MAIN_DEBUG
			sprintf(debugBuffer,"Key %d",code);
			USART1_sendStr(debugBuffer);
			#endif
			
			stateMachine(code); // go to machine
     f8a:	a6 dd       	rcall	.-1204   	; 0xad8 <stateMachine>
			
			flagTaskReadButtons=0;
     f8c:	10 92 60 01 	sts	0x0160, r1
		}
		
		 
		 // lcd update area
		 if(flagTaskUpdateLcd){
     f90:	80 91 5f 01 	lds	r24, 0x015F
     f94:	88 23       	and	r24, r24
     f96:	19 f0       	breq	.+6      	; 0xf9e <main+0x9a>
			 
			 //showLcdSavedMessage();
			 updateLcd(); // update the lcd
     f98:	27 df       	rcall	.-434    	; 0xde8 <updateLcd>
			 
			 flagTaskUpdateLcd=0;
     f9a:	10 92 5f 01 	sts	0x015F, r1
		 }
		 
		 // save to eeprom
		 if(flagSaveParametersEeprom){
     f9e:	80 91 5d 01 	lds	r24, 0x015D
     fa2:	88 23       	and	r24, r24
     fa4:	09 f4       	brne	.+2      	; 0xfa8 <main+0xa4>
     fa6:	bd cf       	rjmp	.-134    	; 0xf22 <main+0x1e>
			 
			 paramSavetoEeprom(); // save value sto eeprom
     fa8:	63 de       	rcall	.-826    	; 0xc70 <paramSavetoEeprom>
			 showLcdSavedMessage();
     faa:	be de       	rcall	.-644    	; 0xd28 <showLcdSavedMessage>
			 setLcdInitialFields();
     fac:	a3 de       	rcall	.-698    	; 0xcf4 <setLcdInitialFields>
			 updateLcd();
     fae:	1c df       	rcall	.-456    	; 0xde8 <updateLcd>
			 flagSaveParametersEeprom=0;
     fb0:	10 92 5d 01 	sts	0x015D, r1
     fb4:	b6 cf       	rjmp	.-148    	; 0xf22 <main+0x1e>

00000fb6 <__subsf3>:
     fb6:	50 58       	subi	r21, 0x80	; 128

00000fb8 <__addsf3>:
     fb8:	bb 27       	eor	r27, r27
     fba:	aa 27       	eor	r26, r26
     fbc:	0e d0       	rcall	.+28     	; 0xfda <__addsf3x>
     fbe:	cb c1       	rjmp	.+918    	; 0x1356 <__fp_round>
     fc0:	bc d1       	rcall	.+888    	; 0x133a <__fp_pscA>
     fc2:	30 f0       	brcs	.+12     	; 0xfd0 <__addsf3+0x18>
     fc4:	c1 d1       	rcall	.+898    	; 0x1348 <__fp_pscB>
     fc6:	20 f0       	brcs	.+8      	; 0xfd0 <__addsf3+0x18>
     fc8:	31 f4       	brne	.+12     	; 0xfd6 <__addsf3+0x1e>
     fca:	9f 3f       	cpi	r25, 0xFF	; 255
     fcc:	11 f4       	brne	.+4      	; 0xfd2 <__addsf3+0x1a>
     fce:	1e f4       	brtc	.+6      	; 0xfd6 <__addsf3+0x1e>
     fd0:	8c c1       	rjmp	.+792    	; 0x12ea <__fp_nan>
     fd2:	0e f4       	brtc	.+2      	; 0xfd6 <__addsf3+0x1e>
     fd4:	e0 95       	com	r30
     fd6:	e7 fb       	bst	r30, 7
     fd8:	82 c1       	rjmp	.+772    	; 0x12de <__fp_inf>

00000fda <__addsf3x>:
     fda:	e9 2f       	mov	r30, r25
     fdc:	cd d1       	rcall	.+922    	; 0x1378 <__fp_split3>
     fde:	80 f3       	brcs	.-32     	; 0xfc0 <__addsf3+0x8>
     fe0:	ba 17       	cp	r27, r26
     fe2:	62 07       	cpc	r22, r18
     fe4:	73 07       	cpc	r23, r19
     fe6:	84 07       	cpc	r24, r20
     fe8:	95 07       	cpc	r25, r21
     fea:	18 f0       	brcs	.+6      	; 0xff2 <__addsf3x+0x18>
     fec:	71 f4       	brne	.+28     	; 0x100a <__addsf3x+0x30>
     fee:	9e f5       	brtc	.+102    	; 0x1056 <__addsf3x+0x7c>
     ff0:	e5 c1       	rjmp	.+970    	; 0x13bc <__fp_zero>
     ff2:	0e f4       	brtc	.+2      	; 0xff6 <__addsf3x+0x1c>
     ff4:	e0 95       	com	r30
     ff6:	0b 2e       	mov	r0, r27
     ff8:	ba 2f       	mov	r27, r26
     ffa:	a0 2d       	mov	r26, r0
     ffc:	0b 01       	movw	r0, r22
     ffe:	b9 01       	movw	r22, r18
    1000:	90 01       	movw	r18, r0
    1002:	0c 01       	movw	r0, r24
    1004:	ca 01       	movw	r24, r20
    1006:	a0 01       	movw	r20, r0
    1008:	11 24       	eor	r1, r1
    100a:	ff 27       	eor	r31, r31
    100c:	59 1b       	sub	r21, r25
    100e:	99 f0       	breq	.+38     	; 0x1036 <__addsf3x+0x5c>
    1010:	59 3f       	cpi	r21, 0xF9	; 249
    1012:	50 f4       	brcc	.+20     	; 0x1028 <__addsf3x+0x4e>
    1014:	50 3e       	cpi	r21, 0xE0	; 224
    1016:	68 f1       	brcs	.+90     	; 0x1072 <__addsf3x+0x98>
    1018:	1a 16       	cp	r1, r26
    101a:	f0 40       	sbci	r31, 0x00	; 0
    101c:	a2 2f       	mov	r26, r18
    101e:	23 2f       	mov	r18, r19
    1020:	34 2f       	mov	r19, r20
    1022:	44 27       	eor	r20, r20
    1024:	58 5f       	subi	r21, 0xF8	; 248
    1026:	f3 cf       	rjmp	.-26     	; 0x100e <__addsf3x+0x34>
    1028:	46 95       	lsr	r20
    102a:	37 95       	ror	r19
    102c:	27 95       	ror	r18
    102e:	a7 95       	ror	r26
    1030:	f0 40       	sbci	r31, 0x00	; 0
    1032:	53 95       	inc	r21
    1034:	c9 f7       	brne	.-14     	; 0x1028 <__addsf3x+0x4e>
    1036:	7e f4       	brtc	.+30     	; 0x1056 <__addsf3x+0x7c>
    1038:	1f 16       	cp	r1, r31
    103a:	ba 0b       	sbc	r27, r26
    103c:	62 0b       	sbc	r22, r18
    103e:	73 0b       	sbc	r23, r19
    1040:	84 0b       	sbc	r24, r20
    1042:	ba f0       	brmi	.+46     	; 0x1072 <__addsf3x+0x98>
    1044:	91 50       	subi	r25, 0x01	; 1
    1046:	a1 f0       	breq	.+40     	; 0x1070 <__addsf3x+0x96>
    1048:	ff 0f       	add	r31, r31
    104a:	bb 1f       	adc	r27, r27
    104c:	66 1f       	adc	r22, r22
    104e:	77 1f       	adc	r23, r23
    1050:	88 1f       	adc	r24, r24
    1052:	c2 f7       	brpl	.-16     	; 0x1044 <__addsf3x+0x6a>
    1054:	0e c0       	rjmp	.+28     	; 0x1072 <__addsf3x+0x98>
    1056:	ba 0f       	add	r27, r26
    1058:	62 1f       	adc	r22, r18
    105a:	73 1f       	adc	r23, r19
    105c:	84 1f       	adc	r24, r20
    105e:	48 f4       	brcc	.+18     	; 0x1072 <__addsf3x+0x98>
    1060:	87 95       	ror	r24
    1062:	77 95       	ror	r23
    1064:	67 95       	ror	r22
    1066:	b7 95       	ror	r27
    1068:	f7 95       	ror	r31
    106a:	9e 3f       	cpi	r25, 0xFE	; 254
    106c:	08 f0       	brcs	.+2      	; 0x1070 <__addsf3x+0x96>
    106e:	b3 cf       	rjmp	.-154    	; 0xfd6 <__addsf3+0x1e>
    1070:	93 95       	inc	r25
    1072:	88 0f       	add	r24, r24
    1074:	08 f0       	brcs	.+2      	; 0x1078 <__addsf3x+0x9e>
    1076:	99 27       	eor	r25, r25
    1078:	ee 0f       	add	r30, r30
    107a:	97 95       	ror	r25
    107c:	87 95       	ror	r24
    107e:	08 95       	ret

00001080 <__cmpsf2>:
    1080:	0a d1       	rcall	.+532    	; 0x1296 <__fp_cmp>
    1082:	08 f4       	brcc	.+2      	; 0x1086 <__cmpsf2+0x6>
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	08 95       	ret

00001088 <__divsf3>:
    1088:	0c d0       	rcall	.+24     	; 0x10a2 <__divsf3x>
    108a:	65 c1       	rjmp	.+714    	; 0x1356 <__fp_round>
    108c:	5d d1       	rcall	.+698    	; 0x1348 <__fp_pscB>
    108e:	40 f0       	brcs	.+16     	; 0x10a0 <__divsf3+0x18>
    1090:	54 d1       	rcall	.+680    	; 0x133a <__fp_pscA>
    1092:	30 f0       	brcs	.+12     	; 0x10a0 <__divsf3+0x18>
    1094:	21 f4       	brne	.+8      	; 0x109e <__divsf3+0x16>
    1096:	5f 3f       	cpi	r21, 0xFF	; 255
    1098:	19 f0       	breq	.+6      	; 0x10a0 <__divsf3+0x18>
    109a:	21 c1       	rjmp	.+578    	; 0x12de <__fp_inf>
    109c:	51 11       	cpse	r21, r1
    109e:	8f c1       	rjmp	.+798    	; 0x13be <__fp_szero>
    10a0:	24 c1       	rjmp	.+584    	; 0x12ea <__fp_nan>

000010a2 <__divsf3x>:
    10a2:	6a d1       	rcall	.+724    	; 0x1378 <__fp_split3>
    10a4:	98 f3       	brcs	.-26     	; 0x108c <__divsf3+0x4>

000010a6 <__divsf3_pse>:
    10a6:	99 23       	and	r25, r25
    10a8:	c9 f3       	breq	.-14     	; 0x109c <__divsf3+0x14>
    10aa:	55 23       	and	r21, r21
    10ac:	b1 f3       	breq	.-20     	; 0x109a <__divsf3+0x12>
    10ae:	95 1b       	sub	r25, r21
    10b0:	55 0b       	sbc	r21, r21
    10b2:	bb 27       	eor	r27, r27
    10b4:	aa 27       	eor	r26, r26
    10b6:	62 17       	cp	r22, r18
    10b8:	73 07       	cpc	r23, r19
    10ba:	84 07       	cpc	r24, r20
    10bc:	38 f0       	brcs	.+14     	; 0x10cc <__divsf3_pse+0x26>
    10be:	9f 5f       	subi	r25, 0xFF	; 255
    10c0:	5f 4f       	sbci	r21, 0xFF	; 255
    10c2:	22 0f       	add	r18, r18
    10c4:	33 1f       	adc	r19, r19
    10c6:	44 1f       	adc	r20, r20
    10c8:	aa 1f       	adc	r26, r26
    10ca:	a9 f3       	breq	.-22     	; 0x10b6 <__divsf3_pse+0x10>
    10cc:	33 d0       	rcall	.+102    	; 0x1134 <__stack+0x35>
    10ce:	0e 2e       	mov	r0, r30
    10d0:	3a f0       	brmi	.+14     	; 0x10e0 <__divsf3_pse+0x3a>
    10d2:	e0 e8       	ldi	r30, 0x80	; 128
    10d4:	30 d0       	rcall	.+96     	; 0x1136 <__stack+0x37>
    10d6:	91 50       	subi	r25, 0x01	; 1
    10d8:	50 40       	sbci	r21, 0x00	; 0
    10da:	e6 95       	lsr	r30
    10dc:	00 1c       	adc	r0, r0
    10de:	ca f7       	brpl	.-14     	; 0x10d2 <__divsf3_pse+0x2c>
    10e0:	29 d0       	rcall	.+82     	; 0x1134 <__stack+0x35>
    10e2:	fe 2f       	mov	r31, r30
    10e4:	27 d0       	rcall	.+78     	; 0x1134 <__stack+0x35>
    10e6:	66 0f       	add	r22, r22
    10e8:	77 1f       	adc	r23, r23
    10ea:	88 1f       	adc	r24, r24
    10ec:	bb 1f       	adc	r27, r27
    10ee:	26 17       	cp	r18, r22
    10f0:	37 07       	cpc	r19, r23
    10f2:	48 07       	cpc	r20, r24
    10f4:	ab 07       	cpc	r26, r27
    10f6:	b0 e8       	ldi	r27, 0x80	; 128
    10f8:	09 f0       	breq	.+2      	; 0x10fc <__divsf3_pse+0x56>
    10fa:	bb 0b       	sbc	r27, r27
    10fc:	80 2d       	mov	r24, r0
    10fe:	bf 01       	movw	r22, r30
    1100:	ff 27       	eor	r31, r31
    1102:	93 58       	subi	r25, 0x83	; 131
    1104:	5f 4f       	sbci	r21, 0xFF	; 255
    1106:	2a f0       	brmi	.+10     	; 0x1112 <__stack+0x13>
    1108:	9e 3f       	cpi	r25, 0xFE	; 254
    110a:	51 05       	cpc	r21, r1
    110c:	68 f0       	brcs	.+26     	; 0x1128 <__stack+0x29>
    110e:	e7 c0       	rjmp	.+462    	; 0x12de <__fp_inf>
    1110:	56 c1       	rjmp	.+684    	; 0x13be <__fp_szero>
    1112:	5f 3f       	cpi	r21, 0xFF	; 255
    1114:	ec f3       	brlt	.-6      	; 0x1110 <__stack+0x11>
    1116:	98 3e       	cpi	r25, 0xE8	; 232
    1118:	dc f3       	brlt	.-10     	; 0x1110 <__stack+0x11>
    111a:	86 95       	lsr	r24
    111c:	77 95       	ror	r23
    111e:	67 95       	ror	r22
    1120:	b7 95       	ror	r27
    1122:	f7 95       	ror	r31
    1124:	9f 5f       	subi	r25, 0xFF	; 255
    1126:	c9 f7       	brne	.-14     	; 0x111a <__stack+0x1b>
    1128:	88 0f       	add	r24, r24
    112a:	91 1d       	adc	r25, r1
    112c:	96 95       	lsr	r25
    112e:	87 95       	ror	r24
    1130:	97 f9       	bld	r25, 7
    1132:	08 95       	ret
    1134:	e1 e0       	ldi	r30, 0x01	; 1
    1136:	66 0f       	add	r22, r22
    1138:	77 1f       	adc	r23, r23
    113a:	88 1f       	adc	r24, r24
    113c:	bb 1f       	adc	r27, r27
    113e:	62 17       	cp	r22, r18
    1140:	73 07       	cpc	r23, r19
    1142:	84 07       	cpc	r24, r20
    1144:	ba 07       	cpc	r27, r26
    1146:	20 f0       	brcs	.+8      	; 0x1150 <__stack+0x51>
    1148:	62 1b       	sub	r22, r18
    114a:	73 0b       	sbc	r23, r19
    114c:	84 0b       	sbc	r24, r20
    114e:	ba 0b       	sbc	r27, r26
    1150:	ee 1f       	adc	r30, r30
    1152:	88 f7       	brcc	.-30     	; 0x1136 <__stack+0x37>
    1154:	e0 95       	com	r30
    1156:	08 95       	ret
    1158:	19 f4       	brne	.+6      	; 0x1160 <__stack+0x61>
    115a:	0e f0       	brts	.+2      	; 0x115e <__stack+0x5f>
    115c:	c0 c0       	rjmp	.+384    	; 0x12de <__fp_inf>
    115e:	2e c1       	rjmp	.+604    	; 0x13bc <__fp_zero>
    1160:	c4 c0       	rjmp	.+392    	; 0x12ea <__fp_nan>

00001162 <exp>:
    1162:	12 d1       	rcall	.+548    	; 0x1388 <__fp_splitA>
    1164:	c8 f3       	brcs	.-14     	; 0x1158 <__stack+0x59>
    1166:	96 38       	cpi	r25, 0x86	; 134
    1168:	c0 f7       	brcc	.-16     	; 0x115a <__stack+0x5b>
    116a:	07 f8       	bld	r0, 7
    116c:	0f 92       	push	r0
    116e:	e8 94       	clt
    1170:	2b e3       	ldi	r18, 0x3B	; 59
    1172:	3a ea       	ldi	r19, 0xAA	; 170
    1174:	48 eb       	ldi	r20, 0xB8	; 184
    1176:	5f e7       	ldi	r21, 0x7F	; 127
    1178:	ef d1       	rcall	.+990    	; 0x1558 <__mulsf3_pse>
    117a:	0f 92       	push	r0
    117c:	0f 92       	push	r0
    117e:	0f 92       	push	r0
    1180:	4d b7       	in	r20, 0x3d	; 61
    1182:	5e b7       	in	r21, 0x3e	; 62
    1184:	0f 92       	push	r0
    1186:	a7 d1       	rcall	.+846    	; 0x14d6 <modf>
    1188:	ec e8       	ldi	r30, 0x8C	; 140
    118a:	f0 e0       	ldi	r31, 0x00	; 0
    118c:	b1 d0       	rcall	.+354    	; 0x12f0 <__fp_powser>
    118e:	4f 91       	pop	r20
    1190:	5f 91       	pop	r21
    1192:	ef 91       	pop	r30
    1194:	ff 91       	pop	r31
    1196:	e5 95       	asr	r30
    1198:	ee 1f       	adc	r30, r30
    119a:	ff 1f       	adc	r31, r31
    119c:	49 f0       	breq	.+18     	; 0x11b0 <exp+0x4e>
    119e:	fe 57       	subi	r31, 0x7E	; 126
    11a0:	e0 68       	ori	r30, 0x80	; 128
    11a2:	44 27       	eor	r20, r20
    11a4:	ee 0f       	add	r30, r30
    11a6:	44 1f       	adc	r20, r20
    11a8:	fa 95       	dec	r31
    11aa:	e1 f7       	brne	.-8      	; 0x11a4 <exp+0x42>
    11ac:	41 95       	neg	r20
    11ae:	55 0b       	sbc	r21, r21
    11b0:	19 d1       	rcall	.+562    	; 0x13e4 <ldexp>
    11b2:	0f 90       	pop	r0
    11b4:	07 fe       	sbrs	r0, 7
    11b6:	0d c1       	rjmp	.+538    	; 0x13d2 <inverse>
    11b8:	08 95       	ret

000011ba <__fixsfsi>:
    11ba:	04 d0       	rcall	.+8      	; 0x11c4 <__fixunssfsi>
    11bc:	68 94       	set
    11be:	b1 11       	cpse	r27, r1
    11c0:	fe c0       	rjmp	.+508    	; 0x13be <__fp_szero>
    11c2:	08 95       	ret

000011c4 <__fixunssfsi>:
    11c4:	e1 d0       	rcall	.+450    	; 0x1388 <__fp_splitA>
    11c6:	88 f0       	brcs	.+34     	; 0x11ea <__fixunssfsi+0x26>
    11c8:	9f 57       	subi	r25, 0x7F	; 127
    11ca:	90 f0       	brcs	.+36     	; 0x11f0 <__fixunssfsi+0x2c>
    11cc:	b9 2f       	mov	r27, r25
    11ce:	99 27       	eor	r25, r25
    11d0:	b7 51       	subi	r27, 0x17	; 23
    11d2:	a0 f0       	brcs	.+40     	; 0x11fc <__fixunssfsi+0x38>
    11d4:	d1 f0       	breq	.+52     	; 0x120a <__fixunssfsi+0x46>
    11d6:	66 0f       	add	r22, r22
    11d8:	77 1f       	adc	r23, r23
    11da:	88 1f       	adc	r24, r24
    11dc:	99 1f       	adc	r25, r25
    11de:	1a f0       	brmi	.+6      	; 0x11e6 <__fixunssfsi+0x22>
    11e0:	ba 95       	dec	r27
    11e2:	c9 f7       	brne	.-14     	; 0x11d6 <__fixunssfsi+0x12>
    11e4:	12 c0       	rjmp	.+36     	; 0x120a <__fixunssfsi+0x46>
    11e6:	b1 30       	cpi	r27, 0x01	; 1
    11e8:	81 f0       	breq	.+32     	; 0x120a <__fixunssfsi+0x46>
    11ea:	e8 d0       	rcall	.+464    	; 0x13bc <__fp_zero>
    11ec:	b1 e0       	ldi	r27, 0x01	; 1
    11ee:	08 95       	ret
    11f0:	e5 c0       	rjmp	.+458    	; 0x13bc <__fp_zero>
    11f2:	67 2f       	mov	r22, r23
    11f4:	78 2f       	mov	r23, r24
    11f6:	88 27       	eor	r24, r24
    11f8:	b8 5f       	subi	r27, 0xF8	; 248
    11fa:	39 f0       	breq	.+14     	; 0x120a <__fixunssfsi+0x46>
    11fc:	b9 3f       	cpi	r27, 0xF9	; 249
    11fe:	cc f3       	brlt	.-14     	; 0x11f2 <__fixunssfsi+0x2e>
    1200:	86 95       	lsr	r24
    1202:	77 95       	ror	r23
    1204:	67 95       	ror	r22
    1206:	b3 95       	inc	r27
    1208:	d9 f7       	brne	.-10     	; 0x1200 <__fixunssfsi+0x3c>
    120a:	3e f4       	brtc	.+14     	; 0x121a <__fixunssfsi+0x56>
    120c:	90 95       	com	r25
    120e:	80 95       	com	r24
    1210:	70 95       	com	r23
    1212:	61 95       	neg	r22
    1214:	7f 4f       	sbci	r23, 0xFF	; 255
    1216:	8f 4f       	sbci	r24, 0xFF	; 255
    1218:	9f 4f       	sbci	r25, 0xFF	; 255
    121a:	08 95       	ret

0000121c <__floatunsisf>:
    121c:	e8 94       	clt
    121e:	09 c0       	rjmp	.+18     	; 0x1232 <__floatsisf+0x12>

00001220 <__floatsisf>:
    1220:	97 fb       	bst	r25, 7
    1222:	3e f4       	brtc	.+14     	; 0x1232 <__floatsisf+0x12>
    1224:	90 95       	com	r25
    1226:	80 95       	com	r24
    1228:	70 95       	com	r23
    122a:	61 95       	neg	r22
    122c:	7f 4f       	sbci	r23, 0xFF	; 255
    122e:	8f 4f       	sbci	r24, 0xFF	; 255
    1230:	9f 4f       	sbci	r25, 0xFF	; 255
    1232:	99 23       	and	r25, r25
    1234:	a9 f0       	breq	.+42     	; 0x1260 <__floatsisf+0x40>
    1236:	f9 2f       	mov	r31, r25
    1238:	96 e9       	ldi	r25, 0x96	; 150
    123a:	bb 27       	eor	r27, r27
    123c:	93 95       	inc	r25
    123e:	f6 95       	lsr	r31
    1240:	87 95       	ror	r24
    1242:	77 95       	ror	r23
    1244:	67 95       	ror	r22
    1246:	b7 95       	ror	r27
    1248:	f1 11       	cpse	r31, r1
    124a:	f8 cf       	rjmp	.-16     	; 0x123c <__floatsisf+0x1c>
    124c:	fa f4       	brpl	.+62     	; 0x128c <__floatsisf+0x6c>
    124e:	bb 0f       	add	r27, r27
    1250:	11 f4       	brne	.+4      	; 0x1256 <__floatsisf+0x36>
    1252:	60 ff       	sbrs	r22, 0
    1254:	1b c0       	rjmp	.+54     	; 0x128c <__floatsisf+0x6c>
    1256:	6f 5f       	subi	r22, 0xFF	; 255
    1258:	7f 4f       	sbci	r23, 0xFF	; 255
    125a:	8f 4f       	sbci	r24, 0xFF	; 255
    125c:	9f 4f       	sbci	r25, 0xFF	; 255
    125e:	16 c0       	rjmp	.+44     	; 0x128c <__floatsisf+0x6c>
    1260:	88 23       	and	r24, r24
    1262:	11 f0       	breq	.+4      	; 0x1268 <__floatsisf+0x48>
    1264:	96 e9       	ldi	r25, 0x96	; 150
    1266:	11 c0       	rjmp	.+34     	; 0x128a <__floatsisf+0x6a>
    1268:	77 23       	and	r23, r23
    126a:	21 f0       	breq	.+8      	; 0x1274 <__floatsisf+0x54>
    126c:	9e e8       	ldi	r25, 0x8E	; 142
    126e:	87 2f       	mov	r24, r23
    1270:	76 2f       	mov	r23, r22
    1272:	05 c0       	rjmp	.+10     	; 0x127e <__floatsisf+0x5e>
    1274:	66 23       	and	r22, r22
    1276:	71 f0       	breq	.+28     	; 0x1294 <__floatsisf+0x74>
    1278:	96 e8       	ldi	r25, 0x86	; 134
    127a:	86 2f       	mov	r24, r22
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	2a f0       	brmi	.+10     	; 0x128c <__floatsisf+0x6c>
    1282:	9a 95       	dec	r25
    1284:	66 0f       	add	r22, r22
    1286:	77 1f       	adc	r23, r23
    1288:	88 1f       	adc	r24, r24
    128a:	da f7       	brpl	.-10     	; 0x1282 <__floatsisf+0x62>
    128c:	88 0f       	add	r24, r24
    128e:	96 95       	lsr	r25
    1290:	87 95       	ror	r24
    1292:	97 f9       	bld	r25, 7
    1294:	08 95       	ret

00001296 <__fp_cmp>:
    1296:	99 0f       	add	r25, r25
    1298:	00 08       	sbc	r0, r0
    129a:	55 0f       	add	r21, r21
    129c:	aa 0b       	sbc	r26, r26
    129e:	e0 e8       	ldi	r30, 0x80	; 128
    12a0:	fe ef       	ldi	r31, 0xFE	; 254
    12a2:	16 16       	cp	r1, r22
    12a4:	17 06       	cpc	r1, r23
    12a6:	e8 07       	cpc	r30, r24
    12a8:	f9 07       	cpc	r31, r25
    12aa:	c0 f0       	brcs	.+48     	; 0x12dc <__fp_cmp+0x46>
    12ac:	12 16       	cp	r1, r18
    12ae:	13 06       	cpc	r1, r19
    12b0:	e4 07       	cpc	r30, r20
    12b2:	f5 07       	cpc	r31, r21
    12b4:	98 f0       	brcs	.+38     	; 0x12dc <__fp_cmp+0x46>
    12b6:	62 1b       	sub	r22, r18
    12b8:	73 0b       	sbc	r23, r19
    12ba:	84 0b       	sbc	r24, r20
    12bc:	95 0b       	sbc	r25, r21
    12be:	39 f4       	brne	.+14     	; 0x12ce <__fp_cmp+0x38>
    12c0:	0a 26       	eor	r0, r26
    12c2:	61 f0       	breq	.+24     	; 0x12dc <__fp_cmp+0x46>
    12c4:	23 2b       	or	r18, r19
    12c6:	24 2b       	or	r18, r20
    12c8:	25 2b       	or	r18, r21
    12ca:	21 f4       	brne	.+8      	; 0x12d4 <__fp_cmp+0x3e>
    12cc:	08 95       	ret
    12ce:	0a 26       	eor	r0, r26
    12d0:	09 f4       	brne	.+2      	; 0x12d4 <__fp_cmp+0x3e>
    12d2:	a1 40       	sbci	r26, 0x01	; 1
    12d4:	a6 95       	lsr	r26
    12d6:	8f ef       	ldi	r24, 0xFF	; 255
    12d8:	81 1d       	adc	r24, r1
    12da:	81 1d       	adc	r24, r1
    12dc:	08 95       	ret

000012de <__fp_inf>:
    12de:	97 f9       	bld	r25, 7
    12e0:	9f 67       	ori	r25, 0x7F	; 127
    12e2:	80 e8       	ldi	r24, 0x80	; 128
    12e4:	70 e0       	ldi	r23, 0x00	; 0
    12e6:	60 e0       	ldi	r22, 0x00	; 0
    12e8:	08 95       	ret

000012ea <__fp_nan>:
    12ea:	9f ef       	ldi	r25, 0xFF	; 255
    12ec:	80 ec       	ldi	r24, 0xC0	; 192
    12ee:	08 95       	ret

000012f0 <__fp_powser>:
    12f0:	df 93       	push	r29
    12f2:	cf 93       	push	r28
    12f4:	1f 93       	push	r17
    12f6:	0f 93       	push	r16
    12f8:	ff 92       	push	r15
    12fa:	ef 92       	push	r14
    12fc:	df 92       	push	r13
    12fe:	7b 01       	movw	r14, r22
    1300:	8c 01       	movw	r16, r24
    1302:	68 94       	set
    1304:	05 c0       	rjmp	.+10     	; 0x1310 <__fp_powser+0x20>
    1306:	da 2e       	mov	r13, r26
    1308:	ef 01       	movw	r28, r30
    130a:	24 d1       	rcall	.+584    	; 0x1554 <__mulsf3x>
    130c:	fe 01       	movw	r30, r28
    130e:	e8 94       	clt
    1310:	a5 91       	lpm	r26, Z+
    1312:	25 91       	lpm	r18, Z+
    1314:	35 91       	lpm	r19, Z+
    1316:	45 91       	lpm	r20, Z+
    1318:	55 91       	lpm	r21, Z+
    131a:	ae f3       	brts	.-22     	; 0x1306 <__fp_powser+0x16>
    131c:	ef 01       	movw	r28, r30
    131e:	5d de       	rcall	.-838    	; 0xfda <__addsf3x>
    1320:	fe 01       	movw	r30, r28
    1322:	97 01       	movw	r18, r14
    1324:	a8 01       	movw	r20, r16
    1326:	da 94       	dec	r13
    1328:	79 f7       	brne	.-34     	; 0x1308 <__fp_powser+0x18>
    132a:	df 90       	pop	r13
    132c:	ef 90       	pop	r14
    132e:	ff 90       	pop	r15
    1330:	0f 91       	pop	r16
    1332:	1f 91       	pop	r17
    1334:	cf 91       	pop	r28
    1336:	df 91       	pop	r29
    1338:	08 95       	ret

0000133a <__fp_pscA>:
    133a:	00 24       	eor	r0, r0
    133c:	0a 94       	dec	r0
    133e:	16 16       	cp	r1, r22
    1340:	17 06       	cpc	r1, r23
    1342:	18 06       	cpc	r1, r24
    1344:	09 06       	cpc	r0, r25
    1346:	08 95       	ret

00001348 <__fp_pscB>:
    1348:	00 24       	eor	r0, r0
    134a:	0a 94       	dec	r0
    134c:	12 16       	cp	r1, r18
    134e:	13 06       	cpc	r1, r19
    1350:	14 06       	cpc	r1, r20
    1352:	05 06       	cpc	r0, r21
    1354:	08 95       	ret

00001356 <__fp_round>:
    1356:	09 2e       	mov	r0, r25
    1358:	03 94       	inc	r0
    135a:	00 0c       	add	r0, r0
    135c:	11 f4       	brne	.+4      	; 0x1362 <__fp_round+0xc>
    135e:	88 23       	and	r24, r24
    1360:	52 f0       	brmi	.+20     	; 0x1376 <__fp_round+0x20>
    1362:	bb 0f       	add	r27, r27
    1364:	40 f4       	brcc	.+16     	; 0x1376 <__fp_round+0x20>
    1366:	bf 2b       	or	r27, r31
    1368:	11 f4       	brne	.+4      	; 0x136e <__fp_round+0x18>
    136a:	60 ff       	sbrs	r22, 0
    136c:	04 c0       	rjmp	.+8      	; 0x1376 <__fp_round+0x20>
    136e:	6f 5f       	subi	r22, 0xFF	; 255
    1370:	7f 4f       	sbci	r23, 0xFF	; 255
    1372:	8f 4f       	sbci	r24, 0xFF	; 255
    1374:	9f 4f       	sbci	r25, 0xFF	; 255
    1376:	08 95       	ret

00001378 <__fp_split3>:
    1378:	57 fd       	sbrc	r21, 7
    137a:	90 58       	subi	r25, 0x80	; 128
    137c:	44 0f       	add	r20, r20
    137e:	55 1f       	adc	r21, r21
    1380:	59 f0       	breq	.+22     	; 0x1398 <__fp_splitA+0x10>
    1382:	5f 3f       	cpi	r21, 0xFF	; 255
    1384:	71 f0       	breq	.+28     	; 0x13a2 <__fp_splitA+0x1a>
    1386:	47 95       	ror	r20

00001388 <__fp_splitA>:
    1388:	88 0f       	add	r24, r24
    138a:	97 fb       	bst	r25, 7
    138c:	99 1f       	adc	r25, r25
    138e:	61 f0       	breq	.+24     	; 0x13a8 <__fp_splitA+0x20>
    1390:	9f 3f       	cpi	r25, 0xFF	; 255
    1392:	79 f0       	breq	.+30     	; 0x13b2 <__fp_splitA+0x2a>
    1394:	87 95       	ror	r24
    1396:	08 95       	ret
    1398:	12 16       	cp	r1, r18
    139a:	13 06       	cpc	r1, r19
    139c:	14 06       	cpc	r1, r20
    139e:	55 1f       	adc	r21, r21
    13a0:	f2 cf       	rjmp	.-28     	; 0x1386 <__fp_split3+0xe>
    13a2:	46 95       	lsr	r20
    13a4:	f1 df       	rcall	.-30     	; 0x1388 <__fp_splitA>
    13a6:	08 c0       	rjmp	.+16     	; 0x13b8 <__fp_splitA+0x30>
    13a8:	16 16       	cp	r1, r22
    13aa:	17 06       	cpc	r1, r23
    13ac:	18 06       	cpc	r1, r24
    13ae:	99 1f       	adc	r25, r25
    13b0:	f1 cf       	rjmp	.-30     	; 0x1394 <__fp_splitA+0xc>
    13b2:	86 95       	lsr	r24
    13b4:	71 05       	cpc	r23, r1
    13b6:	61 05       	cpc	r22, r1
    13b8:	08 94       	sec
    13ba:	08 95       	ret

000013bc <__fp_zero>:
    13bc:	e8 94       	clt

000013be <__fp_szero>:
    13be:	bb 27       	eor	r27, r27
    13c0:	66 27       	eor	r22, r22
    13c2:	77 27       	eor	r23, r23
    13c4:	cb 01       	movw	r24, r22
    13c6:	97 f9       	bld	r25, 7
    13c8:	08 95       	ret

000013ca <__gesf2>:
    13ca:	65 df       	rcall	.-310    	; 0x1296 <__fp_cmp>
    13cc:	08 f4       	brcc	.+2      	; 0x13d0 <__gesf2+0x6>
    13ce:	8f ef       	ldi	r24, 0xFF	; 255
    13d0:	08 95       	ret

000013d2 <inverse>:
    13d2:	9b 01       	movw	r18, r22
    13d4:	ac 01       	movw	r20, r24
    13d6:	60 e0       	ldi	r22, 0x00	; 0
    13d8:	70 e0       	ldi	r23, 0x00	; 0
    13da:	80 e8       	ldi	r24, 0x80	; 128
    13dc:	9f e3       	ldi	r25, 0x3F	; 63
    13de:	54 ce       	rjmp	.-856    	; 0x1088 <__divsf3>
    13e0:	7e cf       	rjmp	.-260    	; 0x12de <__fp_inf>
    13e2:	5b c1       	rjmp	.+694    	; 0x169a <__fp_mpack>

000013e4 <ldexp>:
    13e4:	d1 df       	rcall	.-94     	; 0x1388 <__fp_splitA>
    13e6:	e8 f3       	brcs	.-6      	; 0x13e2 <inverse+0x10>
    13e8:	99 23       	and	r25, r25
    13ea:	d9 f3       	breq	.-10     	; 0x13e2 <inverse+0x10>
    13ec:	94 0f       	add	r25, r20
    13ee:	51 1d       	adc	r21, r1
    13f0:	bb f3       	brvs	.-18     	; 0x13e0 <inverse+0xe>
    13f2:	91 50       	subi	r25, 0x01	; 1
    13f4:	50 40       	sbci	r21, 0x00	; 0
    13f6:	94 f0       	brlt	.+36     	; 0x141c <ldexp+0x38>
    13f8:	59 f0       	breq	.+22     	; 0x1410 <ldexp+0x2c>
    13fa:	88 23       	and	r24, r24
    13fc:	32 f0       	brmi	.+12     	; 0x140a <ldexp+0x26>
    13fe:	66 0f       	add	r22, r22
    1400:	77 1f       	adc	r23, r23
    1402:	88 1f       	adc	r24, r24
    1404:	91 50       	subi	r25, 0x01	; 1
    1406:	50 40       	sbci	r21, 0x00	; 0
    1408:	c1 f7       	brne	.-16     	; 0x13fa <ldexp+0x16>
    140a:	9e 3f       	cpi	r25, 0xFE	; 254
    140c:	51 05       	cpc	r21, r1
    140e:	44 f7       	brge	.-48     	; 0x13e0 <inverse+0xe>
    1410:	88 0f       	add	r24, r24
    1412:	91 1d       	adc	r25, r1
    1414:	96 95       	lsr	r25
    1416:	87 95       	ror	r24
    1418:	97 f9       	bld	r25, 7
    141a:	08 95       	ret
    141c:	5f 3f       	cpi	r21, 0xFF	; 255
    141e:	ac f0       	brlt	.+42     	; 0x144a <ldexp+0x66>
    1420:	98 3e       	cpi	r25, 0xE8	; 232
    1422:	9c f0       	brlt	.+38     	; 0x144a <ldexp+0x66>
    1424:	bb 27       	eor	r27, r27
    1426:	86 95       	lsr	r24
    1428:	77 95       	ror	r23
    142a:	67 95       	ror	r22
    142c:	b7 95       	ror	r27
    142e:	08 f4       	brcc	.+2      	; 0x1432 <ldexp+0x4e>
    1430:	b1 60       	ori	r27, 0x01	; 1
    1432:	93 95       	inc	r25
    1434:	c1 f7       	brne	.-16     	; 0x1426 <ldexp+0x42>
    1436:	bb 0f       	add	r27, r27
    1438:	58 f7       	brcc	.-42     	; 0x1410 <ldexp+0x2c>
    143a:	11 f4       	brne	.+4      	; 0x1440 <ldexp+0x5c>
    143c:	60 ff       	sbrs	r22, 0
    143e:	e8 cf       	rjmp	.-48     	; 0x1410 <ldexp+0x2c>
    1440:	6f 5f       	subi	r22, 0xFF	; 255
    1442:	7f 4f       	sbci	r23, 0xFF	; 255
    1444:	8f 4f       	sbci	r24, 0xFF	; 255
    1446:	9f 4f       	sbci	r25, 0xFF	; 255
    1448:	e3 cf       	rjmp	.-58     	; 0x1410 <ldexp+0x2c>
    144a:	b9 cf       	rjmp	.-142    	; 0x13be <__fp_szero>
    144c:	0e f0       	brts	.+2      	; 0x1450 <ldexp+0x6c>
    144e:	25 c1       	rjmp	.+586    	; 0x169a <__fp_mpack>
    1450:	4c cf       	rjmp	.-360    	; 0x12ea <__fp_nan>
    1452:	68 94       	set
    1454:	44 cf       	rjmp	.-376    	; 0x12de <__fp_inf>

00001456 <log>:
    1456:	98 df       	rcall	.-208    	; 0x1388 <__fp_splitA>
    1458:	c8 f3       	brcs	.-14     	; 0x144c <ldexp+0x68>
    145a:	99 23       	and	r25, r25
    145c:	d1 f3       	breq	.-12     	; 0x1452 <ldexp+0x6e>
    145e:	c6 f3       	brts	.-16     	; 0x1450 <ldexp+0x6c>
    1460:	df 93       	push	r29
    1462:	cf 93       	push	r28
    1464:	1f 93       	push	r17
    1466:	0f 93       	push	r16
    1468:	ff 92       	push	r15
    146a:	c9 2f       	mov	r28, r25
    146c:	dd 27       	eor	r29, r29
    146e:	88 23       	and	r24, r24
    1470:	2a f0       	brmi	.+10     	; 0x147c <log+0x26>
    1472:	21 97       	sbiw	r28, 0x01	; 1
    1474:	66 0f       	add	r22, r22
    1476:	77 1f       	adc	r23, r23
    1478:	88 1f       	adc	r24, r24
    147a:	da f7       	brpl	.-10     	; 0x1472 <log+0x1c>
    147c:	20 e0       	ldi	r18, 0x00	; 0
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	40 e8       	ldi	r20, 0x80	; 128
    1482:	5f eb       	ldi	r21, 0xBF	; 191
    1484:	9f e3       	ldi	r25, 0x3F	; 63
    1486:	88 39       	cpi	r24, 0x98	; 152
    1488:	20 f0       	brcs	.+8      	; 0x1492 <log+0x3c>
    148a:	80 3e       	cpi	r24, 0xE0	; 224
    148c:	30 f0       	brcs	.+12     	; 0x149a <log+0x44>
    148e:	21 96       	adiw	r28, 0x01	; 1
    1490:	8f 77       	andi	r24, 0x7F	; 127
    1492:	92 dd       	rcall	.-1244   	; 0xfb8 <__addsf3>
    1494:	e4 eb       	ldi	r30, 0xB4	; 180
    1496:	f0 e0       	ldi	r31, 0x00	; 0
    1498:	03 c0       	rjmp	.+6      	; 0x14a0 <log+0x4a>
    149a:	8e dd       	rcall	.-1252   	; 0xfb8 <__addsf3>
    149c:	e1 ee       	ldi	r30, 0xE1	; 225
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	27 df       	rcall	.-434    	; 0x12f0 <__fp_powser>
    14a2:	8b 01       	movw	r16, r22
    14a4:	be 01       	movw	r22, r28
    14a6:	ec 01       	movw	r28, r24
    14a8:	fb 2e       	mov	r15, r27
    14aa:	6f 57       	subi	r22, 0x7F	; 127
    14ac:	71 09       	sbc	r23, r1
    14ae:	75 95       	asr	r23
    14b0:	77 1f       	adc	r23, r23
    14b2:	88 0b       	sbc	r24, r24
    14b4:	99 0b       	sbc	r25, r25
    14b6:	b4 de       	rcall	.-664    	; 0x1220 <__floatsisf>
    14b8:	28 e1       	ldi	r18, 0x18	; 24
    14ba:	32 e7       	ldi	r19, 0x72	; 114
    14bc:	41 e3       	ldi	r20, 0x31	; 49
    14be:	5f e3       	ldi	r21, 0x3F	; 63
    14c0:	49 d0       	rcall	.+146    	; 0x1554 <__mulsf3x>
    14c2:	af 2d       	mov	r26, r15
    14c4:	98 01       	movw	r18, r16
    14c6:	ae 01       	movw	r20, r28
    14c8:	ff 90       	pop	r15
    14ca:	0f 91       	pop	r16
    14cc:	1f 91       	pop	r17
    14ce:	cf 91       	pop	r28
    14d0:	df 91       	pop	r29
    14d2:	83 dd       	rcall	.-1274   	; 0xfda <__addsf3x>
    14d4:	40 cf       	rjmp	.-384    	; 0x1356 <__fp_round>

000014d6 <modf>:
    14d6:	fa 01       	movw	r30, r20
    14d8:	dc 01       	movw	r26, r24
    14da:	aa 0f       	add	r26, r26
    14dc:	bb 1f       	adc	r27, r27
    14de:	9b 01       	movw	r18, r22
    14e0:	ac 01       	movw	r20, r24
    14e2:	bf 57       	subi	r27, 0x7F	; 127
    14e4:	28 f4       	brcc	.+10     	; 0x14f0 <modf+0x1a>
    14e6:	22 27       	eor	r18, r18
    14e8:	33 27       	eor	r19, r19
    14ea:	44 27       	eor	r20, r20
    14ec:	50 78       	andi	r21, 0x80	; 128
    14ee:	1f c0       	rjmp	.+62     	; 0x152e <modf+0x58>
    14f0:	b7 51       	subi	r27, 0x17	; 23
    14f2:	88 f4       	brcc	.+34     	; 0x1516 <modf+0x40>
    14f4:	ab 2f       	mov	r26, r27
    14f6:	00 24       	eor	r0, r0
    14f8:	46 95       	lsr	r20
    14fa:	37 95       	ror	r19
    14fc:	27 95       	ror	r18
    14fe:	01 1c       	adc	r0, r1
    1500:	a3 95       	inc	r26
    1502:	d2 f3       	brmi	.-12     	; 0x14f8 <modf+0x22>
    1504:	00 20       	and	r0, r0
    1506:	69 f0       	breq	.+26     	; 0x1522 <modf+0x4c>
    1508:	22 0f       	add	r18, r18
    150a:	33 1f       	adc	r19, r19
    150c:	44 1f       	adc	r20, r20
    150e:	b3 95       	inc	r27
    1510:	da f3       	brmi	.-10     	; 0x1508 <modf+0x32>
    1512:	0d d0       	rcall	.+26     	; 0x152e <modf+0x58>
    1514:	50 cd       	rjmp	.-1376   	; 0xfb6 <__subsf3>
    1516:	61 30       	cpi	r22, 0x01	; 1
    1518:	71 05       	cpc	r23, r1
    151a:	a0 e8       	ldi	r26, 0x80	; 128
    151c:	8a 07       	cpc	r24, r26
    151e:	b9 46       	sbci	r27, 0x69	; 105
    1520:	30 f4       	brcc	.+12     	; 0x152e <modf+0x58>
    1522:	9b 01       	movw	r18, r22
    1524:	ac 01       	movw	r20, r24
    1526:	66 27       	eor	r22, r22
    1528:	77 27       	eor	r23, r23
    152a:	88 27       	eor	r24, r24
    152c:	90 78       	andi	r25, 0x80	; 128
    152e:	30 96       	adiw	r30, 0x00	; 0
    1530:	21 f0       	breq	.+8      	; 0x153a <modf+0x64>
    1532:	20 83       	st	Z, r18
    1534:	31 83       	std	Z+1, r19	; 0x01
    1536:	42 83       	std	Z+2, r20	; 0x02
    1538:	53 83       	std	Z+3, r21	; 0x03
    153a:	08 95       	ret

0000153c <__mulsf3>:
    153c:	0b d0       	rcall	.+22     	; 0x1554 <__mulsf3x>
    153e:	0b cf       	rjmp	.-490    	; 0x1356 <__fp_round>
    1540:	fc de       	rcall	.-520    	; 0x133a <__fp_pscA>
    1542:	28 f0       	brcs	.+10     	; 0x154e <__mulsf3+0x12>
    1544:	01 df       	rcall	.-510    	; 0x1348 <__fp_pscB>
    1546:	18 f0       	brcs	.+6      	; 0x154e <__mulsf3+0x12>
    1548:	95 23       	and	r25, r21
    154a:	09 f0       	breq	.+2      	; 0x154e <__mulsf3+0x12>
    154c:	c8 ce       	rjmp	.-624    	; 0x12de <__fp_inf>
    154e:	cd ce       	rjmp	.-614    	; 0x12ea <__fp_nan>
    1550:	11 24       	eor	r1, r1
    1552:	35 cf       	rjmp	.-406    	; 0x13be <__fp_szero>

00001554 <__mulsf3x>:
    1554:	11 df       	rcall	.-478    	; 0x1378 <__fp_split3>
    1556:	a0 f3       	brcs	.-24     	; 0x1540 <__mulsf3+0x4>

00001558 <__mulsf3_pse>:
    1558:	95 9f       	mul	r25, r21
    155a:	d1 f3       	breq	.-12     	; 0x1550 <__mulsf3+0x14>
    155c:	95 0f       	add	r25, r21
    155e:	50 e0       	ldi	r21, 0x00	; 0
    1560:	55 1f       	adc	r21, r21
    1562:	62 9f       	mul	r22, r18
    1564:	f0 01       	movw	r30, r0
    1566:	72 9f       	mul	r23, r18
    1568:	bb 27       	eor	r27, r27
    156a:	f0 0d       	add	r31, r0
    156c:	b1 1d       	adc	r27, r1
    156e:	63 9f       	mul	r22, r19
    1570:	aa 27       	eor	r26, r26
    1572:	f0 0d       	add	r31, r0
    1574:	b1 1d       	adc	r27, r1
    1576:	aa 1f       	adc	r26, r26
    1578:	64 9f       	mul	r22, r20
    157a:	66 27       	eor	r22, r22
    157c:	b0 0d       	add	r27, r0
    157e:	a1 1d       	adc	r26, r1
    1580:	66 1f       	adc	r22, r22
    1582:	82 9f       	mul	r24, r18
    1584:	22 27       	eor	r18, r18
    1586:	b0 0d       	add	r27, r0
    1588:	a1 1d       	adc	r26, r1
    158a:	62 1f       	adc	r22, r18
    158c:	73 9f       	mul	r23, r19
    158e:	b0 0d       	add	r27, r0
    1590:	a1 1d       	adc	r26, r1
    1592:	62 1f       	adc	r22, r18
    1594:	83 9f       	mul	r24, r19
    1596:	a0 0d       	add	r26, r0
    1598:	61 1d       	adc	r22, r1
    159a:	22 1f       	adc	r18, r18
    159c:	74 9f       	mul	r23, r20
    159e:	33 27       	eor	r19, r19
    15a0:	a0 0d       	add	r26, r0
    15a2:	61 1d       	adc	r22, r1
    15a4:	23 1f       	adc	r18, r19
    15a6:	84 9f       	mul	r24, r20
    15a8:	60 0d       	add	r22, r0
    15aa:	21 1d       	adc	r18, r1
    15ac:	82 2f       	mov	r24, r18
    15ae:	76 2f       	mov	r23, r22
    15b0:	6a 2f       	mov	r22, r26
    15b2:	11 24       	eor	r1, r1
    15b4:	9f 57       	subi	r25, 0x7F	; 127
    15b6:	50 40       	sbci	r21, 0x00	; 0
    15b8:	8a f0       	brmi	.+34     	; 0x15dc <__mulsf3_pse+0x84>
    15ba:	e1 f0       	breq	.+56     	; 0x15f4 <__mulsf3_pse+0x9c>
    15bc:	88 23       	and	r24, r24
    15be:	4a f0       	brmi	.+18     	; 0x15d2 <__mulsf3_pse+0x7a>
    15c0:	ee 0f       	add	r30, r30
    15c2:	ff 1f       	adc	r31, r31
    15c4:	bb 1f       	adc	r27, r27
    15c6:	66 1f       	adc	r22, r22
    15c8:	77 1f       	adc	r23, r23
    15ca:	88 1f       	adc	r24, r24
    15cc:	91 50       	subi	r25, 0x01	; 1
    15ce:	50 40       	sbci	r21, 0x00	; 0
    15d0:	a9 f7       	brne	.-22     	; 0x15bc <__mulsf3_pse+0x64>
    15d2:	9e 3f       	cpi	r25, 0xFE	; 254
    15d4:	51 05       	cpc	r21, r1
    15d6:	70 f0       	brcs	.+28     	; 0x15f4 <__mulsf3_pse+0x9c>
    15d8:	82 ce       	rjmp	.-764    	; 0x12de <__fp_inf>
    15da:	f1 ce       	rjmp	.-542    	; 0x13be <__fp_szero>
    15dc:	5f 3f       	cpi	r21, 0xFF	; 255
    15de:	ec f3       	brlt	.-6      	; 0x15da <__mulsf3_pse+0x82>
    15e0:	98 3e       	cpi	r25, 0xE8	; 232
    15e2:	dc f3       	brlt	.-10     	; 0x15da <__mulsf3_pse+0x82>
    15e4:	86 95       	lsr	r24
    15e6:	77 95       	ror	r23
    15e8:	67 95       	ror	r22
    15ea:	b7 95       	ror	r27
    15ec:	f7 95       	ror	r31
    15ee:	e7 95       	ror	r30
    15f0:	9f 5f       	subi	r25, 0xFF	; 255
    15f2:	c1 f7       	brne	.-16     	; 0x15e4 <__mulsf3_pse+0x8c>
    15f4:	fe 2b       	or	r31, r30
    15f6:	88 0f       	add	r24, r24
    15f8:	91 1d       	adc	r25, r1
    15fa:	96 95       	lsr	r25
    15fc:	87 95       	ror	r24
    15fe:	97 f9       	bld	r25, 7
    1600:	08 95       	ret

00001602 <pow>:
    1602:	fa 01       	movw	r30, r20
    1604:	ee 0f       	add	r30, r30
    1606:	ff 1f       	adc	r31, r31
    1608:	30 96       	adiw	r30, 0x00	; 0
    160a:	21 05       	cpc	r18, r1
    160c:	31 05       	cpc	r19, r1
    160e:	99 f1       	breq	.+102    	; 0x1676 <pow+0x74>
    1610:	61 15       	cp	r22, r1
    1612:	71 05       	cpc	r23, r1
    1614:	61 f4       	brne	.+24     	; 0x162e <pow+0x2c>
    1616:	80 38       	cpi	r24, 0x80	; 128
    1618:	bf e3       	ldi	r27, 0x3F	; 63
    161a:	9b 07       	cpc	r25, r27
    161c:	49 f1       	breq	.+82     	; 0x1670 <pow+0x6e>
    161e:	68 94       	set
    1620:	90 38       	cpi	r25, 0x80	; 128
    1622:	81 05       	cpc	r24, r1
    1624:	61 f0       	breq	.+24     	; 0x163e <pow+0x3c>
    1626:	80 38       	cpi	r24, 0x80	; 128
    1628:	bf ef       	ldi	r27, 0xFF	; 255
    162a:	9b 07       	cpc	r25, r27
    162c:	41 f0       	breq	.+16     	; 0x163e <pow+0x3c>
    162e:	99 23       	and	r25, r25
    1630:	42 f5       	brpl	.+80     	; 0x1682 <pow+0x80>
    1632:	ff 3f       	cpi	r31, 0xFF	; 255
    1634:	e1 05       	cpc	r30, r1
    1636:	31 05       	cpc	r19, r1
    1638:	21 05       	cpc	r18, r1
    163a:	11 f1       	breq	.+68     	; 0x1680 <pow+0x7e>
    163c:	e8 94       	clt
    163e:	08 94       	sec
    1640:	e7 95       	ror	r30
    1642:	d9 01       	movw	r26, r18
    1644:	aa 23       	and	r26, r26
    1646:	29 f4       	brne	.+10     	; 0x1652 <pow+0x50>
    1648:	ab 2f       	mov	r26, r27
    164a:	be 2f       	mov	r27, r30
    164c:	f8 5f       	subi	r31, 0xF8	; 248
    164e:	d0 f3       	brcs	.-12     	; 0x1644 <pow+0x42>
    1650:	10 c0       	rjmp	.+32     	; 0x1672 <pow+0x70>
    1652:	ff 5f       	subi	r31, 0xFF	; 255
    1654:	70 f4       	brcc	.+28     	; 0x1672 <pow+0x70>
    1656:	a6 95       	lsr	r26
    1658:	e0 f7       	brcc	.-8      	; 0x1652 <pow+0x50>
    165a:	f7 39       	cpi	r31, 0x97	; 151
    165c:	50 f0       	brcs	.+20     	; 0x1672 <pow+0x70>
    165e:	19 f0       	breq	.+6      	; 0x1666 <pow+0x64>
    1660:	ff 3a       	cpi	r31, 0xAF	; 175
    1662:	38 f4       	brcc	.+14     	; 0x1672 <pow+0x70>
    1664:	9f 77       	andi	r25, 0x7F	; 127
    1666:	9f 93       	push	r25
    1668:	0c d0       	rcall	.+24     	; 0x1682 <pow+0x80>
    166a:	0f 90       	pop	r0
    166c:	07 fc       	sbrc	r0, 7
    166e:	90 58       	subi	r25, 0x80	; 128
    1670:	08 95       	ret
    1672:	3e f0       	brts	.+14     	; 0x1682 <pow+0x80>
    1674:	3a ce       	rjmp	.-908    	; 0x12ea <__fp_nan>
    1676:	60 e0       	ldi	r22, 0x00	; 0
    1678:	70 e0       	ldi	r23, 0x00	; 0
    167a:	80 e8       	ldi	r24, 0x80	; 128
    167c:	9f e3       	ldi	r25, 0x3F	; 63
    167e:	08 95       	ret
    1680:	4f e7       	ldi	r20, 0x7F	; 127
    1682:	9f 77       	andi	r25, 0x7F	; 127
    1684:	5f 93       	push	r21
    1686:	4f 93       	push	r20
    1688:	3f 93       	push	r19
    168a:	2f 93       	push	r18
    168c:	e4 de       	rcall	.-568    	; 0x1456 <log>
    168e:	2f 91       	pop	r18
    1690:	3f 91       	pop	r19
    1692:	4f 91       	pop	r20
    1694:	5f 91       	pop	r21
    1696:	52 df       	rcall	.-348    	; 0x153c <__mulsf3>
    1698:	64 cd       	rjmp	.-1336   	; 0x1162 <exp>

0000169a <__fp_mpack>:
    169a:	9f 3f       	cpi	r25, 0xFF	; 255
    169c:	31 f0       	breq	.+12     	; 0x16aa <__fp_mpack_finite+0xc>

0000169e <__fp_mpack_finite>:
    169e:	91 50       	subi	r25, 0x01	; 1
    16a0:	20 f4       	brcc	.+8      	; 0x16aa <__fp_mpack_finite+0xc>
    16a2:	87 95       	ror	r24
    16a4:	77 95       	ror	r23
    16a6:	67 95       	ror	r22
    16a8:	b7 95       	ror	r27
    16aa:	88 0f       	add	r24, r24
    16ac:	91 1d       	adc	r25, r1
    16ae:	96 95       	lsr	r25
    16b0:	87 95       	ror	r24
    16b2:	97 f9       	bld	r25, 7
    16b4:	08 95       	ret

000016b6 <__udivmodhi4>:
    16b6:	aa 1b       	sub	r26, r26
    16b8:	bb 1b       	sub	r27, r27
    16ba:	51 e1       	ldi	r21, 0x11	; 17
    16bc:	07 c0       	rjmp	.+14     	; 0x16cc <__udivmodhi4_ep>

000016be <__udivmodhi4_loop>:
    16be:	aa 1f       	adc	r26, r26
    16c0:	bb 1f       	adc	r27, r27
    16c2:	a6 17       	cp	r26, r22
    16c4:	b7 07       	cpc	r27, r23
    16c6:	10 f0       	brcs	.+4      	; 0x16cc <__udivmodhi4_ep>
    16c8:	a6 1b       	sub	r26, r22
    16ca:	b7 0b       	sbc	r27, r23

000016cc <__udivmodhi4_ep>:
    16cc:	88 1f       	adc	r24, r24
    16ce:	99 1f       	adc	r25, r25
    16d0:	5a 95       	dec	r21
    16d2:	a9 f7       	brne	.-22     	; 0x16be <__udivmodhi4_loop>
    16d4:	80 95       	com	r24
    16d6:	90 95       	com	r25
    16d8:	bc 01       	movw	r22, r24
    16da:	cd 01       	movw	r24, r26
    16dc:	08 95       	ret

000016de <sprintf>:
    16de:	0f 93       	push	r16
    16e0:	1f 93       	push	r17
    16e2:	cf 93       	push	r28
    16e4:	df 93       	push	r29
    16e6:	cd b7       	in	r28, 0x3d	; 61
    16e8:	de b7       	in	r29, 0x3e	; 62
    16ea:	2e 97       	sbiw	r28, 0x0e	; 14
    16ec:	0f b6       	in	r0, 0x3f	; 63
    16ee:	f8 94       	cli
    16f0:	de bf       	out	0x3e, r29	; 62
    16f2:	0f be       	out	0x3f, r0	; 63
    16f4:	cd bf       	out	0x3d, r28	; 61
    16f6:	0d 89       	ldd	r16, Y+21	; 0x15
    16f8:	1e 89       	ldd	r17, Y+22	; 0x16
    16fa:	86 e0       	ldi	r24, 0x06	; 6
    16fc:	8c 83       	std	Y+4, r24	; 0x04
    16fe:	1a 83       	std	Y+2, r17	; 0x02
    1700:	09 83       	std	Y+1, r16	; 0x01
    1702:	8f ef       	ldi	r24, 0xFF	; 255
    1704:	9f e7       	ldi	r25, 0x7F	; 127
    1706:	9e 83       	std	Y+6, r25	; 0x06
    1708:	8d 83       	std	Y+5, r24	; 0x05
    170a:	ae 01       	movw	r20, r28
    170c:	47 5e       	subi	r20, 0xE7	; 231
    170e:	5f 4f       	sbci	r21, 0xFF	; 255
    1710:	6f 89       	ldd	r22, Y+23	; 0x17
    1712:	78 8d       	ldd	r23, Y+24	; 0x18
    1714:	ce 01       	movw	r24, r28
    1716:	01 96       	adiw	r24, 0x01	; 1
    1718:	10 d0       	rcall	.+32     	; 0x173a <vfprintf>
    171a:	ef 81       	ldd	r30, Y+7	; 0x07
    171c:	f8 85       	ldd	r31, Y+8	; 0x08
    171e:	e0 0f       	add	r30, r16
    1720:	f1 1f       	adc	r31, r17
    1722:	10 82       	st	Z, r1
    1724:	2e 96       	adiw	r28, 0x0e	; 14
    1726:	0f b6       	in	r0, 0x3f	; 63
    1728:	f8 94       	cli
    172a:	de bf       	out	0x3e, r29	; 62
    172c:	0f be       	out	0x3f, r0	; 63
    172e:	cd bf       	out	0x3d, r28	; 61
    1730:	df 91       	pop	r29
    1732:	cf 91       	pop	r28
    1734:	1f 91       	pop	r17
    1736:	0f 91       	pop	r16
    1738:	08 95       	ret

0000173a <vfprintf>:
    173a:	2f 92       	push	r2
    173c:	3f 92       	push	r3
    173e:	4f 92       	push	r4
    1740:	5f 92       	push	r5
    1742:	6f 92       	push	r6
    1744:	7f 92       	push	r7
    1746:	8f 92       	push	r8
    1748:	9f 92       	push	r9
    174a:	af 92       	push	r10
    174c:	bf 92       	push	r11
    174e:	cf 92       	push	r12
    1750:	df 92       	push	r13
    1752:	ef 92       	push	r14
    1754:	ff 92       	push	r15
    1756:	0f 93       	push	r16
    1758:	1f 93       	push	r17
    175a:	cf 93       	push	r28
    175c:	df 93       	push	r29
    175e:	cd b7       	in	r28, 0x3d	; 61
    1760:	de b7       	in	r29, 0x3e	; 62
    1762:	2c 97       	sbiw	r28, 0x0c	; 12
    1764:	0f b6       	in	r0, 0x3f	; 63
    1766:	f8 94       	cli
    1768:	de bf       	out	0x3e, r29	; 62
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	cd bf       	out	0x3d, r28	; 61
    176e:	7c 01       	movw	r14, r24
    1770:	6b 01       	movw	r12, r22
    1772:	8a 01       	movw	r16, r20
    1774:	fc 01       	movw	r30, r24
    1776:	17 82       	std	Z+7, r1	; 0x07
    1778:	16 82       	std	Z+6, r1	; 0x06
    177a:	83 81       	ldd	r24, Z+3	; 0x03
    177c:	81 ff       	sbrs	r24, 1
    177e:	b0 c1       	rjmp	.+864    	; 0x1ae0 <vfprintf+0x3a6>
    1780:	ce 01       	movw	r24, r28
    1782:	01 96       	adiw	r24, 0x01	; 1
    1784:	4c 01       	movw	r8, r24
    1786:	f7 01       	movw	r30, r14
    1788:	93 81       	ldd	r25, Z+3	; 0x03
    178a:	f6 01       	movw	r30, r12
    178c:	93 fd       	sbrc	r25, 3
    178e:	85 91       	lpm	r24, Z+
    1790:	93 ff       	sbrs	r25, 3
    1792:	81 91       	ld	r24, Z+
    1794:	6f 01       	movw	r12, r30
    1796:	88 23       	and	r24, r24
    1798:	09 f4       	brne	.+2      	; 0x179c <vfprintf+0x62>
    179a:	9e c1       	rjmp	.+828    	; 0x1ad8 <vfprintf+0x39e>
    179c:	85 32       	cpi	r24, 0x25	; 37
    179e:	39 f4       	brne	.+14     	; 0x17ae <vfprintf+0x74>
    17a0:	93 fd       	sbrc	r25, 3
    17a2:	85 91       	lpm	r24, Z+
    17a4:	93 ff       	sbrs	r25, 3
    17a6:	81 91       	ld	r24, Z+
    17a8:	6f 01       	movw	r12, r30
    17aa:	85 32       	cpi	r24, 0x25	; 37
    17ac:	21 f4       	brne	.+8      	; 0x17b6 <vfprintf+0x7c>
    17ae:	b7 01       	movw	r22, r14
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	ed d1       	rcall	.+986    	; 0x1b8e <fputc>
    17b4:	e8 cf       	rjmp	.-48     	; 0x1786 <vfprintf+0x4c>
    17b6:	51 2c       	mov	r5, r1
    17b8:	31 2c       	mov	r3, r1
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	20 32       	cpi	r18, 0x20	; 32
    17be:	a0 f4       	brcc	.+40     	; 0x17e8 <vfprintf+0xae>
    17c0:	8b 32       	cpi	r24, 0x2B	; 43
    17c2:	69 f0       	breq	.+26     	; 0x17de <vfprintf+0xa4>
    17c4:	30 f4       	brcc	.+12     	; 0x17d2 <vfprintf+0x98>
    17c6:	80 32       	cpi	r24, 0x20	; 32
    17c8:	59 f0       	breq	.+22     	; 0x17e0 <vfprintf+0xa6>
    17ca:	83 32       	cpi	r24, 0x23	; 35
    17cc:	69 f4       	brne	.+26     	; 0x17e8 <vfprintf+0xae>
    17ce:	20 61       	ori	r18, 0x10	; 16
    17d0:	2c c0       	rjmp	.+88     	; 0x182a <vfprintf+0xf0>
    17d2:	8d 32       	cpi	r24, 0x2D	; 45
    17d4:	39 f0       	breq	.+14     	; 0x17e4 <vfprintf+0xaa>
    17d6:	80 33       	cpi	r24, 0x30	; 48
    17d8:	39 f4       	brne	.+14     	; 0x17e8 <vfprintf+0xae>
    17da:	21 60       	ori	r18, 0x01	; 1
    17dc:	26 c0       	rjmp	.+76     	; 0x182a <vfprintf+0xf0>
    17de:	22 60       	ori	r18, 0x02	; 2
    17e0:	24 60       	ori	r18, 0x04	; 4
    17e2:	23 c0       	rjmp	.+70     	; 0x182a <vfprintf+0xf0>
    17e4:	28 60       	ori	r18, 0x08	; 8
    17e6:	21 c0       	rjmp	.+66     	; 0x182a <vfprintf+0xf0>
    17e8:	27 fd       	sbrc	r18, 7
    17ea:	27 c0       	rjmp	.+78     	; 0x183a <vfprintf+0x100>
    17ec:	30 ed       	ldi	r19, 0xD0	; 208
    17ee:	38 0f       	add	r19, r24
    17f0:	3a 30       	cpi	r19, 0x0A	; 10
    17f2:	78 f4       	brcc	.+30     	; 0x1812 <vfprintf+0xd8>
    17f4:	26 ff       	sbrs	r18, 6
    17f6:	06 c0       	rjmp	.+12     	; 0x1804 <vfprintf+0xca>
    17f8:	fa e0       	ldi	r31, 0x0A	; 10
    17fa:	5f 9e       	mul	r5, r31
    17fc:	30 0d       	add	r19, r0
    17fe:	11 24       	eor	r1, r1
    1800:	53 2e       	mov	r5, r19
    1802:	13 c0       	rjmp	.+38     	; 0x182a <vfprintf+0xf0>
    1804:	8a e0       	ldi	r24, 0x0A	; 10
    1806:	38 9e       	mul	r3, r24
    1808:	30 0d       	add	r19, r0
    180a:	11 24       	eor	r1, r1
    180c:	33 2e       	mov	r3, r19
    180e:	20 62       	ori	r18, 0x20	; 32
    1810:	0c c0       	rjmp	.+24     	; 0x182a <vfprintf+0xf0>
    1812:	8e 32       	cpi	r24, 0x2E	; 46
    1814:	21 f4       	brne	.+8      	; 0x181e <vfprintf+0xe4>
    1816:	26 fd       	sbrc	r18, 6
    1818:	5f c1       	rjmp	.+702    	; 0x1ad8 <vfprintf+0x39e>
    181a:	20 64       	ori	r18, 0x40	; 64
    181c:	06 c0       	rjmp	.+12     	; 0x182a <vfprintf+0xf0>
    181e:	8c 36       	cpi	r24, 0x6C	; 108
    1820:	11 f4       	brne	.+4      	; 0x1826 <vfprintf+0xec>
    1822:	20 68       	ori	r18, 0x80	; 128
    1824:	02 c0       	rjmp	.+4      	; 0x182a <vfprintf+0xf0>
    1826:	88 36       	cpi	r24, 0x68	; 104
    1828:	41 f4       	brne	.+16     	; 0x183a <vfprintf+0x100>
    182a:	f6 01       	movw	r30, r12
    182c:	93 fd       	sbrc	r25, 3
    182e:	85 91       	lpm	r24, Z+
    1830:	93 ff       	sbrs	r25, 3
    1832:	81 91       	ld	r24, Z+
    1834:	6f 01       	movw	r12, r30
    1836:	81 11       	cpse	r24, r1
    1838:	c1 cf       	rjmp	.-126    	; 0x17bc <vfprintf+0x82>
    183a:	98 2f       	mov	r25, r24
    183c:	9f 7d       	andi	r25, 0xDF	; 223
    183e:	95 54       	subi	r25, 0x45	; 69
    1840:	93 30       	cpi	r25, 0x03	; 3
    1842:	28 f4       	brcc	.+10     	; 0x184e <vfprintf+0x114>
    1844:	0c 5f       	subi	r16, 0xFC	; 252
    1846:	1f 4f       	sbci	r17, 0xFF	; 255
    1848:	ff e3       	ldi	r31, 0x3F	; 63
    184a:	f9 83       	std	Y+1, r31	; 0x01
    184c:	0d c0       	rjmp	.+26     	; 0x1868 <vfprintf+0x12e>
    184e:	83 36       	cpi	r24, 0x63	; 99
    1850:	31 f0       	breq	.+12     	; 0x185e <vfprintf+0x124>
    1852:	83 37       	cpi	r24, 0x73	; 115
    1854:	71 f0       	breq	.+28     	; 0x1872 <vfprintf+0x138>
    1856:	83 35       	cpi	r24, 0x53	; 83
    1858:	09 f0       	breq	.+2      	; 0x185c <vfprintf+0x122>
    185a:	57 c0       	rjmp	.+174    	; 0x190a <vfprintf+0x1d0>
    185c:	21 c0       	rjmp	.+66     	; 0x18a0 <vfprintf+0x166>
    185e:	f8 01       	movw	r30, r16
    1860:	80 81       	ld	r24, Z
    1862:	89 83       	std	Y+1, r24	; 0x01
    1864:	0e 5f       	subi	r16, 0xFE	; 254
    1866:	1f 4f       	sbci	r17, 0xFF	; 255
    1868:	44 24       	eor	r4, r4
    186a:	43 94       	inc	r4
    186c:	51 2c       	mov	r5, r1
    186e:	54 01       	movw	r10, r8
    1870:	14 c0       	rjmp	.+40     	; 0x189a <vfprintf+0x160>
    1872:	38 01       	movw	r6, r16
    1874:	f2 e0       	ldi	r31, 0x02	; 2
    1876:	6f 0e       	add	r6, r31
    1878:	71 1c       	adc	r7, r1
    187a:	f8 01       	movw	r30, r16
    187c:	a0 80       	ld	r10, Z
    187e:	b1 80       	ldd	r11, Z+1	; 0x01
    1880:	26 ff       	sbrs	r18, 6
    1882:	03 c0       	rjmp	.+6      	; 0x188a <vfprintf+0x150>
    1884:	65 2d       	mov	r22, r5
    1886:	70 e0       	ldi	r23, 0x00	; 0
    1888:	02 c0       	rjmp	.+4      	; 0x188e <vfprintf+0x154>
    188a:	6f ef       	ldi	r22, 0xFF	; 255
    188c:	7f ef       	ldi	r23, 0xFF	; 255
    188e:	c5 01       	movw	r24, r10
    1890:	2c 87       	std	Y+12, r18	; 0x0c
    1892:	72 d1       	rcall	.+740    	; 0x1b78 <strnlen>
    1894:	2c 01       	movw	r4, r24
    1896:	83 01       	movw	r16, r6
    1898:	2c 85       	ldd	r18, Y+12	; 0x0c
    189a:	2f 77       	andi	r18, 0x7F	; 127
    189c:	22 2e       	mov	r2, r18
    189e:	16 c0       	rjmp	.+44     	; 0x18cc <vfprintf+0x192>
    18a0:	38 01       	movw	r6, r16
    18a2:	f2 e0       	ldi	r31, 0x02	; 2
    18a4:	6f 0e       	add	r6, r31
    18a6:	71 1c       	adc	r7, r1
    18a8:	f8 01       	movw	r30, r16
    18aa:	a0 80       	ld	r10, Z
    18ac:	b1 80       	ldd	r11, Z+1	; 0x01
    18ae:	26 ff       	sbrs	r18, 6
    18b0:	03 c0       	rjmp	.+6      	; 0x18b8 <vfprintf+0x17e>
    18b2:	65 2d       	mov	r22, r5
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <vfprintf+0x182>
    18b8:	6f ef       	ldi	r22, 0xFF	; 255
    18ba:	7f ef       	ldi	r23, 0xFF	; 255
    18bc:	c5 01       	movw	r24, r10
    18be:	2c 87       	std	Y+12, r18	; 0x0c
    18c0:	50 d1       	rcall	.+672    	; 0x1b62 <strnlen_P>
    18c2:	2c 01       	movw	r4, r24
    18c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    18c6:	20 68       	ori	r18, 0x80	; 128
    18c8:	22 2e       	mov	r2, r18
    18ca:	83 01       	movw	r16, r6
    18cc:	23 fc       	sbrc	r2, 3
    18ce:	19 c0       	rjmp	.+50     	; 0x1902 <vfprintf+0x1c8>
    18d0:	83 2d       	mov	r24, r3
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	48 16       	cp	r4, r24
    18d6:	59 06       	cpc	r5, r25
    18d8:	a0 f4       	brcc	.+40     	; 0x1902 <vfprintf+0x1c8>
    18da:	b7 01       	movw	r22, r14
    18dc:	80 e2       	ldi	r24, 0x20	; 32
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	56 d1       	rcall	.+684    	; 0x1b8e <fputc>
    18e2:	3a 94       	dec	r3
    18e4:	f5 cf       	rjmp	.-22     	; 0x18d0 <vfprintf+0x196>
    18e6:	f5 01       	movw	r30, r10
    18e8:	27 fc       	sbrc	r2, 7
    18ea:	85 91       	lpm	r24, Z+
    18ec:	27 fe       	sbrs	r2, 7
    18ee:	81 91       	ld	r24, Z+
    18f0:	5f 01       	movw	r10, r30
    18f2:	b7 01       	movw	r22, r14
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	4b d1       	rcall	.+662    	; 0x1b8e <fputc>
    18f8:	31 10       	cpse	r3, r1
    18fa:	3a 94       	dec	r3
    18fc:	f1 e0       	ldi	r31, 0x01	; 1
    18fe:	4f 1a       	sub	r4, r31
    1900:	51 08       	sbc	r5, r1
    1902:	41 14       	cp	r4, r1
    1904:	51 04       	cpc	r5, r1
    1906:	79 f7       	brne	.-34     	; 0x18e6 <vfprintf+0x1ac>
    1908:	de c0       	rjmp	.+444    	; 0x1ac6 <vfprintf+0x38c>
    190a:	84 36       	cpi	r24, 0x64	; 100
    190c:	11 f0       	breq	.+4      	; 0x1912 <vfprintf+0x1d8>
    190e:	89 36       	cpi	r24, 0x69	; 105
    1910:	31 f5       	brne	.+76     	; 0x195e <vfprintf+0x224>
    1912:	f8 01       	movw	r30, r16
    1914:	27 ff       	sbrs	r18, 7
    1916:	07 c0       	rjmp	.+14     	; 0x1926 <vfprintf+0x1ec>
    1918:	60 81       	ld	r22, Z
    191a:	71 81       	ldd	r23, Z+1	; 0x01
    191c:	82 81       	ldd	r24, Z+2	; 0x02
    191e:	93 81       	ldd	r25, Z+3	; 0x03
    1920:	0c 5f       	subi	r16, 0xFC	; 252
    1922:	1f 4f       	sbci	r17, 0xFF	; 255
    1924:	08 c0       	rjmp	.+16     	; 0x1936 <vfprintf+0x1fc>
    1926:	60 81       	ld	r22, Z
    1928:	71 81       	ldd	r23, Z+1	; 0x01
    192a:	88 27       	eor	r24, r24
    192c:	77 fd       	sbrc	r23, 7
    192e:	80 95       	com	r24
    1930:	98 2f       	mov	r25, r24
    1932:	0e 5f       	subi	r16, 0xFE	; 254
    1934:	1f 4f       	sbci	r17, 0xFF	; 255
    1936:	2f 76       	andi	r18, 0x6F	; 111
    1938:	b2 2e       	mov	r11, r18
    193a:	97 ff       	sbrs	r25, 7
    193c:	09 c0       	rjmp	.+18     	; 0x1950 <vfprintf+0x216>
    193e:	90 95       	com	r25
    1940:	80 95       	com	r24
    1942:	70 95       	com	r23
    1944:	61 95       	neg	r22
    1946:	7f 4f       	sbci	r23, 0xFF	; 255
    1948:	8f 4f       	sbci	r24, 0xFF	; 255
    194a:	9f 4f       	sbci	r25, 0xFF	; 255
    194c:	20 68       	ori	r18, 0x80	; 128
    194e:	b2 2e       	mov	r11, r18
    1950:	2a e0       	ldi	r18, 0x0A	; 10
    1952:	30 e0       	ldi	r19, 0x00	; 0
    1954:	a4 01       	movw	r20, r8
    1956:	4d d1       	rcall	.+666    	; 0x1bf2 <__ultoa_invert>
    1958:	a8 2e       	mov	r10, r24
    195a:	a8 18       	sub	r10, r8
    195c:	43 c0       	rjmp	.+134    	; 0x19e4 <vfprintf+0x2aa>
    195e:	85 37       	cpi	r24, 0x75	; 117
    1960:	29 f4       	brne	.+10     	; 0x196c <vfprintf+0x232>
    1962:	2f 7e       	andi	r18, 0xEF	; 239
    1964:	b2 2e       	mov	r11, r18
    1966:	2a e0       	ldi	r18, 0x0A	; 10
    1968:	30 e0       	ldi	r19, 0x00	; 0
    196a:	25 c0       	rjmp	.+74     	; 0x19b6 <vfprintf+0x27c>
    196c:	f2 2f       	mov	r31, r18
    196e:	f9 7f       	andi	r31, 0xF9	; 249
    1970:	bf 2e       	mov	r11, r31
    1972:	8f 36       	cpi	r24, 0x6F	; 111
    1974:	c1 f0       	breq	.+48     	; 0x19a6 <vfprintf+0x26c>
    1976:	18 f4       	brcc	.+6      	; 0x197e <vfprintf+0x244>
    1978:	88 35       	cpi	r24, 0x58	; 88
    197a:	79 f0       	breq	.+30     	; 0x199a <vfprintf+0x260>
    197c:	ad c0       	rjmp	.+346    	; 0x1ad8 <vfprintf+0x39e>
    197e:	80 37       	cpi	r24, 0x70	; 112
    1980:	19 f0       	breq	.+6      	; 0x1988 <vfprintf+0x24e>
    1982:	88 37       	cpi	r24, 0x78	; 120
    1984:	21 f0       	breq	.+8      	; 0x198e <vfprintf+0x254>
    1986:	a8 c0       	rjmp	.+336    	; 0x1ad8 <vfprintf+0x39e>
    1988:	2f 2f       	mov	r18, r31
    198a:	20 61       	ori	r18, 0x10	; 16
    198c:	b2 2e       	mov	r11, r18
    198e:	b4 fe       	sbrs	r11, 4
    1990:	0d c0       	rjmp	.+26     	; 0x19ac <vfprintf+0x272>
    1992:	8b 2d       	mov	r24, r11
    1994:	84 60       	ori	r24, 0x04	; 4
    1996:	b8 2e       	mov	r11, r24
    1998:	09 c0       	rjmp	.+18     	; 0x19ac <vfprintf+0x272>
    199a:	24 ff       	sbrs	r18, 4
    199c:	0a c0       	rjmp	.+20     	; 0x19b2 <vfprintf+0x278>
    199e:	9f 2f       	mov	r25, r31
    19a0:	96 60       	ori	r25, 0x06	; 6
    19a2:	b9 2e       	mov	r11, r25
    19a4:	06 c0       	rjmp	.+12     	; 0x19b2 <vfprintf+0x278>
    19a6:	28 e0       	ldi	r18, 0x08	; 8
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	05 c0       	rjmp	.+10     	; 0x19b6 <vfprintf+0x27c>
    19ac:	20 e1       	ldi	r18, 0x10	; 16
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	02 c0       	rjmp	.+4      	; 0x19b6 <vfprintf+0x27c>
    19b2:	20 e1       	ldi	r18, 0x10	; 16
    19b4:	32 e0       	ldi	r19, 0x02	; 2
    19b6:	f8 01       	movw	r30, r16
    19b8:	b7 fe       	sbrs	r11, 7
    19ba:	07 c0       	rjmp	.+14     	; 0x19ca <vfprintf+0x290>
    19bc:	60 81       	ld	r22, Z
    19be:	71 81       	ldd	r23, Z+1	; 0x01
    19c0:	82 81       	ldd	r24, Z+2	; 0x02
    19c2:	93 81       	ldd	r25, Z+3	; 0x03
    19c4:	0c 5f       	subi	r16, 0xFC	; 252
    19c6:	1f 4f       	sbci	r17, 0xFF	; 255
    19c8:	06 c0       	rjmp	.+12     	; 0x19d6 <vfprintf+0x29c>
    19ca:	60 81       	ld	r22, Z
    19cc:	71 81       	ldd	r23, Z+1	; 0x01
    19ce:	80 e0       	ldi	r24, 0x00	; 0
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	0e 5f       	subi	r16, 0xFE	; 254
    19d4:	1f 4f       	sbci	r17, 0xFF	; 255
    19d6:	a4 01       	movw	r20, r8
    19d8:	0c d1       	rcall	.+536    	; 0x1bf2 <__ultoa_invert>
    19da:	a8 2e       	mov	r10, r24
    19dc:	a8 18       	sub	r10, r8
    19de:	fb 2d       	mov	r31, r11
    19e0:	ff 77       	andi	r31, 0x7F	; 127
    19e2:	bf 2e       	mov	r11, r31
    19e4:	b6 fe       	sbrs	r11, 6
    19e6:	0b c0       	rjmp	.+22     	; 0x19fe <vfprintf+0x2c4>
    19e8:	2b 2d       	mov	r18, r11
    19ea:	2e 7f       	andi	r18, 0xFE	; 254
    19ec:	a5 14       	cp	r10, r5
    19ee:	50 f4       	brcc	.+20     	; 0x1a04 <vfprintf+0x2ca>
    19f0:	b4 fe       	sbrs	r11, 4
    19f2:	0a c0       	rjmp	.+20     	; 0x1a08 <vfprintf+0x2ce>
    19f4:	b2 fc       	sbrc	r11, 2
    19f6:	08 c0       	rjmp	.+16     	; 0x1a08 <vfprintf+0x2ce>
    19f8:	2b 2d       	mov	r18, r11
    19fa:	2e 7e       	andi	r18, 0xEE	; 238
    19fc:	05 c0       	rjmp	.+10     	; 0x1a08 <vfprintf+0x2ce>
    19fe:	7a 2c       	mov	r7, r10
    1a00:	2b 2d       	mov	r18, r11
    1a02:	03 c0       	rjmp	.+6      	; 0x1a0a <vfprintf+0x2d0>
    1a04:	7a 2c       	mov	r7, r10
    1a06:	01 c0       	rjmp	.+2      	; 0x1a0a <vfprintf+0x2d0>
    1a08:	75 2c       	mov	r7, r5
    1a0a:	24 ff       	sbrs	r18, 4
    1a0c:	0d c0       	rjmp	.+26     	; 0x1a28 <vfprintf+0x2ee>
    1a0e:	fe 01       	movw	r30, r28
    1a10:	ea 0d       	add	r30, r10
    1a12:	f1 1d       	adc	r31, r1
    1a14:	80 81       	ld	r24, Z
    1a16:	80 33       	cpi	r24, 0x30	; 48
    1a18:	11 f4       	brne	.+4      	; 0x1a1e <vfprintf+0x2e4>
    1a1a:	29 7e       	andi	r18, 0xE9	; 233
    1a1c:	09 c0       	rjmp	.+18     	; 0x1a30 <vfprintf+0x2f6>
    1a1e:	22 ff       	sbrs	r18, 2
    1a20:	06 c0       	rjmp	.+12     	; 0x1a2e <vfprintf+0x2f4>
    1a22:	73 94       	inc	r7
    1a24:	73 94       	inc	r7
    1a26:	04 c0       	rjmp	.+8      	; 0x1a30 <vfprintf+0x2f6>
    1a28:	82 2f       	mov	r24, r18
    1a2a:	86 78       	andi	r24, 0x86	; 134
    1a2c:	09 f0       	breq	.+2      	; 0x1a30 <vfprintf+0x2f6>
    1a2e:	73 94       	inc	r7
    1a30:	23 fd       	sbrc	r18, 3
    1a32:	12 c0       	rjmp	.+36     	; 0x1a58 <vfprintf+0x31e>
    1a34:	20 ff       	sbrs	r18, 0
    1a36:	06 c0       	rjmp	.+12     	; 0x1a44 <vfprintf+0x30a>
    1a38:	5a 2c       	mov	r5, r10
    1a3a:	73 14       	cp	r7, r3
    1a3c:	18 f4       	brcc	.+6      	; 0x1a44 <vfprintf+0x30a>
    1a3e:	53 0c       	add	r5, r3
    1a40:	57 18       	sub	r5, r7
    1a42:	73 2c       	mov	r7, r3
    1a44:	73 14       	cp	r7, r3
    1a46:	60 f4       	brcc	.+24     	; 0x1a60 <vfprintf+0x326>
    1a48:	b7 01       	movw	r22, r14
    1a4a:	80 e2       	ldi	r24, 0x20	; 32
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	2c 87       	std	Y+12, r18	; 0x0c
    1a50:	9e d0       	rcall	.+316    	; 0x1b8e <fputc>
    1a52:	73 94       	inc	r7
    1a54:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a56:	f6 cf       	rjmp	.-20     	; 0x1a44 <vfprintf+0x30a>
    1a58:	73 14       	cp	r7, r3
    1a5a:	10 f4       	brcc	.+4      	; 0x1a60 <vfprintf+0x326>
    1a5c:	37 18       	sub	r3, r7
    1a5e:	01 c0       	rjmp	.+2      	; 0x1a62 <vfprintf+0x328>
    1a60:	31 2c       	mov	r3, r1
    1a62:	24 ff       	sbrs	r18, 4
    1a64:	11 c0       	rjmp	.+34     	; 0x1a88 <vfprintf+0x34e>
    1a66:	b7 01       	movw	r22, r14
    1a68:	80 e3       	ldi	r24, 0x30	; 48
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	2c 87       	std	Y+12, r18	; 0x0c
    1a6e:	8f d0       	rcall	.+286    	; 0x1b8e <fputc>
    1a70:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a72:	22 ff       	sbrs	r18, 2
    1a74:	16 c0       	rjmp	.+44     	; 0x1aa2 <vfprintf+0x368>
    1a76:	21 ff       	sbrs	r18, 1
    1a78:	03 c0       	rjmp	.+6      	; 0x1a80 <vfprintf+0x346>
    1a7a:	88 e5       	ldi	r24, 0x58	; 88
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	02 c0       	rjmp	.+4      	; 0x1a84 <vfprintf+0x34a>
    1a80:	88 e7       	ldi	r24, 0x78	; 120
    1a82:	90 e0       	ldi	r25, 0x00	; 0
    1a84:	b7 01       	movw	r22, r14
    1a86:	0c c0       	rjmp	.+24     	; 0x1aa0 <vfprintf+0x366>
    1a88:	82 2f       	mov	r24, r18
    1a8a:	86 78       	andi	r24, 0x86	; 134
    1a8c:	51 f0       	breq	.+20     	; 0x1aa2 <vfprintf+0x368>
    1a8e:	21 fd       	sbrc	r18, 1
    1a90:	02 c0       	rjmp	.+4      	; 0x1a96 <vfprintf+0x35c>
    1a92:	80 e2       	ldi	r24, 0x20	; 32
    1a94:	01 c0       	rjmp	.+2      	; 0x1a98 <vfprintf+0x35e>
    1a96:	8b e2       	ldi	r24, 0x2B	; 43
    1a98:	27 fd       	sbrc	r18, 7
    1a9a:	8d e2       	ldi	r24, 0x2D	; 45
    1a9c:	b7 01       	movw	r22, r14
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	76 d0       	rcall	.+236    	; 0x1b8e <fputc>
    1aa2:	a5 14       	cp	r10, r5
    1aa4:	30 f4       	brcc	.+12     	; 0x1ab2 <vfprintf+0x378>
    1aa6:	b7 01       	movw	r22, r14
    1aa8:	80 e3       	ldi	r24, 0x30	; 48
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	70 d0       	rcall	.+224    	; 0x1b8e <fputc>
    1aae:	5a 94       	dec	r5
    1ab0:	f8 cf       	rjmp	.-16     	; 0x1aa2 <vfprintf+0x368>
    1ab2:	aa 94       	dec	r10
    1ab4:	f4 01       	movw	r30, r8
    1ab6:	ea 0d       	add	r30, r10
    1ab8:	f1 1d       	adc	r31, r1
    1aba:	80 81       	ld	r24, Z
    1abc:	b7 01       	movw	r22, r14
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	66 d0       	rcall	.+204    	; 0x1b8e <fputc>
    1ac2:	a1 10       	cpse	r10, r1
    1ac4:	f6 cf       	rjmp	.-20     	; 0x1ab2 <vfprintf+0x378>
    1ac6:	33 20       	and	r3, r3
    1ac8:	09 f4       	brne	.+2      	; 0x1acc <vfprintf+0x392>
    1aca:	5d ce       	rjmp	.-838    	; 0x1786 <vfprintf+0x4c>
    1acc:	b7 01       	movw	r22, r14
    1ace:	80 e2       	ldi	r24, 0x20	; 32
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	5d d0       	rcall	.+186    	; 0x1b8e <fputc>
    1ad4:	3a 94       	dec	r3
    1ad6:	f7 cf       	rjmp	.-18     	; 0x1ac6 <vfprintf+0x38c>
    1ad8:	f7 01       	movw	r30, r14
    1ada:	86 81       	ldd	r24, Z+6	; 0x06
    1adc:	97 81       	ldd	r25, Z+7	; 0x07
    1ade:	02 c0       	rjmp	.+4      	; 0x1ae4 <vfprintf+0x3aa>
    1ae0:	8f ef       	ldi	r24, 0xFF	; 255
    1ae2:	9f ef       	ldi	r25, 0xFF	; 255
    1ae4:	2c 96       	adiw	r28, 0x0c	; 12
    1ae6:	0f b6       	in	r0, 0x3f	; 63
    1ae8:	f8 94       	cli
    1aea:	de bf       	out	0x3e, r29	; 62
    1aec:	0f be       	out	0x3f, r0	; 63
    1aee:	cd bf       	out	0x3d, r28	; 61
    1af0:	df 91       	pop	r29
    1af2:	cf 91       	pop	r28
    1af4:	1f 91       	pop	r17
    1af6:	0f 91       	pop	r16
    1af8:	ff 90       	pop	r15
    1afa:	ef 90       	pop	r14
    1afc:	df 90       	pop	r13
    1afe:	cf 90       	pop	r12
    1b00:	bf 90       	pop	r11
    1b02:	af 90       	pop	r10
    1b04:	9f 90       	pop	r9
    1b06:	8f 90       	pop	r8
    1b08:	7f 90       	pop	r7
    1b0a:	6f 90       	pop	r6
    1b0c:	5f 90       	pop	r5
    1b0e:	4f 90       	pop	r4
    1b10:	3f 90       	pop	r3
    1b12:	2f 90       	pop	r2
    1b14:	08 95       	ret

00001b16 <__eerd_block_m128>:
    1b16:	dc 01       	movw	r26, r24
    1b18:	cb 01       	movw	r24, r22

00001b1a <__eerd_blraw_m128>:
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	e1 99       	sbic	0x1c, 1	; 28
    1b1e:	fe cf       	rjmp	.-4      	; 0x1b1c <__eerd_blraw_m128+0x2>
    1b20:	06 c0       	rjmp	.+12     	; 0x1b2e <__eerd_blraw_m128+0x14>
    1b22:	ff bb       	out	0x1f, r31	; 31
    1b24:	ee bb       	out	0x1e, r30	; 30
    1b26:	e0 9a       	sbi	0x1c, 0	; 28
    1b28:	31 96       	adiw	r30, 0x01	; 1
    1b2a:	0d b2       	in	r0, 0x1d	; 29
    1b2c:	0d 92       	st	X+, r0
    1b2e:	41 50       	subi	r20, 0x01	; 1
    1b30:	50 40       	sbci	r21, 0x00	; 0
    1b32:	b8 f7       	brcc	.-18     	; 0x1b22 <__eerd_blraw_m128+0x8>
    1b34:	08 95       	ret

00001b36 <__eewr_block_m128>:
    1b36:	dc 01       	movw	r26, r24
    1b38:	cb 01       	movw	r24, r22
    1b3a:	02 c0       	rjmp	.+4      	; 0x1b40 <__eewr_block_m128+0xa>
    1b3c:	2d 91       	ld	r18, X+
    1b3e:	05 d0       	rcall	.+10     	; 0x1b4a <__eewr_r18_m128>
    1b40:	41 50       	subi	r20, 0x01	; 1
    1b42:	50 40       	sbci	r21, 0x00	; 0
    1b44:	d8 f7       	brcc	.-10     	; 0x1b3c <__eewr_block_m128+0x6>
    1b46:	08 95       	ret

00001b48 <__eewr_byte_m128>:
    1b48:	26 2f       	mov	r18, r22

00001b4a <__eewr_r18_m128>:
    1b4a:	e1 99       	sbic	0x1c, 1	; 28
    1b4c:	fe cf       	rjmp	.-4      	; 0x1b4a <__eewr_r18_m128>
    1b4e:	9f bb       	out	0x1f, r25	; 31
    1b50:	8e bb       	out	0x1e, r24	; 30
    1b52:	2d bb       	out	0x1d, r18	; 29
    1b54:	0f b6       	in	r0, 0x3f	; 63
    1b56:	f8 94       	cli
    1b58:	e2 9a       	sbi	0x1c, 2	; 28
    1b5a:	e1 9a       	sbi	0x1c, 1	; 28
    1b5c:	0f be       	out	0x3f, r0	; 63
    1b5e:	01 96       	adiw	r24, 0x01	; 1
    1b60:	08 95       	ret

00001b62 <strnlen_P>:
    1b62:	fc 01       	movw	r30, r24
    1b64:	05 90       	lpm	r0, Z+
    1b66:	61 50       	subi	r22, 0x01	; 1
    1b68:	70 40       	sbci	r23, 0x00	; 0
    1b6a:	01 10       	cpse	r0, r1
    1b6c:	d8 f7       	brcc	.-10     	; 0x1b64 <strnlen_P+0x2>
    1b6e:	80 95       	com	r24
    1b70:	90 95       	com	r25
    1b72:	8e 0f       	add	r24, r30
    1b74:	9f 1f       	adc	r25, r31
    1b76:	08 95       	ret

00001b78 <strnlen>:
    1b78:	fc 01       	movw	r30, r24
    1b7a:	61 50       	subi	r22, 0x01	; 1
    1b7c:	70 40       	sbci	r23, 0x00	; 0
    1b7e:	01 90       	ld	r0, Z+
    1b80:	01 10       	cpse	r0, r1
    1b82:	d8 f7       	brcc	.-10     	; 0x1b7a <strnlen+0x2>
    1b84:	80 95       	com	r24
    1b86:	90 95       	com	r25
    1b88:	8e 0f       	add	r24, r30
    1b8a:	9f 1f       	adc	r25, r31
    1b8c:	08 95       	ret

00001b8e <fputc>:
    1b8e:	0f 93       	push	r16
    1b90:	1f 93       	push	r17
    1b92:	cf 93       	push	r28
    1b94:	df 93       	push	r29
    1b96:	18 2f       	mov	r17, r24
    1b98:	09 2f       	mov	r16, r25
    1b9a:	eb 01       	movw	r28, r22
    1b9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b9e:	81 fd       	sbrc	r24, 1
    1ba0:	03 c0       	rjmp	.+6      	; 0x1ba8 <fputc+0x1a>
    1ba2:	8f ef       	ldi	r24, 0xFF	; 255
    1ba4:	9f ef       	ldi	r25, 0xFF	; 255
    1ba6:	20 c0       	rjmp	.+64     	; 0x1be8 <fputc+0x5a>
    1ba8:	82 ff       	sbrs	r24, 2
    1baa:	10 c0       	rjmp	.+32     	; 0x1bcc <fputc+0x3e>
    1bac:	4e 81       	ldd	r20, Y+6	; 0x06
    1bae:	5f 81       	ldd	r21, Y+7	; 0x07
    1bb0:	2c 81       	ldd	r18, Y+4	; 0x04
    1bb2:	3d 81       	ldd	r19, Y+5	; 0x05
    1bb4:	42 17       	cp	r20, r18
    1bb6:	53 07       	cpc	r21, r19
    1bb8:	7c f4       	brge	.+30     	; 0x1bd8 <fputc+0x4a>
    1bba:	e8 81       	ld	r30, Y
    1bbc:	f9 81       	ldd	r31, Y+1	; 0x01
    1bbe:	9f 01       	movw	r18, r30
    1bc0:	2f 5f       	subi	r18, 0xFF	; 255
    1bc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc4:	39 83       	std	Y+1, r19	; 0x01
    1bc6:	28 83       	st	Y, r18
    1bc8:	10 83       	st	Z, r17
    1bca:	06 c0       	rjmp	.+12     	; 0x1bd8 <fputc+0x4a>
    1bcc:	e8 85       	ldd	r30, Y+8	; 0x08
    1bce:	f9 85       	ldd	r31, Y+9	; 0x09
    1bd0:	81 2f       	mov	r24, r17
    1bd2:	09 95       	icall
    1bd4:	89 2b       	or	r24, r25
    1bd6:	29 f7       	brne	.-54     	; 0x1ba2 <fputc+0x14>
    1bd8:	2e 81       	ldd	r18, Y+6	; 0x06
    1bda:	3f 81       	ldd	r19, Y+7	; 0x07
    1bdc:	2f 5f       	subi	r18, 0xFF	; 255
    1bde:	3f 4f       	sbci	r19, 0xFF	; 255
    1be0:	3f 83       	std	Y+7, r19	; 0x07
    1be2:	2e 83       	std	Y+6, r18	; 0x06
    1be4:	81 2f       	mov	r24, r17
    1be6:	90 2f       	mov	r25, r16
    1be8:	df 91       	pop	r29
    1bea:	cf 91       	pop	r28
    1bec:	1f 91       	pop	r17
    1bee:	0f 91       	pop	r16
    1bf0:	08 95       	ret

00001bf2 <__ultoa_invert>:
    1bf2:	fa 01       	movw	r30, r20
    1bf4:	aa 27       	eor	r26, r26
    1bf6:	28 30       	cpi	r18, 0x08	; 8
    1bf8:	51 f1       	breq	.+84     	; 0x1c4e <__ultoa_invert+0x5c>
    1bfa:	20 31       	cpi	r18, 0x10	; 16
    1bfc:	81 f1       	breq	.+96     	; 0x1c5e <__ultoa_invert+0x6c>
    1bfe:	e8 94       	clt
    1c00:	6f 93       	push	r22
    1c02:	6e 7f       	andi	r22, 0xFE	; 254
    1c04:	6e 5f       	subi	r22, 0xFE	; 254
    1c06:	7f 4f       	sbci	r23, 0xFF	; 255
    1c08:	8f 4f       	sbci	r24, 0xFF	; 255
    1c0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c0c:	af 4f       	sbci	r26, 0xFF	; 255
    1c0e:	b1 e0       	ldi	r27, 0x01	; 1
    1c10:	3e d0       	rcall	.+124    	; 0x1c8e <__ultoa_invert+0x9c>
    1c12:	b4 e0       	ldi	r27, 0x04	; 4
    1c14:	3c d0       	rcall	.+120    	; 0x1c8e <__ultoa_invert+0x9c>
    1c16:	67 0f       	add	r22, r23
    1c18:	78 1f       	adc	r23, r24
    1c1a:	89 1f       	adc	r24, r25
    1c1c:	9a 1f       	adc	r25, r26
    1c1e:	a1 1d       	adc	r26, r1
    1c20:	68 0f       	add	r22, r24
    1c22:	79 1f       	adc	r23, r25
    1c24:	8a 1f       	adc	r24, r26
    1c26:	91 1d       	adc	r25, r1
    1c28:	a1 1d       	adc	r26, r1
    1c2a:	6a 0f       	add	r22, r26
    1c2c:	71 1d       	adc	r23, r1
    1c2e:	81 1d       	adc	r24, r1
    1c30:	91 1d       	adc	r25, r1
    1c32:	a1 1d       	adc	r26, r1
    1c34:	20 d0       	rcall	.+64     	; 0x1c76 <__ultoa_invert+0x84>
    1c36:	09 f4       	brne	.+2      	; 0x1c3a <__ultoa_invert+0x48>
    1c38:	68 94       	set
    1c3a:	3f 91       	pop	r19
    1c3c:	2a e0       	ldi	r18, 0x0A	; 10
    1c3e:	26 9f       	mul	r18, r22
    1c40:	11 24       	eor	r1, r1
    1c42:	30 19       	sub	r19, r0
    1c44:	30 5d       	subi	r19, 0xD0	; 208
    1c46:	31 93       	st	Z+, r19
    1c48:	de f6       	brtc	.-74     	; 0x1c00 <__ultoa_invert+0xe>
    1c4a:	cf 01       	movw	r24, r30
    1c4c:	08 95       	ret
    1c4e:	46 2f       	mov	r20, r22
    1c50:	47 70       	andi	r20, 0x07	; 7
    1c52:	40 5d       	subi	r20, 0xD0	; 208
    1c54:	41 93       	st	Z+, r20
    1c56:	b3 e0       	ldi	r27, 0x03	; 3
    1c58:	0f d0       	rcall	.+30     	; 0x1c78 <__ultoa_invert+0x86>
    1c5a:	c9 f7       	brne	.-14     	; 0x1c4e <__ultoa_invert+0x5c>
    1c5c:	f6 cf       	rjmp	.-20     	; 0x1c4a <__ultoa_invert+0x58>
    1c5e:	46 2f       	mov	r20, r22
    1c60:	4f 70       	andi	r20, 0x0F	; 15
    1c62:	40 5d       	subi	r20, 0xD0	; 208
    1c64:	4a 33       	cpi	r20, 0x3A	; 58
    1c66:	18 f0       	brcs	.+6      	; 0x1c6e <__ultoa_invert+0x7c>
    1c68:	49 5d       	subi	r20, 0xD9	; 217
    1c6a:	31 fd       	sbrc	r19, 1
    1c6c:	40 52       	subi	r20, 0x20	; 32
    1c6e:	41 93       	st	Z+, r20
    1c70:	02 d0       	rcall	.+4      	; 0x1c76 <__ultoa_invert+0x84>
    1c72:	a9 f7       	brne	.-22     	; 0x1c5e <__ultoa_invert+0x6c>
    1c74:	ea cf       	rjmp	.-44     	; 0x1c4a <__ultoa_invert+0x58>
    1c76:	b4 e0       	ldi	r27, 0x04	; 4
    1c78:	a6 95       	lsr	r26
    1c7a:	97 95       	ror	r25
    1c7c:	87 95       	ror	r24
    1c7e:	77 95       	ror	r23
    1c80:	67 95       	ror	r22
    1c82:	ba 95       	dec	r27
    1c84:	c9 f7       	brne	.-14     	; 0x1c78 <__ultoa_invert+0x86>
    1c86:	00 97       	sbiw	r24, 0x00	; 0
    1c88:	61 05       	cpc	r22, r1
    1c8a:	71 05       	cpc	r23, r1
    1c8c:	08 95       	ret
    1c8e:	9b 01       	movw	r18, r22
    1c90:	ac 01       	movw	r20, r24
    1c92:	0a 2e       	mov	r0, r26
    1c94:	06 94       	lsr	r0
    1c96:	57 95       	ror	r21
    1c98:	47 95       	ror	r20
    1c9a:	37 95       	ror	r19
    1c9c:	27 95       	ror	r18
    1c9e:	ba 95       	dec	r27
    1ca0:	c9 f7       	brne	.-14     	; 0x1c94 <__ultoa_invert+0xa2>
    1ca2:	62 0f       	add	r22, r18
    1ca4:	73 1f       	adc	r23, r19
    1ca6:	84 1f       	adc	r24, r20
    1ca8:	95 1f       	adc	r25, r21
    1caa:	a0 1d       	adc	r26, r0
    1cac:	08 95       	ret

00001cae <_exit>:
    1cae:	f8 94       	cli

00001cb0 <__stop_program>:
    1cb0:	ff cf       	rjmp	.-2      	; 0x1cb0 <__stop_program>
