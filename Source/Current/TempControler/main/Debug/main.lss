
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00001d9e  00001e52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d9e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000052  00800154  00800154  00001ea6  2**0
                  ALLOC
  3 .eeprom       00000009  00810000  00810000  00001ea6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00001eaf  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000358  00000000  00000000  00001f0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000248c  00000000  00000000  00002263  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d3  00000000  00000000  000046ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000188c  00000000  00000000  000050c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a44  00000000  00000000  00006950  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a50  00000000  00000000  00007394  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c91  00000000  00000000  00007de4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000320  00000000  00000000  00009a75  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a6 c0       	rjmp	.+332    	; 0x14e <__ctors_end>
       2:	00 00       	nop
       4:	49 c1       	rjmp	.+658    	; 0x298 <__vector_1>
       6:	00 00       	nop
       8:	51 c1       	rjmp	.+674    	; 0x2ac <__vector_2>
       a:	00 00       	nop
       c:	59 c1       	rjmp	.+690    	; 0x2c0 <__vector_3>
       e:	00 00       	nop
      10:	61 c1       	rjmp	.+706    	; 0x2d4 <__vector_4>
      12:	00 00       	nop
      14:	69 c1       	rjmp	.+722    	; 0x2e8 <__vector_5>
      16:	00 00       	nop
      18:	71 c1       	rjmp	.+738    	; 0x2fc <__vector_6>
      1a:	00 00       	nop
      1c:	79 c1       	rjmp	.+754    	; 0x310 <__vector_7>
      1e:	00 00       	nop
      20:	81 c1       	rjmp	.+770    	; 0x324 <__vector_8>
      22:	00 00       	nop
      24:	89 c1       	rjmp	.+786    	; 0x338 <__vector_9>
      26:	00 00       	nop
      28:	91 c1       	rjmp	.+802    	; 0x34c <__vector_10>
      2a:	00 00       	nop
      2c:	99 c1       	rjmp	.+818    	; 0x360 <__vector_11>
      2e:	00 00       	nop
      30:	a1 c1       	rjmp	.+834    	; 0x374 <__vector_12>
      32:	00 00       	nop
      34:	a9 c1       	rjmp	.+850    	; 0x388 <__vector_13>
      36:	00 00       	nop
      38:	b1 c1       	rjmp	.+866    	; 0x39c <__vector_14>
      3a:	00 00       	nop
      3c:	b9 c1       	rjmp	.+882    	; 0x3b0 <__vector_15>
      3e:	00 00       	nop
      40:	07 c2       	rjmp	.+1038   	; 0x450 <__vector_16>
      42:	00 00       	nop
      44:	0f c2       	rjmp	.+1054   	; 0x464 <__vector_17>
      46:	00 00       	nop
      48:	17 c2       	rjmp	.+1070   	; 0x478 <__vector_18>
      4a:	00 00       	nop
      4c:	3d c2       	rjmp	.+1146   	; 0x4c8 <__vector_19>
      4e:	00 00       	nop
      50:	45 c2       	rjmp	.+1162   	; 0x4dc <__vector_20>
      52:	00 00       	nop
      54:	4d c2       	rjmp	.+1178   	; 0x4f0 <__vector_21>
      56:	00 00       	nop
      58:	55 c2       	rjmp	.+1194   	; 0x504 <__vector_22>
      5a:	00 00       	nop
      5c:	5d c2       	rjmp	.+1210   	; 0x518 <__vector_23>
      5e:	00 00       	nop
      60:	65 c2       	rjmp	.+1226   	; 0x52c <__vector_24>
      62:	00 00       	nop
      64:	6d c2       	rjmp	.+1242   	; 0x540 <__vector_25>
      66:	00 00       	nop
      68:	75 c2       	rjmp	.+1258   	; 0x554 <__vector_26>
      6a:	00 00       	nop
      6c:	7d c2       	rjmp	.+1274   	; 0x568 <__vector_27>
      6e:	00 00       	nop
      70:	85 c2       	rjmp	.+1290   	; 0x57c <__vector_28>
      72:	00 00       	nop
      74:	8d c2       	rjmp	.+1306   	; 0x590 <__vector_29>
      76:	00 00       	nop
      78:	95 c2       	rjmp	.+1322   	; 0x5a4 <__vector_30>
      7a:	00 00       	nop
      7c:	d8 c2       	rjmp	.+1456   	; 0x62e <__vector_31>
      7e:	00 00       	nop
      80:	e0 c2       	rjmp	.+1472   	; 0x642 <__vector_32>
      82:	00 00       	nop
      84:	e8 c2       	rjmp	.+1488   	; 0x656 <__vector_33>
      86:	00 00       	nop
      88:	f0 c2       	rjmp	.+1504   	; 0x66a <__vector_34>
      8a:	00 00       	nop
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa07>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc37>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa55>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <USART0_receiveChar+0x6>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <LcdCustomChar>:
     10e:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
     11e:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
     12e:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
     13e:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf ef       	ldi	r28, 0xFF	; 255
     154:	d0 e1       	ldi	r29, 0x10	; 16
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e0       	ldi	r26, 0x00	; 0
     15e:	b1 e0       	ldi	r27, 0x01	; 1
     160:	ee e9       	ldi	r30, 0x9E	; 158
     162:	fd e1       	ldi	r31, 0x1D	; 29
     164:	00 e0       	ldi	r16, 0x00	; 0
     166:	0b bf       	out	0x3b, r16	; 59
     168:	02 c0       	rjmp	.+4      	; 0x16e <__do_copy_data+0x14>
     16a:	07 90       	elpm	r0, Z+
     16c:	0d 92       	st	X+, r0
     16e:	a4 35       	cpi	r26, 0x54	; 84
     170:	b1 07       	cpc	r27, r17
     172:	d9 f7       	brne	.-10     	; 0x16a <__do_copy_data+0x10>

00000174 <__do_clear_bss>:
     174:	21 e0       	ldi	r18, 0x01	; 1
     176:	a4 e5       	ldi	r26, 0x54	; 84
     178:	b1 e0       	ldi	r27, 0x01	; 1
     17a:	01 c0       	rjmp	.+2      	; 0x17e <.do_clear_bss_start>

0000017c <.do_clear_bss_loop>:
     17c:	1d 92       	st	X+, r1

0000017e <.do_clear_bss_start>:
     17e:	a6 3a       	cpi	r26, 0xA6	; 166
     180:	b2 07       	cpc	r27, r18
     182:	e1 f7       	brne	.-8      	; 0x17c <.do_clear_bss_loop>
     184:	1f d7       	rcall	.+3646   	; 0xfc4 <main>
     186:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <_exit>

0000018a <DS_reset>:
 */
uint8_t DS_reset() {
	uint8_t i;

	//low for 480us
	DS18B20_PORT &= ~ (1<<DS18B20_DQ); //low
     18a:	c0 98       	cbi	0x18, 0	; 24
	DS18B20_DDR |= (1<<DS18B20_DQ); //output
     18c:	b8 9a       	sbi	0x17, 0	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	8f e7       	ldi	r24, 0x7F	; 127
     190:	97 e0       	ldi	r25, 0x07	; 7
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <DS_reset+0x8>
     196:	00 c0       	rjmp	.+0      	; 0x198 <DS_reset+0xe>
     198:	00 00       	nop
	_delay_us(480);

	//release line and wait for 60uS
	DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
     19a:	b8 98       	cbi	0x17, 0	; 23
     19c:	ef ee       	ldi	r30, 0xEF	; 239
     19e:	f0 e0       	ldi	r31, 0x00	; 0
     1a0:	31 97       	sbiw	r30, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <DS_reset+0x16>
     1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <DS_reset+0x1c>
     1a6:	00 00       	nop
	_delay_us(60);

	//get value and wait 420us
	i = (DS18B20_PIN & (1<<DS18B20_DQ));
     1a8:	86 b3       	in	r24, 0x16	; 22
     1aa:	ef e8       	ldi	r30, 0x8F	; 143
     1ac:	f6 e0       	ldi	r31, 0x06	; 6
     1ae:	31 97       	sbiw	r30, 0x01	; 1
     1b0:	f1 f7       	brne	.-4      	; 0x1ae <DS_reset+0x24>
     1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <DS_reset+0x2a>
     1b4:	00 00       	nop
	_delay_us(420);

	//return the read value, 0=ok, 1=error
	return i;
}
     1b6:	81 70       	andi	r24, 0x01	; 1
     1b8:	08 95       	ret

000001ba <DS_writeBit>:
/*
 * write one bit
 */
void DS_writeBit(uint8_t bit){
	//low for 1uS
	DS18B20_PORT &= ~ (1<<DS18B20_DQ); //low
     1ba:	c0 98       	cbi	0x18, 0	; 24
	DS18B20_DDR |= (1<<DS18B20_DQ); //output
     1bc:	b8 9a       	sbi	0x17, 0	; 23
     1be:	95 e0       	ldi	r25, 0x05	; 5
     1c0:	9a 95       	dec	r25
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <DS_writeBit+0x6>
     1c4:	00 00       	nop
	_delay_us(1);

	//if we want to write 1, release the line (if not will keep low)
	if(bit)
     1c6:	81 11       	cpse	r24, r1
		DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
     1c8:	b8 98       	cbi	0x17, 0	; 23
     1ca:	8f ee       	ldi	r24, 0xEF	; 239
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	01 97       	sbiw	r24, 0x01	; 1
     1d0:	f1 f7       	brne	.-4      	; 0x1ce <DS_writeBit+0x14>
     1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <DS_writeBit+0x1a>
     1d4:	00 00       	nop

	//wait 60uS and release the line
	_delay_us(60);
	DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
     1d6:	b8 98       	cbi	0x17, 0	; 23
     1d8:	08 95       	ret

000001da <DS_readBit>:
 */
uint8_t DS_readBit(void){
	uint8_t bit=0;

	//low for 1uS
	DS18B20_PORT &= ~ (1<<DS18B20_DQ); //low
     1da:	c0 98       	cbi	0x18, 0	; 24
	DS18B20_DDR |= (1<<DS18B20_DQ); //output
     1dc:	b8 9a       	sbi	0x17, 0	; 23
     1de:	85 e0       	ldi	r24, 0x05	; 5
     1e0:	8a 95       	dec	r24
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <DS_readBit+0x6>
     1e4:	00 00       	nop
	_delay_us(1);

	//release line and wait for 14uS
	DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
     1e6:	b8 98       	cbi	0x17, 0	; 23
     1e8:	9a e4       	ldi	r25, 0x4A	; 74
     1ea:	9a 95       	dec	r25
     1ec:	f1 f7       	brne	.-4      	; 0x1ea <DS_readBit+0x10>
     1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <DS_readBit+0x16>
	_delay_us(14);

	//read the value
	if(DS18B20_PIN & (1<<DS18B20_DQ))
     1f0:	86 b3       	in	r24, 0x16	; 22
     1f2:	90 ef       	ldi	r25, 0xF0	; 240
     1f4:	9a 95       	dec	r25
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <DS_readBit+0x1a>
		bit=1;

	//wait 45uS and return read value
	_delay_us(45);
	return bit;
}
     1f8:	81 70       	andi	r24, 0x01	; 1
     1fa:	08 95       	ret

000001fc <DS_writeByte>:

/*
 * write one byte
 */
void DS_writeByte(uint8_t byte){
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	d8 2f       	mov	r29, r24
     202:	c8 e0       	ldi	r28, 0x08	; 8
	uint8_t i=8;
	while(i--){
		DS_writeBit(byte&1);
     204:	8d 2f       	mov	r24, r29
     206:	81 70       	andi	r24, 0x01	; 1
     208:	d8 df       	rcall	.-80     	; 0x1ba <DS_writeBit>
		byte >>= 1;
     20a:	d6 95       	lsr	r29
     20c:	c1 50       	subi	r28, 0x01	; 1
/*
 * write one byte
 */
void DS_writeByte(uint8_t byte){
	uint8_t i=8;
	while(i--){
     20e:	d1 f7       	brne	.-12     	; 0x204 <DS_writeByte+0x8>
		DS_writeBit(byte&1);
		byte >>= 1;
	}
}
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	08 95       	ret

00000216 <DS_readByte>:

/*
 * read one byte
 */
uint8_t DS_readByte(void){
     216:	cf 93       	push	r28
     218:	df 93       	push	r29
     21a:	c8 e0       	ldi	r28, 0x08	; 8
	uint8_t i=8, n=0;
     21c:	d0 e0       	ldi	r29, 0x00	; 0
	while(i--){
		n >>= 1;
		n |= (DS_readBit()<<7);
     21e:	dd df       	rcall	.-70     	; 0x1da <DS_readBit>
     220:	20 e8       	ldi	r18, 0x80	; 128
     222:	82 9f       	mul	r24, r18
     224:	c0 01       	movw	r24, r0
     226:	11 24       	eor	r1, r1
 * read one byte
 */
uint8_t DS_readByte(void){
	uint8_t i=8, n=0;
	while(i--){
		n >>= 1;
     228:	d6 95       	lsr	r29
		n |= (DS_readBit()<<7);
     22a:	d8 2b       	or	r29, r24
     22c:	c1 50       	subi	r28, 0x01	; 1
/*
 * read one byte
 */
uint8_t DS_readByte(void){
	uint8_t i=8, n=0;
	while(i--){
     22e:	b9 f7       	brne	.-18     	; 0x21e <DS_readByte+0x8>
		n >>= 1;
		n |= (DS_readBit()<<7);
	}
	return n;
}
     230:	8d 2f       	mov	r24, r29
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <DS18B20_startConv>:



void DS18B20_startConv(void){
	DS_reset(); //reset
     238:	a8 df       	rcall	.-176    	; 0x18a <DS_reset>
	DS_writeByte(DS18B20_CMD_SKIPROM); //skip ROM
     23a:	8c ec       	ldi	r24, 0xCC	; 204
     23c:	df df       	rcall	.-66     	; 0x1fc <DS_writeByte>
	DS_writeByte(DS18B20_CMD_CONVERTTEMP); //start temperature conversion
     23e:	84 e4       	ldi	r24, 0x44	; 68
     240:	dd cf       	rjmp	.-70     	; 0x1fc <DS_writeByte>
     242:	08 95       	ret

00000244 <DS18B20_convComplete>:

/************************************************************************/
/* @check if ds as finished                                                                     */
/************************************************************************/
uint8_t DS18B20_convComplete(void){
	return DS_readBit(); //wait until conversion is complete
     244:	ca cf       	rjmp	.-108    	; 0x1da <DS_readBit>
	
}
     246:	08 95       	ret

00000248 <DS18B20_getTemp>:

double DS18B20_getTemp(void){
     248:	cf 93       	push	r28
	uint8_t temperature_l;
	uint8_t temperature_h;
	double retd = 0;
	
	DS_reset(); //reset
     24a:	9f df       	rcall	.-194    	; 0x18a <DS_reset>
	DS_writeByte(DS18B20_CMD_SKIPROM); //skip ROM
     24c:	8c ec       	ldi	r24, 0xCC	; 204
     24e:	d6 df       	rcall	.-84     	; 0x1fc <DS_writeByte>
	DS_writeByte(DS18B20_CMD_RSCRATCHPAD); //read scratchpad
     250:	8e eb       	ldi	r24, 0xBE	; 190
     252:	d4 df       	rcall	.-88     	; 0x1fc <DS_writeByte>

	//read 2 byte from scratchpad
	temperature_l = DS_readByte();
     254:	e0 df       	rcall	.-64     	; 0x216 <DS_readByte>
     256:	c8 2f       	mov	r28, r24
	temperature_h = DS_readByte();
     258:	de df       	rcall	.-68     	; 0x216 <DS_readByte>
	sprintf(buffer,"%x:%x\n\r",temperature_h,temperature_l);
	USART1_sendStr(buffer);
	#endif
	
	//convert the 12 bit value obtained
	retd = ( ( temperature_h << 8 ) + temperature_l ) * 0.0625 ;
     25a:	68 2f       	mov	r22, r24
     25c:	70 e0       	ldi	r23, 0x00	; 0
     25e:	76 2f       	mov	r23, r22
     260:	66 27       	eor	r22, r22
     262:	6c 0f       	add	r22, r28
     264:	71 1d       	adc	r23, r1
     266:	88 27       	eor	r24, r24
     268:	77 fd       	sbrc	r23, 7
     26a:	80 95       	com	r24
     26c:	98 2f       	mov	r25, r24
     26e:	0e 94 86 09 	call	0x130c	; 0x130c <__floatsisf>
     272:	20 e0       	ldi	r18, 0x00	; 0
     274:	30 e0       	ldi	r19, 0x00	; 0
     276:	40 e8       	ldi	r20, 0x80	; 128
     278:	5d e3       	ldi	r21, 0x3D	; 61
     27a:	0e 94 14 0b 	call	0x1628	; 0x1628 <__mulsf3>

	return retd;
}
     27e:	cf 91       	pop	r28
     280:	08 95       	ret

00000282 <clearBuffer>:
     282:	80 e0       	ldi	r24, 0x00	; 0
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	fc 01       	movw	r30, r24
     288:	e0 5a       	subi	r30, 0xA0	; 160
     28a:	fe 4f       	sbci	r31, 0xFE	; 254
     28c:	10 82       	st	Z, r1
     28e:	01 96       	adiw	r24, 0x01	; 1
     290:	82 33       	cpi	r24, 0x32	; 50
     292:	91 05       	cpc	r25, r1
     294:	c1 f7       	brne	.-16     	; 0x286 <clearBuffer+0x4>
     296:	08 95       	ret

00000298 <__vector_1>:
     298:	1f 92       	push	r1
     29a:	0f 92       	push	r0
     29c:	0f b6       	in	r0, 0x3f	; 63
     29e:	0f 92       	push	r0
     2a0:	11 24       	eor	r1, r1
     2a2:	0f 90       	pop	r0
     2a4:	0f be       	out	0x3f, r0	; 63
     2a6:	0f 90       	pop	r0
     2a8:	1f 90       	pop	r1
     2aa:	18 95       	reti

000002ac <__vector_2>:
     2ac:	1f 92       	push	r1
     2ae:	0f 92       	push	r0
     2b0:	0f b6       	in	r0, 0x3f	; 63
     2b2:	0f 92       	push	r0
     2b4:	11 24       	eor	r1, r1
     2b6:	0f 90       	pop	r0
     2b8:	0f be       	out	0x3f, r0	; 63
     2ba:	0f 90       	pop	r0
     2bc:	1f 90       	pop	r1
     2be:	18 95       	reti

000002c0 <__vector_3>:
     2c0:	1f 92       	push	r1
     2c2:	0f 92       	push	r0
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	0f 92       	push	r0
     2c8:	11 24       	eor	r1, r1
     2ca:	0f 90       	pop	r0
     2cc:	0f be       	out	0x3f, r0	; 63
     2ce:	0f 90       	pop	r0
     2d0:	1f 90       	pop	r1
     2d2:	18 95       	reti

000002d4 <__vector_4>:
     2d4:	1f 92       	push	r1
     2d6:	0f 92       	push	r0
     2d8:	0f b6       	in	r0, 0x3f	; 63
     2da:	0f 92       	push	r0
     2dc:	11 24       	eor	r1, r1
     2de:	0f 90       	pop	r0
     2e0:	0f be       	out	0x3f, r0	; 63
     2e2:	0f 90       	pop	r0
     2e4:	1f 90       	pop	r1
     2e6:	18 95       	reti

000002e8 <__vector_5>:
     2e8:	1f 92       	push	r1
     2ea:	0f 92       	push	r0
     2ec:	0f b6       	in	r0, 0x3f	; 63
     2ee:	0f 92       	push	r0
     2f0:	11 24       	eor	r1, r1
     2f2:	0f 90       	pop	r0
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	0f 90       	pop	r0
     2f8:	1f 90       	pop	r1
     2fa:	18 95       	reti

000002fc <__vector_6>:
     2fc:	1f 92       	push	r1
     2fe:	0f 92       	push	r0
     300:	0f b6       	in	r0, 0x3f	; 63
     302:	0f 92       	push	r0
     304:	11 24       	eor	r1, r1
     306:	0f 90       	pop	r0
     308:	0f be       	out	0x3f, r0	; 63
     30a:	0f 90       	pop	r0
     30c:	1f 90       	pop	r1
     30e:	18 95       	reti

00000310 <__vector_7>:
     310:	1f 92       	push	r1
     312:	0f 92       	push	r0
     314:	0f b6       	in	r0, 0x3f	; 63
     316:	0f 92       	push	r0
     318:	11 24       	eor	r1, r1
     31a:	0f 90       	pop	r0
     31c:	0f be       	out	0x3f, r0	; 63
     31e:	0f 90       	pop	r0
     320:	1f 90       	pop	r1
     322:	18 95       	reti

00000324 <__vector_8>:
     324:	1f 92       	push	r1
     326:	0f 92       	push	r0
     328:	0f b6       	in	r0, 0x3f	; 63
     32a:	0f 92       	push	r0
     32c:	11 24       	eor	r1, r1
     32e:	0f 90       	pop	r0
     330:	0f be       	out	0x3f, r0	; 63
     332:	0f 90       	pop	r0
     334:	1f 90       	pop	r1
     336:	18 95       	reti

00000338 <__vector_9>:
     338:	1f 92       	push	r1
     33a:	0f 92       	push	r0
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	0f 92       	push	r0
     340:	11 24       	eor	r1, r1
     342:	0f 90       	pop	r0
     344:	0f be       	out	0x3f, r0	; 63
     346:	0f 90       	pop	r0
     348:	1f 90       	pop	r1
     34a:	18 95       	reti

0000034c <__vector_10>:
     34c:	1f 92       	push	r1
     34e:	0f 92       	push	r0
     350:	0f b6       	in	r0, 0x3f	; 63
     352:	0f 92       	push	r0
     354:	11 24       	eor	r1, r1
     356:	0f 90       	pop	r0
     358:	0f be       	out	0x3f, r0	; 63
     35a:	0f 90       	pop	r0
     35c:	1f 90       	pop	r1
     35e:	18 95       	reti

00000360 <__vector_11>:
     360:	1f 92       	push	r1
     362:	0f 92       	push	r0
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	0f 92       	push	r0
     368:	11 24       	eor	r1, r1
     36a:	0f 90       	pop	r0
     36c:	0f be       	out	0x3f, r0	; 63
     36e:	0f 90       	pop	r0
     370:	1f 90       	pop	r1
     372:	18 95       	reti

00000374 <__vector_12>:
     374:	1f 92       	push	r1
     376:	0f 92       	push	r0
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	0f 92       	push	r0
     37c:	11 24       	eor	r1, r1
     37e:	0f 90       	pop	r0
     380:	0f be       	out	0x3f, r0	; 63
     382:	0f 90       	pop	r0
     384:	1f 90       	pop	r1
     386:	18 95       	reti

00000388 <__vector_13>:
     388:	1f 92       	push	r1
     38a:	0f 92       	push	r0
     38c:	0f b6       	in	r0, 0x3f	; 63
     38e:	0f 92       	push	r0
     390:	11 24       	eor	r1, r1
     392:	0f 90       	pop	r0
     394:	0f be       	out	0x3f, r0	; 63
     396:	0f 90       	pop	r0
     398:	1f 90       	pop	r1
     39a:	18 95       	reti

0000039c <__vector_14>:
     39c:	1f 92       	push	r1
     39e:	0f 92       	push	r0
     3a0:	0f b6       	in	r0, 0x3f	; 63
     3a2:	0f 92       	push	r0
     3a4:	11 24       	eor	r1, r1
     3a6:	0f 90       	pop	r0
     3a8:	0f be       	out	0x3f, r0	; 63
     3aa:	0f 90       	pop	r0
     3ac:	1f 90       	pop	r1
     3ae:	18 95       	reti

000003b0 <__vector_15>:
     3b0:	1f 92       	push	r1
     3b2:	0f 92       	push	r0
     3b4:	0f b6       	in	r0, 0x3f	; 63
     3b6:	0f 92       	push	r0
     3b8:	11 24       	eor	r1, r1
     3ba:	2f 93       	push	r18
     3bc:	3f 93       	push	r19
     3be:	5f 93       	push	r21
     3c0:	6f 93       	push	r22
     3c2:	7f 93       	push	r23
     3c4:	8f 93       	push	r24
     3c6:	9f 93       	push	r25
     3c8:	af 93       	push	r26
     3ca:	bf 93       	push	r27
     3cc:	20 91 54 01 	lds	r18, 0x0154
     3d0:	30 91 55 01 	lds	r19, 0x0155
     3d4:	2f 5f       	subi	r18, 0xFF	; 255
     3d6:	3f 4f       	sbci	r19, 0xFF	; 255
     3d8:	30 93 55 01 	sts	0x0155, r19
     3dc:	20 93 54 01 	sts	0x0154, r18
     3e0:	60 91 0c 01 	lds	r22, 0x010C
     3e4:	70 91 0d 01 	lds	r23, 0x010D
     3e8:	c9 01       	movw	r24, r18
     3ea:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__udivmodhi4>
     3ee:	89 2b       	or	r24, r25
     3f0:	29 f4       	brne	.+10     	; 0x3fc <__vector_15+0x4c>
     3f2:	80 91 5c 01 	lds	r24, 0x015C
     3f6:	8f 5f       	subi	r24, 0xFF	; 255
     3f8:	80 93 5c 01 	sts	0x015C, r24
     3fc:	60 91 10 01 	lds	r22, 0x0110
     400:	70 91 11 01 	lds	r23, 0x0111
     404:	c9 01       	movw	r24, r18
     406:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__udivmodhi4>
     40a:	89 2b       	or	r24, r25
     40c:	29 f4       	brne	.+10     	; 0x418 <__vector_15+0x68>
     40e:	80 91 5e 01 	lds	r24, 0x015E
     412:	8f 5f       	subi	r24, 0xFF	; 255
     414:	80 93 5e 01 	sts	0x015E, r24
     418:	60 91 0e 01 	lds	r22, 0x010E
     41c:	70 91 0f 01 	lds	r23, 0x010F
     420:	c9 01       	movw	r24, r18
     422:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__udivmodhi4>
     426:	89 2b       	or	r24, r25
     428:	29 f4       	brne	.+10     	; 0x434 <__vector_15+0x84>
     42a:	80 91 5d 01 	lds	r24, 0x015D
     42e:	8f 5f       	subi	r24, 0xFF	; 255
     430:	80 93 5d 01 	sts	0x015D, r24
     434:	bf 91       	pop	r27
     436:	af 91       	pop	r26
     438:	9f 91       	pop	r25
     43a:	8f 91       	pop	r24
     43c:	7f 91       	pop	r23
     43e:	6f 91       	pop	r22
     440:	5f 91       	pop	r21
     442:	3f 91       	pop	r19
     444:	2f 91       	pop	r18
     446:	0f 90       	pop	r0
     448:	0f be       	out	0x3f, r0	; 63
     44a:	0f 90       	pop	r0
     44c:	1f 90       	pop	r1
     44e:	18 95       	reti

00000450 <__vector_16>:
     450:	1f 92       	push	r1
     452:	0f 92       	push	r0
     454:	0f b6       	in	r0, 0x3f	; 63
     456:	0f 92       	push	r0
     458:	11 24       	eor	r1, r1
     45a:	0f 90       	pop	r0
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	0f 90       	pop	r0
     460:	1f 90       	pop	r1
     462:	18 95       	reti

00000464 <__vector_17>:
     464:	1f 92       	push	r1
     466:	0f 92       	push	r0
     468:	0f b6       	in	r0, 0x3f	; 63
     46a:	0f 92       	push	r0
     46c:	11 24       	eor	r1, r1
     46e:	0f 90       	pop	r0
     470:	0f be       	out	0x3f, r0	; 63
     472:	0f 90       	pop	r0
     474:	1f 90       	pop	r1
     476:	18 95       	reti

00000478 <__vector_18>:
     478:	1f 92       	push	r1
     47a:	0f 92       	push	r0
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	0f 92       	push	r0
     480:	11 24       	eor	r1, r1
     482:	0b b6       	in	r0, 0x3b	; 59
     484:	0f 92       	push	r0
     486:	2f 93       	push	r18
     488:	3f 93       	push	r19
     48a:	4f 93       	push	r20
     48c:	5f 93       	push	r21
     48e:	6f 93       	push	r22
     490:	7f 93       	push	r23
     492:	8f 93       	push	r24
     494:	9f 93       	push	r25
     496:	af 93       	push	r26
     498:	bf 93       	push	r27
     49a:	ef 93       	push	r30
     49c:	ff 93       	push	r31
     49e:	31 d2       	rcall	.+1122   	; 0x902 <USART0_receiveChar>
     4a0:	f0 d1       	rcall	.+992    	; 0x882 <USART1_sendChar>
     4a2:	ff 91       	pop	r31
     4a4:	ef 91       	pop	r30
     4a6:	bf 91       	pop	r27
     4a8:	af 91       	pop	r26
     4aa:	9f 91       	pop	r25
     4ac:	8f 91       	pop	r24
     4ae:	7f 91       	pop	r23
     4b0:	6f 91       	pop	r22
     4b2:	5f 91       	pop	r21
     4b4:	4f 91       	pop	r20
     4b6:	3f 91       	pop	r19
     4b8:	2f 91       	pop	r18
     4ba:	0f 90       	pop	r0
     4bc:	0b be       	out	0x3b, r0	; 59
     4be:	0f 90       	pop	r0
     4c0:	0f be       	out	0x3f, r0	; 63
     4c2:	0f 90       	pop	r0
     4c4:	1f 90       	pop	r1
     4c6:	18 95       	reti

000004c8 <__vector_19>:
     4c8:	1f 92       	push	r1
     4ca:	0f 92       	push	r0
     4cc:	0f b6       	in	r0, 0x3f	; 63
     4ce:	0f 92       	push	r0
     4d0:	11 24       	eor	r1, r1
     4d2:	0f 90       	pop	r0
     4d4:	0f be       	out	0x3f, r0	; 63
     4d6:	0f 90       	pop	r0
     4d8:	1f 90       	pop	r1
     4da:	18 95       	reti

000004dc <__vector_20>:
     4dc:	1f 92       	push	r1
     4de:	0f 92       	push	r0
     4e0:	0f b6       	in	r0, 0x3f	; 63
     4e2:	0f 92       	push	r0
     4e4:	11 24       	eor	r1, r1
     4e6:	0f 90       	pop	r0
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	0f 90       	pop	r0
     4ec:	1f 90       	pop	r1
     4ee:	18 95       	reti

000004f0 <__vector_21>:
     4f0:	1f 92       	push	r1
     4f2:	0f 92       	push	r0
     4f4:	0f b6       	in	r0, 0x3f	; 63
     4f6:	0f 92       	push	r0
     4f8:	11 24       	eor	r1, r1
     4fa:	0f 90       	pop	r0
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	0f 90       	pop	r0
     500:	1f 90       	pop	r1
     502:	18 95       	reti

00000504 <__vector_22>:
     504:	1f 92       	push	r1
     506:	0f 92       	push	r0
     508:	0f b6       	in	r0, 0x3f	; 63
     50a:	0f 92       	push	r0
     50c:	11 24       	eor	r1, r1
     50e:	0f 90       	pop	r0
     510:	0f be       	out	0x3f, r0	; 63
     512:	0f 90       	pop	r0
     514:	1f 90       	pop	r1
     516:	18 95       	reti

00000518 <__vector_23>:
     518:	1f 92       	push	r1
     51a:	0f 92       	push	r0
     51c:	0f b6       	in	r0, 0x3f	; 63
     51e:	0f 92       	push	r0
     520:	11 24       	eor	r1, r1
     522:	0f 90       	pop	r0
     524:	0f be       	out	0x3f, r0	; 63
     526:	0f 90       	pop	r0
     528:	1f 90       	pop	r1
     52a:	18 95       	reti

0000052c <__vector_24>:
     52c:	1f 92       	push	r1
     52e:	0f 92       	push	r0
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	0f 92       	push	r0
     534:	11 24       	eor	r1, r1
     536:	0f 90       	pop	r0
     538:	0f be       	out	0x3f, r0	; 63
     53a:	0f 90       	pop	r0
     53c:	1f 90       	pop	r1
     53e:	18 95       	reti

00000540 <__vector_25>:
     540:	1f 92       	push	r1
     542:	0f 92       	push	r0
     544:	0f b6       	in	r0, 0x3f	; 63
     546:	0f 92       	push	r0
     548:	11 24       	eor	r1, r1
     54a:	0f 90       	pop	r0
     54c:	0f be       	out	0x3f, r0	; 63
     54e:	0f 90       	pop	r0
     550:	1f 90       	pop	r1
     552:	18 95       	reti

00000554 <__vector_26>:
     554:	1f 92       	push	r1
     556:	0f 92       	push	r0
     558:	0f b6       	in	r0, 0x3f	; 63
     55a:	0f 92       	push	r0
     55c:	11 24       	eor	r1, r1
     55e:	0f 90       	pop	r0
     560:	0f be       	out	0x3f, r0	; 63
     562:	0f 90       	pop	r0
     564:	1f 90       	pop	r1
     566:	18 95       	reti

00000568 <__vector_27>:
     568:	1f 92       	push	r1
     56a:	0f 92       	push	r0
     56c:	0f b6       	in	r0, 0x3f	; 63
     56e:	0f 92       	push	r0
     570:	11 24       	eor	r1, r1
     572:	0f 90       	pop	r0
     574:	0f be       	out	0x3f, r0	; 63
     576:	0f 90       	pop	r0
     578:	1f 90       	pop	r1
     57a:	18 95       	reti

0000057c <__vector_28>:
     57c:	1f 92       	push	r1
     57e:	0f 92       	push	r0
     580:	0f b6       	in	r0, 0x3f	; 63
     582:	0f 92       	push	r0
     584:	11 24       	eor	r1, r1
     586:	0f 90       	pop	r0
     588:	0f be       	out	0x3f, r0	; 63
     58a:	0f 90       	pop	r0
     58c:	1f 90       	pop	r1
     58e:	18 95       	reti

00000590 <__vector_29>:
     590:	1f 92       	push	r1
     592:	0f 92       	push	r0
     594:	0f b6       	in	r0, 0x3f	; 63
     596:	0f 92       	push	r0
     598:	11 24       	eor	r1, r1
     59a:	0f 90       	pop	r0
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	0f 90       	pop	r0
     5a0:	1f 90       	pop	r1
     5a2:	18 95       	reti

000005a4 <__vector_30>:
     5a4:	1f 92       	push	r1
     5a6:	0f 92       	push	r0
     5a8:	0f b6       	in	r0, 0x3f	; 63
     5aa:	0f 92       	push	r0
     5ac:	11 24       	eor	r1, r1
     5ae:	0b b6       	in	r0, 0x3b	; 59
     5b0:	0f 92       	push	r0
     5b2:	2f 93       	push	r18
     5b4:	3f 93       	push	r19
     5b6:	4f 93       	push	r20
     5b8:	5f 93       	push	r21
     5ba:	6f 93       	push	r22
     5bc:	7f 93       	push	r23
     5be:	8f 93       	push	r24
     5c0:	9f 93       	push	r25
     5c2:	af 93       	push	r26
     5c4:	bf 93       	push	r27
     5c6:	cf 93       	push	r28
     5c8:	ef 93       	push	r30
     5ca:	ff 93       	push	r31
     5cc:	8e d1       	rcall	.+796    	; 0x8ea <USART1_receiveChar>
     5ce:	c8 2f       	mov	r28, r24
     5d0:	94 d1       	rcall	.+808    	; 0x8fa <USART0_sendChar>
     5d2:	cc 37       	cpi	r28, 0x7C	; 124
     5d4:	31 f4       	brne	.+12     	; 0x5e2 <__vector_30+0x3e>
     5d6:	10 92 92 01 	sts	0x0192, r1
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	80 93 5f 01 	sts	0x015F, r24
     5e0:	12 c0       	rjmp	.+36     	; 0x606 <__vector_30+0x62>
     5e2:	e0 91 92 01 	lds	r30, 0x0192
     5e6:	f0 e0       	ldi	r31, 0x00	; 0
     5e8:	e0 5a       	subi	r30, 0xA0	; 160
     5ea:	fe 4f       	sbci	r31, 0xFE	; 254
     5ec:	c0 83       	st	Z, r28
     5ee:	80 91 92 01 	lds	r24, 0x0192
     5f2:	8f 5f       	subi	r24, 0xFF	; 255
     5f4:	80 93 92 01 	sts	0x0192, r24
     5f8:	80 91 92 01 	lds	r24, 0x0192
     5fc:	84 33       	cpi	r24, 0x34	; 52
     5fe:	18 f0       	brcs	.+6      	; 0x606 <__vector_30+0x62>
     600:	10 92 92 01 	sts	0x0192, r1
     604:	3e de       	rcall	.-900    	; 0x282 <clearBuffer>
     606:	ff 91       	pop	r31
     608:	ef 91       	pop	r30
     60a:	cf 91       	pop	r28
     60c:	bf 91       	pop	r27
     60e:	af 91       	pop	r26
     610:	9f 91       	pop	r25
     612:	8f 91       	pop	r24
     614:	7f 91       	pop	r23
     616:	6f 91       	pop	r22
     618:	5f 91       	pop	r21
     61a:	4f 91       	pop	r20
     61c:	3f 91       	pop	r19
     61e:	2f 91       	pop	r18
     620:	0f 90       	pop	r0
     622:	0b be       	out	0x3b, r0	; 59
     624:	0f 90       	pop	r0
     626:	0f be       	out	0x3f, r0	; 63
     628:	0f 90       	pop	r0
     62a:	1f 90       	pop	r1
     62c:	18 95       	reti

0000062e <__vector_31>:
     62e:	1f 92       	push	r1
     630:	0f 92       	push	r0
     632:	0f b6       	in	r0, 0x3f	; 63
     634:	0f 92       	push	r0
     636:	11 24       	eor	r1, r1
     638:	0f 90       	pop	r0
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	0f 90       	pop	r0
     63e:	1f 90       	pop	r1
     640:	18 95       	reti

00000642 <__vector_32>:
     642:	1f 92       	push	r1
     644:	0f 92       	push	r0
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	0f 92       	push	r0
     64a:	11 24       	eor	r1, r1
     64c:	0f 90       	pop	r0
     64e:	0f be       	out	0x3f, r0	; 63
     650:	0f 90       	pop	r0
     652:	1f 90       	pop	r1
     654:	18 95       	reti

00000656 <__vector_33>:
     656:	1f 92       	push	r1
     658:	0f 92       	push	r0
     65a:	0f b6       	in	r0, 0x3f	; 63
     65c:	0f 92       	push	r0
     65e:	11 24       	eor	r1, r1
     660:	0f 90       	pop	r0
     662:	0f be       	out	0x3f, r0	; 63
     664:	0f 90       	pop	r0
     666:	1f 90       	pop	r1
     668:	18 95       	reti

0000066a <__vector_34>:
     66a:	1f 92       	push	r1
     66c:	0f 92       	push	r0
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	0f 92       	push	r0
     672:	11 24       	eor	r1, r1
     674:	0f 90       	pop	r0
     676:	0f be       	out	0x3f, r0	; 63
     678:	0f 90       	pop	r0
     67a:	1f 90       	pop	r1
     67c:	18 95       	reti

0000067e <LCD_sendChar>:
     67e:	98 2f       	mov	r25, r24
     680:	90 7f       	andi	r25, 0xF0	; 240
     682:	95 bb       	out	0x15, r25	; 21
     684:	a8 9a       	sbi	0x15, 0	; 21
     686:	aa 9a       	sbi	0x15, 2	; 21
     688:	e3 ef       	ldi	r30, 0xF3	; 243
     68a:	f1 e0       	ldi	r31, 0x01	; 1
     68c:	31 97       	sbiw	r30, 0x01	; 1
     68e:	f1 f7       	brne	.-4      	; 0x68c <LCD_sendChar+0xe>
     690:	00 c0       	rjmp	.+0      	; 0x692 <LCD_sendChar+0x14>
     692:	00 00       	nop
     694:	aa 98       	cbi	0x15, 2	; 21
     696:	a8 98       	cbi	0x15, 0	; 21
     698:	e3 ef       	ldi	r30, 0xF3	; 243
     69a:	f1 e0       	ldi	r31, 0x01	; 1
     69c:	31 97       	sbiw	r30, 0x01	; 1
     69e:	f1 f7       	brne	.-4      	; 0x69c <LCD_sendChar+0x1e>
     6a0:	00 c0       	rjmp	.+0      	; 0x6a2 <LCD_sendChar+0x24>
     6a2:	00 00       	nop
     6a4:	f0 e1       	ldi	r31, 0x10	; 16
     6a6:	8f 9f       	mul	r24, r31
     6a8:	c0 01       	movw	r24, r0
     6aa:	11 24       	eor	r1, r1
     6ac:	85 bb       	out	0x15, r24	; 21
     6ae:	a8 9a       	sbi	0x15, 0	; 21
     6b0:	aa 9a       	sbi	0x15, 2	; 21
     6b2:	83 ef       	ldi	r24, 0xF3	; 243
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	01 97       	sbiw	r24, 0x01	; 1
     6b8:	f1 f7       	brne	.-4      	; 0x6b6 <LCD_sendChar+0x38>
     6ba:	00 c0       	rjmp	.+0      	; 0x6bc <LCD_sendChar+0x3e>
     6bc:	00 00       	nop
     6be:	aa 98       	cbi	0x15, 2	; 21
     6c0:	a8 98       	cbi	0x15, 0	; 21
     6c2:	e3 ef       	ldi	r30, 0xF3	; 243
     6c4:	f1 e0       	ldi	r31, 0x01	; 1
     6c6:	31 97       	sbiw	r30, 0x01	; 1
     6c8:	f1 f7       	brne	.-4      	; 0x6c6 <LCD_sendChar+0x48>
     6ca:	00 c0       	rjmp	.+0      	; 0x6cc <LCD_sendChar+0x4e>
     6cc:	00 00       	nop
     6ce:	08 95       	ret

000006d0 <LCD_sendCommand>:
     6d0:	98 2f       	mov	r25, r24
     6d2:	90 7f       	andi	r25, 0xF0	; 240
     6d4:	95 bb       	out	0x15, r25	; 21
     6d6:	aa 9a       	sbi	0x15, 2	; 21
     6d8:	e3 ef       	ldi	r30, 0xF3	; 243
     6da:	f1 e0       	ldi	r31, 0x01	; 1
     6dc:	31 97       	sbiw	r30, 0x01	; 1
     6de:	f1 f7       	brne	.-4      	; 0x6dc <LCD_sendCommand+0xc>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <LCD_sendCommand+0x12>
     6e2:	00 00       	nop
     6e4:	aa 98       	cbi	0x15, 2	; 21
     6e6:	e3 ef       	ldi	r30, 0xF3	; 243
     6e8:	f1 e0       	ldi	r31, 0x01	; 1
     6ea:	31 97       	sbiw	r30, 0x01	; 1
     6ec:	f1 f7       	brne	.-4      	; 0x6ea <LCD_sendCommand+0x1a>
     6ee:	00 c0       	rjmp	.+0      	; 0x6f0 <LCD_sendCommand+0x20>
     6f0:	00 00       	nop
     6f2:	f0 e1       	ldi	r31, 0x10	; 16
     6f4:	8f 9f       	mul	r24, r31
     6f6:	c0 01       	movw	r24, r0
     6f8:	11 24       	eor	r1, r1
     6fa:	85 bb       	out	0x15, r24	; 21
     6fc:	aa 9a       	sbi	0x15, 2	; 21
     6fe:	83 ef       	ldi	r24, 0xF3	; 243
     700:	91 e0       	ldi	r25, 0x01	; 1
     702:	01 97       	sbiw	r24, 0x01	; 1
     704:	f1 f7       	brne	.-4      	; 0x702 <LCD_sendCommand+0x32>
     706:	00 c0       	rjmp	.+0      	; 0x708 <LCD_sendCommand+0x38>
     708:	00 00       	nop
     70a:	aa 98       	cbi	0x15, 2	; 21
     70c:	e3 ef       	ldi	r30, 0xF3	; 243
     70e:	f1 e0       	ldi	r31, 0x01	; 1
     710:	31 97       	sbiw	r30, 0x01	; 1
     712:	f1 f7       	brne	.-4      	; 0x710 <LCD_sendCommand+0x40>
     714:	00 c0       	rjmp	.+0      	; 0x716 <LCD_sendCommand+0x46>
     716:	00 00       	nop
     718:	08 95       	ret

0000071a <LCD_clr>:
     71a:	81 e0       	ldi	r24, 0x01	; 1
     71c:	d9 df       	rcall	.-78     	; 0x6d0 <LCD_sendCommand>
     71e:	84 e4       	ldi	r24, 0x44	; 68
     720:	91 e0       	ldi	r25, 0x01	; 1
     722:	01 97       	sbiw	r24, 0x01	; 1
     724:	f1 f7       	brne	.-4      	; 0x722 <LCD_clr+0x8>
     726:	00 c0       	rjmp	.+0      	; 0x728 <LCD_clr+0xe>
     728:	00 00       	nop
     72a:	08 95       	ret

0000072c <LCD_sendString>:
     72c:	0f 93       	push	r16
     72e:	1f 93       	push	r17
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	fc 01       	movw	r30, r24
     736:	01 90       	ld	r0, Z+
     738:	00 20       	and	r0, r0
     73a:	e9 f7       	brne	.-6      	; 0x736 <LCD_sendString+0xa>
     73c:	31 97       	sbiw	r30, 0x01	; 1
     73e:	1e 2f       	mov	r17, r30
     740:	18 1b       	sub	r17, r24
     742:	00 97       	sbiw	r24, 0x00	; 0
     744:	59 f0       	breq	.+22     	; 0x75c <LCD_sendString+0x30>
     746:	11 23       	and	r17, r17
     748:	49 f0       	breq	.+18     	; 0x75c <LCD_sendString+0x30>
     74a:	08 2f       	mov	r16, r24
     74c:	c0 2f       	mov	r28, r16
     74e:	d9 2f       	mov	r29, r25
     750:	89 91       	ld	r24, Y+
     752:	95 df       	rcall	.-214    	; 0x67e <LCD_sendChar>
     754:	8c 2f       	mov	r24, r28
     756:	80 1b       	sub	r24, r16
     758:	81 17       	cp	r24, r17
     75a:	d0 f3       	brcs	.-12     	; 0x750 <LCD_sendString+0x24>
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	1f 91       	pop	r17
     762:	0f 91       	pop	r16
     764:	08 95       	ret

00000766 <LCD_gotoXY>:
     766:	62 30       	cpi	r22, 0x02	; 2
     768:	31 f0       	breq	.+12     	; 0x776 <LCD_gotoXY+0x10>
     76a:	63 30       	cpi	r22, 0x03	; 3
     76c:	31 f0       	breq	.+12     	; 0x77a <LCD_gotoXY+0x14>
     76e:	61 30       	cpi	r22, 0x01	; 1
     770:	29 f4       	brne	.+10     	; 0x77c <LCD_gotoXY+0x16>
     772:	80 5c       	subi	r24, 0xC0	; 192
     774:	03 c0       	rjmp	.+6      	; 0x77c <LCD_gotoXY+0x16>
     776:	8c 5e       	subi	r24, 0xEC	; 236
     778:	01 c0       	rjmp	.+2      	; 0x77c <LCD_gotoXY+0x16>
     77a:	8c 5a       	subi	r24, 0xAC	; 172
     77c:	80 68       	ori	r24, 0x80	; 128
     77e:	a8 cf       	rjmp	.-176    	; 0x6d0 <LCD_sendCommand>
     780:	08 95       	ret

00000782 <LCD_defineChar>:
     782:	ef 92       	push	r14
     784:	ff 92       	push	r15
     786:	0f 93       	push	r16
     788:	1f 93       	push	r17
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	8c 01       	movw	r16, r24
     790:	66 0f       	add	r22, r22
     792:	66 0f       	add	r22, r22
     794:	66 0f       	add	r22, r22
     796:	60 64       	ori	r22, 0x40	; 64
     798:	e6 2e       	mov	r14, r22
     79a:	c0 e0       	ldi	r28, 0x00	; 0
     79c:	d0 e0       	ldi	r29, 0x00	; 0
     79e:	f8 01       	movw	r30, r16
     7a0:	ec 0f       	add	r30, r28
     7a2:	fd 1f       	adc	r31, r29
     7a4:	f4 90       	lpm	r15, Z
     7a6:	8c 2f       	mov	r24, r28
     7a8:	8e 0d       	add	r24, r14
     7aa:	92 df       	rcall	.-220    	; 0x6d0 <LCD_sendCommand>
     7ac:	8f 2d       	mov	r24, r15
     7ae:	67 df       	rcall	.-306    	; 0x67e <LCD_sendChar>
     7b0:	21 96       	adiw	r28, 0x01	; 1
     7b2:	c8 30       	cpi	r28, 0x08	; 8
     7b4:	d1 05       	cpc	r29, r1
     7b6:	99 f7       	brne	.-26     	; 0x79e <LCD_defineChar+0x1c>
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	1f 91       	pop	r17
     7be:	0f 91       	pop	r16
     7c0:	ff 90       	pop	r15
     7c2:	ef 90       	pop	r14
     7c4:	08 95       	ret

000007c6 <LCD_init>:
     7c6:	1f 93       	push	r17
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7cc:	8b e4       	ldi	r24, 0x4B	; 75
     7ce:	9d e1       	ldi	r25, 0x1D	; 29
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	f1 f7       	brne	.-4      	; 0x7d0 <LCD_init+0xa>
     7d4:	00 c0       	rjmp	.+0      	; 0x7d6 <LCD_init+0x10>
     7d6:	00 00       	nop
     7d8:	15 ba       	out	0x15, r1	; 21
     7da:	15 ba       	out	0x15, r1	; 21
     7dc:	84 b3       	in	r24, 0x14	; 20
     7de:	80 6f       	ori	r24, 0xF0	; 240
     7e0:	84 bb       	out	0x14, r24	; 20
     7e2:	84 b3       	in	r24, 0x14	; 20
     7e4:	87 60       	ori	r24, 0x07	; 7
     7e6:	84 bb       	out	0x14, r24	; 20
     7e8:	80 e3       	ldi	r24, 0x30	; 48
     7ea:	85 bb       	out	0x15, r24	; 21
     7ec:	aa 9a       	sbi	0x15, 2	; 21
     7ee:	83 ef       	ldi	r24, 0xF3	; 243
     7f0:	91 e0       	ldi	r25, 0x01	; 1
     7f2:	01 97       	sbiw	r24, 0x01	; 1
     7f4:	f1 f7       	brne	.-4      	; 0x7f2 <LCD_init+0x2c>
     7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <LCD_init+0x32>
     7f8:	00 00       	nop
     7fa:	aa 98       	cbi	0x15, 2	; 21
     7fc:	83 ef       	ldi	r24, 0xF3	; 243
     7fe:	91 e0       	ldi	r25, 0x01	; 1
     800:	01 97       	sbiw	r24, 0x01	; 1
     802:	f1 f7       	brne	.-4      	; 0x800 <LCD_init+0x3a>
     804:	00 c0       	rjmp	.+0      	; 0x806 <LCD_init+0x40>
     806:	00 00       	nop
     808:	80 e3       	ldi	r24, 0x30	; 48
     80a:	85 bb       	out	0x15, r24	; 21
     80c:	aa 9a       	sbi	0x15, 2	; 21
     80e:	83 ef       	ldi	r24, 0xF3	; 243
     810:	91 e0       	ldi	r25, 0x01	; 1
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <LCD_init+0x4c>
     816:	00 c0       	rjmp	.+0      	; 0x818 <LCD_init+0x52>
     818:	00 00       	nop
     81a:	aa 98       	cbi	0x15, 2	; 21
     81c:	83 ef       	ldi	r24, 0xF3	; 243
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	01 97       	sbiw	r24, 0x01	; 1
     822:	f1 f7       	brne	.-4      	; 0x820 <LCD_init+0x5a>
     824:	00 c0       	rjmp	.+0      	; 0x826 <LCD_init+0x60>
     826:	00 00       	nop
     828:	80 e2       	ldi	r24, 0x20	; 32
     82a:	85 bb       	out	0x15, r24	; 21
     82c:	aa 9a       	sbi	0x15, 2	; 21
     82e:	83 ef       	ldi	r24, 0xF3	; 243
     830:	91 e0       	ldi	r25, 0x01	; 1
     832:	01 97       	sbiw	r24, 0x01	; 1
     834:	f1 f7       	brne	.-4      	; 0x832 <LCD_init+0x6c>
     836:	00 c0       	rjmp	.+0      	; 0x838 <LCD_init+0x72>
     838:	00 00       	nop
     83a:	aa 98       	cbi	0x15, 2	; 21
     83c:	83 ef       	ldi	r24, 0xF3	; 243
     83e:	91 e0       	ldi	r25, 0x01	; 1
     840:	01 97       	sbiw	r24, 0x01	; 1
     842:	f1 f7       	brne	.-4      	; 0x840 <LCD_init+0x7a>
     844:	00 c0       	rjmp	.+0      	; 0x846 <LCD_init+0x80>
     846:	00 00       	nop
     848:	88 e2       	ldi	r24, 0x28	; 40
     84a:	42 df       	rcall	.-380    	; 0x6d0 <LCD_sendCommand>
     84c:	8c e0       	ldi	r24, 0x0C	; 12
     84e:	40 df       	rcall	.-384    	; 0x6d0 <LCD_sendCommand>
     850:	ce e0       	ldi	r28, 0x0E	; 14
     852:	d1 e0       	ldi	r29, 0x01	; 1
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	11 e0       	ldi	r17, 0x01	; 1
     858:	16 0f       	add	r17, r22
     85a:	ce 01       	movw	r24, r28
     85c:	92 df       	rcall	.-220    	; 0x782 <LCD_defineChar>
     85e:	28 96       	adiw	r28, 0x08	; 8
     860:	18 30       	cpi	r17, 0x08	; 8
     862:	11 f0       	breq	.+4      	; 0x868 <LCD_init+0xa2>
     864:	61 2f       	mov	r22, r17
     866:	f7 cf       	rjmp	.-18     	; 0x856 <LCD_init+0x90>
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	08 95       	ret

00000870 <USART1_config>:
     870:	90 93 98 00 	sts	0x0098, r25
     874:	80 93 99 00 	sts	0x0099, r24
     878:	40 93 9a 00 	sts	0x009A, r20
     87c:	60 93 9d 00 	sts	0x009D, r22
     880:	08 95       	ret

00000882 <USART1_sendChar>:
     882:	eb e9       	ldi	r30, 0x9B	; 155
     884:	f0 e0       	ldi	r31, 0x00	; 0
     886:	90 81       	ld	r25, Z
     888:	95 ff       	sbrs	r25, 5
     88a:	fd cf       	rjmp	.-6      	; 0x886 <USART1_sendChar+0x4>
     88c:	80 93 9c 00 	sts	0x009C, r24
     890:	08 95       	ret

00000892 <USART1_sendStr>:
     892:	ef 92       	push	r14
     894:	ff 92       	push	r15
     896:	0f 93       	push	r16
     898:	1f 93       	push	r17
     89a:	cf 93       	push	r28
     89c:	df 93       	push	r29
     89e:	fc 01       	movw	r30, r24
     8a0:	dc 01       	movw	r26, r24
     8a2:	0d 90       	ld	r0, X+
     8a4:	00 20       	and	r0, r0
     8a6:	e9 f7       	brne	.-6      	; 0x8a2 <USART1_sendStr+0x10>
     8a8:	11 97       	sbiw	r26, 0x01	; 1
     8aa:	7d 01       	movw	r14, r26
     8ac:	e8 1a       	sub	r14, r24
     8ae:	f9 0a       	sbc	r15, r25
     8b0:	1e 14       	cp	r1, r14
     8b2:	1f 04       	cpc	r1, r15
     8b4:	9c f4       	brge	.+38     	; 0x8dc <USART1_sendStr+0x4a>
     8b6:	80 81       	ld	r24, Z
     8b8:	88 23       	and	r24, r24
     8ba:	81 f0       	breq	.+32     	; 0x8dc <USART1_sendStr+0x4a>
     8bc:	8f 01       	movw	r16, r30
     8be:	0f 5f       	subi	r16, 0xFF	; 255
     8c0:	1f 4f       	sbci	r17, 0xFF	; 255
     8c2:	c0 e0       	ldi	r28, 0x00	; 0
     8c4:	d0 e0       	ldi	r29, 0x00	; 0
     8c6:	05 c0       	rjmp	.+10     	; 0x8d2 <USART1_sendStr+0x40>
     8c8:	f8 01       	movw	r30, r16
     8ca:	81 91       	ld	r24, Z+
     8cc:	8f 01       	movw	r16, r30
     8ce:	88 23       	and	r24, r24
     8d0:	29 f0       	breq	.+10     	; 0x8dc <USART1_sendStr+0x4a>
     8d2:	d7 df       	rcall	.-82     	; 0x882 <USART1_sendChar>
     8d4:	21 96       	adiw	r28, 0x01	; 1
     8d6:	ec 16       	cp	r14, r28
     8d8:	fd 06       	cpc	r15, r29
     8da:	b1 f7       	brne	.-20     	; 0x8c8 <USART1_sendStr+0x36>
     8dc:	df 91       	pop	r29
     8de:	cf 91       	pop	r28
     8e0:	1f 91       	pop	r17
     8e2:	0f 91       	pop	r16
     8e4:	ff 90       	pop	r15
     8e6:	ef 90       	pop	r14
     8e8:	08 95       	ret

000008ea <USART1_receiveChar>:
     8ea:	eb e9       	ldi	r30, 0x9B	; 155
     8ec:	f0 e0       	ldi	r31, 0x00	; 0
     8ee:	80 81       	ld	r24, Z
     8f0:	88 23       	and	r24, r24
     8f2:	ec f7       	brge	.-6      	; 0x8ee <USART1_receiveChar+0x4>
     8f4:	80 91 9c 00 	lds	r24, 0x009C
     8f8:	08 95       	ret

000008fa <USART0_sendChar>:
     8fa:	5d 9b       	sbis	0x0b, 5	; 11
     8fc:	fe cf       	rjmp	.-4      	; 0x8fa <USART0_sendChar>
     8fe:	8c b9       	out	0x0c, r24	; 12
     900:	08 95       	ret

00000902 <USART0_receiveChar>:
     902:	5f 9b       	sbis	0x0b, 7	; 11
     904:	fe cf       	rjmp	.-4      	; 0x902 <USART0_receiveChar>
     906:	8c b1       	in	r24, 0x0c	; 12
     908:	08 95       	ret

0000090a <schedulerInit>:
// read temteprature
double readTemperatures(void){
	return ds18b20_getTempAndWait();
	//return ds18b20_gettemp();
	
}
     90a:	83 b7       	in	r24, 0x33	; 51
     90c:	85 60       	ori	r24, 0x05	; 5
     90e:	83 bf       	out	0x33, r24	; 51
     910:	83 b7       	in	r24, 0x33	; 51
     912:	88 60       	ori	r24, 0x08	; 8
     914:	83 bf       	out	0x33, r24	; 51
     916:	8c e7       	ldi	r24, 0x7C	; 124
     918:	81 bf       	out	0x31, r24	; 49
     91a:	87 b7       	in	r24, 0x37	; 55
     91c:	82 60       	ori	r24, 0x02	; 2
     91e:	87 bf       	out	0x37, r24	; 55
     920:	08 95       	ret

00000922 <decodeButton>:
     922:	8f 70       	andi	r24, 0x0F	; 15
     924:	82 30       	cpi	r24, 0x02	; 2
     926:	89 f0       	breq	.+34     	; 0x94a <decodeButton+0x28>
     928:	18 f4       	brcc	.+6      	; 0x930 <decodeButton+0xe>
     92a:	81 30       	cpi	r24, 0x01	; 1
     92c:	31 f0       	breq	.+12     	; 0x93a <decodeButton+0x18>
     92e:	0b c0       	rjmp	.+22     	; 0x946 <decodeButton+0x24>
     930:	84 30       	cpi	r24, 0x04	; 4
     932:	29 f0       	breq	.+10     	; 0x93e <decodeButton+0x1c>
     934:	88 30       	cpi	r24, 0x08	; 8
     936:	29 f0       	breq	.+10     	; 0x942 <decodeButton+0x20>
     938:	06 c0       	rjmp	.+12     	; 0x946 <decodeButton+0x24>
     93a:	82 e0       	ldi	r24, 0x02	; 2
     93c:	08 95       	ret
     93e:	84 e0       	ldi	r24, 0x04	; 4
     940:	08 95       	ret
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	08 95       	ret
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	08 95       	ret
     94a:	83 e0       	ldi	r24, 0x03	; 3
     94c:	08 95       	ret

0000094e <debounceKey>:
     94e:	98 2f       	mov	r25, r24
     950:	80 91 59 01 	lds	r24, 0x0159
     954:	88 23       	and	r24, r24
     956:	69 f0       	breq	.+26     	; 0x972 <debounceKey+0x24>
     958:	20 91 58 01 	lds	r18, 0x0158
     95c:	92 13       	cpse	r25, r18
     95e:	1b c0       	rjmp	.+54     	; 0x996 <debounceKey+0x48>
     960:	83 30       	cpi	r24, 0x03	; 3
     962:	d8 f4       	brcc	.+54     	; 0x99a <debounceKey+0x4c>
     964:	8f 5f       	subi	r24, 0xFF	; 255
     966:	80 93 59 01 	sts	0x0159, r24
     96a:	83 30       	cpi	r24, 0x03	; 3
     96c:	c1 f0       	breq	.+48     	; 0x99e <debounceKey+0x50>
     96e:	81 11       	cpse	r24, r1
     970:	07 c0       	rjmp	.+14     	; 0x980 <debounceKey+0x32>
     972:	90 93 58 01 	sts	0x0158, r25
     976:	81 e0       	ldi	r24, 0x01	; 1
     978:	80 93 59 01 	sts	0x0159, r24
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	01 c0       	rjmp	.+2      	; 0x982 <debounceKey+0x34>
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	20 91 58 01 	lds	r18, 0x0158
     986:	92 17       	cp	r25, r18
     988:	61 f0       	breq	.+24     	; 0x9a2 <debounceKey+0x54>
     98a:	90 93 58 01 	sts	0x0158, r25
     98e:	91 e0       	ldi	r25, 0x01	; 1
     990:	90 93 59 01 	sts	0x0159, r25
     994:	08 95       	ret
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	f4 cf       	rjmp	.-24     	; 0x982 <debounceKey+0x34>
     99a:	80 e0       	ldi	r24, 0x00	; 0
     99c:	f2 cf       	rjmp	.-28     	; 0x982 <debounceKey+0x34>
     99e:	89 2f       	mov	r24, r25
     9a0:	f0 cf       	rjmp	.-32     	; 0x982 <debounceKey+0x34>
     9a2:	08 95       	ret

000009a4 <checkTempError>:
     9a4:	4f 92       	push	r4
     9a6:	5f 92       	push	r5
     9a8:	6f 92       	push	r6
     9aa:	7f 92       	push	r7
     9ac:	8f 92       	push	r8
     9ae:	9f 92       	push	r9
     9b0:	af 92       	push	r10
     9b2:	bf 92       	push	r11
     9b4:	cf 92       	push	r12
     9b6:	df 92       	push	r13
     9b8:	ef 92       	push	r14
     9ba:	ff 92       	push	r15
     9bc:	0f 93       	push	r16
     9be:	1f 93       	push	r17
     9c0:	4b 01       	movw	r8, r22
     9c2:	5c 01       	movw	r10, r24
     9c4:	29 01       	movw	r4, r18
     9c6:	3a 01       	movw	r6, r20
     9c8:	c8 01       	movw	r24, r16
     9ca:	b7 01       	movw	r22, r14
     9cc:	20 e0       	ldi	r18, 0x00	; 0
     9ce:	30 e0       	ldi	r19, 0x00	; 0
     9d0:	40 e0       	ldi	r20, 0x00	; 0
     9d2:	5f e3       	ldi	r21, 0x3F	; 63
     9d4:	29 d6       	rcall	.+3154   	; 0x1628 <__mulsf3>
     9d6:	6b 01       	movw	r12, r22
     9d8:	7c 01       	movw	r14, r24
     9da:	a3 01       	movw	r20, r6
     9dc:	92 01       	movw	r18, r4
     9de:	62 d3       	rcall	.+1732   	; 0x10a4 <__addsf3>
     9e0:	a5 01       	movw	r20, r10
     9e2:	94 01       	movw	r18, r8
     9e4:	c3 d3       	rcall	.+1926   	; 0x116c <__cmpsf2>
     9e6:	88 23       	and	r24, r24
     9e8:	24 f4       	brge	.+8      	; 0x9f2 <checkTempError+0x4e>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	80 93 56 01 	sts	0x0156, r24
     9f0:	12 c0       	rjmp	.+36     	; 0xa16 <checkTempError+0x72>
     9f2:	a7 01       	movw	r20, r14
     9f4:	96 01       	movw	r18, r12
     9f6:	c3 01       	movw	r24, r6
     9f8:	b2 01       	movw	r22, r4
     9fa:	53 d3       	rcall	.+1702   	; 0x10a2 <__subsf3>
     9fc:	9b 01       	movw	r18, r22
     9fe:	ac 01       	movw	r20, r24
     a00:	c5 01       	movw	r24, r10
     a02:	b4 01       	movw	r22, r8
     a04:	b3 d3       	rcall	.+1894   	; 0x116c <__cmpsf2>
     a06:	88 23       	and	r24, r24
     a08:	24 f4       	brge	.+8      	; 0xa12 <checkTempError+0x6e>
     a0a:	10 92 56 01 	sts	0x0156, r1
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	02 c0       	rjmp	.+4      	; 0xa16 <checkTempError+0x72>
     a12:	80 91 56 01 	lds	r24, 0x0156
     a16:	1f 91       	pop	r17
     a18:	0f 91       	pop	r16
     a1a:	ff 90       	pop	r15
     a1c:	ef 90       	pop	r14
     a1e:	df 90       	pop	r13
     a20:	cf 90       	pop	r12
     a22:	bf 90       	pop	r11
     a24:	af 90       	pop	r10
     a26:	9f 90       	pop	r9
     a28:	8f 90       	pop	r8
     a2a:	7f 90       	pop	r7
     a2c:	6f 90       	pop	r6
     a2e:	5f 90       	pop	r5
     a30:	4f 90       	pop	r4
     a32:	08 95       	ret

00000a34 <setTempSetPoint>:
     a34:	cf 92       	push	r12
     a36:	df 92       	push	r13
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	88 23       	and	r24, r24
     a3e:	b1 f0       	breq	.+44     	; 0xa6c <setTempSetPoint+0x38>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	40 e8       	ldi	r20, 0x80	; 128
     a46:	5f e3       	ldi	r21, 0x3F	; 63
     a48:	60 91 04 01 	lds	r22, 0x0104
     a4c:	70 91 05 01 	lds	r23, 0x0105
     a50:	80 91 06 01 	lds	r24, 0x0106
     a54:	90 91 07 01 	lds	r25, 0x0107
     a58:	25 d3       	rcall	.+1610   	; 0x10a4 <__addsf3>
     a5a:	60 93 04 01 	sts	0x0104, r22
     a5e:	70 93 05 01 	sts	0x0105, r23
     a62:	80 93 06 01 	sts	0x0106, r24
     a66:	90 93 07 01 	sts	0x0107, r25
     a6a:	15 c0       	rjmp	.+42     	; 0xa96 <setTempSetPoint+0x62>
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	40 e8       	ldi	r20, 0x80	; 128
     a72:	5f e3       	ldi	r21, 0x3F	; 63
     a74:	60 91 04 01 	lds	r22, 0x0104
     a78:	70 91 05 01 	lds	r23, 0x0105
     a7c:	80 91 06 01 	lds	r24, 0x0106
     a80:	90 91 07 01 	lds	r25, 0x0107
     a84:	0e d3       	rcall	.+1564   	; 0x10a2 <__subsf3>
     a86:	60 93 04 01 	sts	0x0104, r22
     a8a:	70 93 05 01 	sts	0x0105, r23
     a8e:	80 93 06 01 	sts	0x0106, r24
     a92:	90 93 07 01 	sts	0x0107, r25
     a96:	c0 90 04 01 	lds	r12, 0x0104
     a9a:	d0 90 05 01 	lds	r13, 0x0105
     a9e:	e0 90 06 01 	lds	r14, 0x0106
     aa2:	f0 90 07 01 	lds	r15, 0x0107
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	48 e4       	ldi	r20, 0x48	; 72
     aac:	53 e4       	ldi	r21, 0x43	; 67
     aae:	c7 01       	movw	r24, r14
     ab0:	b6 01       	movw	r22, r12
     ab2:	01 d5       	rcall	.+2562   	; 0x14b6 <__gesf2>
     ab4:	18 16       	cp	r1, r24
     ab6:	6c f4       	brge	.+26     	; 0xad2 <setTempSetPoint+0x9e>
     ab8:	80 e0       	ldi	r24, 0x00	; 0
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	a8 e4       	ldi	r26, 0x48	; 72
     abe:	b3 e4       	ldi	r27, 0x43	; 67
     ac0:	80 93 04 01 	sts	0x0104, r24
     ac4:	90 93 05 01 	sts	0x0105, r25
     ac8:	a0 93 06 01 	sts	0x0106, r26
     acc:	b0 93 07 01 	sts	0x0107, r27
     ad0:	15 c0       	rjmp	.+42     	; 0xafc <setTempSetPoint+0xc8>
     ad2:	20 e0       	ldi	r18, 0x00	; 0
     ad4:	30 e0       	ldi	r19, 0x00	; 0
     ad6:	48 e4       	ldi	r20, 0x48	; 72
     ad8:	53 ec       	ldi	r21, 0xC3	; 195
     ada:	c7 01       	movw	r24, r14
     adc:	b6 01       	movw	r22, r12
     ade:	46 d3       	rcall	.+1676   	; 0x116c <__cmpsf2>
     ae0:	88 23       	and	r24, r24
     ae2:	64 f4       	brge	.+24     	; 0xafc <setTempSetPoint+0xc8>
     ae4:	80 e0       	ldi	r24, 0x00	; 0
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	a8 e4       	ldi	r26, 0x48	; 72
     aea:	b3 ec       	ldi	r27, 0xC3	; 195
     aec:	80 93 04 01 	sts	0x0104, r24
     af0:	90 93 05 01 	sts	0x0105, r25
     af4:	a0 93 06 01 	sts	0x0106, r26
     af8:	b0 93 07 01 	sts	0x0107, r27
     afc:	ff 90       	pop	r15
     afe:	ef 90       	pop	r14
     b00:	df 90       	pop	r13
     b02:	cf 90       	pop	r12
     b04:	08 95       	ret

00000b06 <setHistSetPoint>:
     b06:	88 23       	and	r24, r24
     b08:	b1 f0       	breq	.+44     	; 0xb36 <setHistSetPoint+0x30>
     b0a:	20 e0       	ldi	r18, 0x00	; 0
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	40 e8       	ldi	r20, 0x80	; 128
     b10:	5f e3       	ldi	r21, 0x3F	; 63
     b12:	60 91 00 01 	lds	r22, 0x0100
     b16:	70 91 01 01 	lds	r23, 0x0101
     b1a:	80 91 02 01 	lds	r24, 0x0102
     b1e:	90 91 03 01 	lds	r25, 0x0103
     b22:	c0 d2       	rcall	.+1408   	; 0x10a4 <__addsf3>
     b24:	60 93 00 01 	sts	0x0100, r22
     b28:	70 93 01 01 	sts	0x0101, r23
     b2c:	80 93 02 01 	sts	0x0102, r24
     b30:	90 93 03 01 	sts	0x0103, r25
     b34:	15 c0       	rjmp	.+42     	; 0xb60 <setHistSetPoint+0x5a>
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	30 e0       	ldi	r19, 0x00	; 0
     b3a:	40 e8       	ldi	r20, 0x80	; 128
     b3c:	5f e3       	ldi	r21, 0x3F	; 63
     b3e:	60 91 00 01 	lds	r22, 0x0100
     b42:	70 91 01 01 	lds	r23, 0x0101
     b46:	80 91 02 01 	lds	r24, 0x0102
     b4a:	90 91 03 01 	lds	r25, 0x0103
     b4e:	a9 d2       	rcall	.+1362   	; 0x10a2 <__subsf3>
     b50:	60 93 00 01 	sts	0x0100, r22
     b54:	70 93 01 01 	sts	0x0101, r23
     b58:	80 93 02 01 	sts	0x0102, r24
     b5c:	90 93 03 01 	sts	0x0103, r25
     b60:	20 e0       	ldi	r18, 0x00	; 0
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	40 e0       	ldi	r20, 0x00	; 0
     b66:	5f e3       	ldi	r21, 0x3F	; 63
     b68:	60 91 00 01 	lds	r22, 0x0100
     b6c:	70 91 01 01 	lds	r23, 0x0101
     b70:	80 91 02 01 	lds	r24, 0x0102
     b74:	90 91 03 01 	lds	r25, 0x0103
     b78:	f9 d2       	rcall	.+1522   	; 0x116c <__cmpsf2>
     b7a:	88 23       	and	r24, r24
     b7c:	64 f4       	brge	.+24     	; 0xb96 <setHistSetPoint+0x90>
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	a0 e8       	ldi	r26, 0x80	; 128
     b84:	bf e3       	ldi	r27, 0x3F	; 63
     b86:	80 93 00 01 	sts	0x0100, r24
     b8a:	90 93 01 01 	sts	0x0101, r25
     b8e:	a0 93 02 01 	sts	0x0102, r26
     b92:	b0 93 03 01 	sts	0x0103, r27
     b96:	08 95       	ret

00000b98 <stateMachine>:
     b98:	cf 93       	push	r28
     b9a:	c8 2f       	mov	r28, r24
     b9c:	90 91 57 01 	lds	r25, 0x0157
     ba0:	91 30       	cpi	r25, 0x01	; 1
     ba2:	71 f0       	breq	.+28     	; 0xbc0 <stateMachine+0x28>
     ba4:	28 f0       	brcs	.+10     	; 0xbb0 <stateMachine+0x18>
     ba6:	92 30       	cpi	r25, 0x02	; 2
     ba8:	11 f1       	breq	.+68     	; 0xbee <stateMachine+0x56>
     baa:	93 30       	cpi	r25, 0x03	; 3
     bac:	b1 f1       	breq	.+108    	; 0xc1a <stateMachine+0x82>
     bae:	3d c0       	rjmp	.+122    	; 0xc2a <stateMachine+0x92>
     bb0:	c3 9a       	sbi	0x18, 3	; 24
     bb2:	82 30       	cpi	r24, 0x02	; 2
     bb4:	09 f0       	breq	.+2      	; 0xbb8 <stateMachine+0x20>
     bb6:	3b c0       	rjmp	.+118    	; 0xc2e <stateMachine+0x96>
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	80 93 57 01 	sts	0x0157, r24
     bbe:	37 c0       	rjmp	.+110    	; 0xc2e <stateMachine+0x96>
     bc0:	c3 98       	cbi	0x18, 3	; 24
     bc2:	83 30       	cpi	r24, 0x03	; 3
     bc4:	19 f4       	brne	.+6      	; 0xbcc <stateMachine+0x34>
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	35 df       	rcall	.-406    	; 0xa34 <setTempSetPoint>
     bca:	0b c0       	rjmp	.+22     	; 0xbe2 <stateMachine+0x4a>
     bcc:	84 30       	cpi	r24, 0x04	; 4
     bce:	19 f4       	brne	.+6      	; 0xbd6 <stateMachine+0x3e>
     bd0:	80 e0       	ldi	r24, 0x00	; 0
     bd2:	30 df       	rcall	.-416    	; 0xa34 <setTempSetPoint>
     bd4:	2c c0       	rjmp	.+88     	; 0xc2e <stateMachine+0x96>
     bd6:	82 30       	cpi	r24, 0x02	; 2
     bd8:	21 f4       	brne	.+8      	; 0xbe2 <stateMachine+0x4a>
     bda:	82 e0       	ldi	r24, 0x02	; 2
     bdc:	80 93 57 01 	sts	0x0157, r24
     be0:	26 c0       	rjmp	.+76     	; 0xc2e <stateMachine+0x96>
     be2:	c1 30       	cpi	r28, 0x01	; 1
     be4:	21 f5       	brne	.+72     	; 0xc2e <stateMachine+0x96>
     be6:	83 e0       	ldi	r24, 0x03	; 3
     be8:	80 93 57 01 	sts	0x0157, r24
     bec:	20 c0       	rjmp	.+64     	; 0xc2e <stateMachine+0x96>
     bee:	83 30       	cpi	r24, 0x03	; 3
     bf0:	19 f4       	brne	.+6      	; 0xbf8 <stateMachine+0x60>
     bf2:	81 e0       	ldi	r24, 0x01	; 1
     bf4:	88 df       	rcall	.-240    	; 0xb06 <setHistSetPoint>
     bf6:	0b c0       	rjmp	.+22     	; 0xc0e <stateMachine+0x76>
     bf8:	84 30       	cpi	r24, 0x04	; 4
     bfa:	19 f4       	brne	.+6      	; 0xc02 <stateMachine+0x6a>
     bfc:	80 e0       	ldi	r24, 0x00	; 0
     bfe:	83 df       	rcall	.-250    	; 0xb06 <setHistSetPoint>
     c00:	16 c0       	rjmp	.+44     	; 0xc2e <stateMachine+0x96>
     c02:	82 30       	cpi	r24, 0x02	; 2
     c04:	21 f4       	brne	.+8      	; 0xc0e <stateMachine+0x76>
     c06:	83 e0       	ldi	r24, 0x03	; 3
     c08:	80 93 57 01 	sts	0x0157, r24
     c0c:	10 c0       	rjmp	.+32     	; 0xc2e <stateMachine+0x96>
     c0e:	c1 30       	cpi	r28, 0x01	; 1
     c10:	71 f4       	brne	.+28     	; 0xc2e <stateMachine+0x96>
     c12:	83 e0       	ldi	r24, 0x03	; 3
     c14:	80 93 57 01 	sts	0x0157, r24
     c18:	0a c0       	rjmp	.+20     	; 0xc2e <stateMachine+0x96>
     c1a:	80 91 5b 01 	lds	r24, 0x015B
     c1e:	8f 5f       	subi	r24, 0xFF	; 255
     c20:	80 93 5b 01 	sts	0x015B, r24
     c24:	10 92 57 01 	sts	0x0157, r1
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <stateMachine+0x96>
     c2a:	10 92 57 01 	sts	0x0157, r1
     c2e:	cf 91       	pop	r28
     c30:	08 95       	ret

00000c32 <readButtons>:
/************************************************************************/
/* @read the buttons and complement and clean                                                                     */
/************************************************************************/
uint8_t readButtons(void){

	return (~PINA) &0x0F; // read the low nibble
     c32:	89 b3       	in	r24, 0x19	; 25
     c34:	80 95       	com	r24
}
     c36:	8f 70       	andi	r24, 0x0F	; 15
     c38:	08 95       	ret

00000c3a <setOutputRelay>:
#define RELAY_OUT_OFF bit_clear(RELAY_PORT,RELAY_BIT)
/************************************************************************/
/* @set the output relay                                                                     */
/************************************************************************/
void setOutputRelay(uint8_t val){
	if(val >0){
     c3a:	88 23       	and	r24, r24
     c3c:	19 f0       	breq	.+6      	; 0xc44 <setOutputRelay+0xa>
		RELAY_OUT_ON;
     c3e:	c1 9a       	sbi	0x18, 1	; 24
		LED_OUT_ON;
     c40:	c4 98       	cbi	0x18, 4	; 24
     c42:	08 95       	ret
		
	}else{
		RELAY_OUT_OFF;
     c44:	c1 98       	cbi	0x18, 1	; 24
		LED_OUT_OFF;
     c46:	c4 9a       	sbi	0x18, 4	; 24
     c48:	08 95       	ret

00000c4a <initGPIO>:

/************************************************************************/
/* @init the gpio                                                                     */
/************************************************************************/
void initGPIO(void){
	DDRA = 0x00;
     c4a:	1a ba       	out	0x1a, r1	; 26
	PORTA = 0x0F; // enable pulls ups
     c4c:	8f e0       	ldi	r24, 0x0F	; 15
     c4e:	8b bb       	out	0x1b, r24	; 27
	
	DDRB = 0b00011110;
     c50:	8e e1       	ldi	r24, 0x1E	; 30
     c52:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x01;
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	88 bb       	out	0x18, r24	; 24
     c58:	08 95       	ret

00000c5a <paramLoadDefaultParameters>:

/************************************************************************/
/* @load hardcodded default values                                                                     */
/************************************************************************/
void paramLoadDefaultParameters(void){
	currentTempSetPoint = SETPOINT_TEMP_DEFAULT;
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	a0 ea       	ldi	r26, 0xA0	; 160
     c60:	b1 e4       	ldi	r27, 0x41	; 65
     c62:	80 93 04 01 	sts	0x0104, r24
     c66:	90 93 05 01 	sts	0x0105, r25
     c6a:	a0 93 06 01 	sts	0x0106, r26
     c6e:	b0 93 07 01 	sts	0x0107, r27
	currentHistSetPoint = SETPOINT_HISTERESYS_DEFAULT;
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	a0 e4       	ldi	r26, 0x40	; 64
     c78:	b0 e4       	ldi	r27, 0x40	; 64
     c7a:	80 93 00 01 	sts	0x0100, r24
     c7e:	90 93 01 01 	sts	0x0101, r25
     c82:	a0 93 02 01 	sts	0x0102, r26
     c86:	b0 93 03 01 	sts	0x0103, r27
     c8a:	08 95       	ret

00000c8c <eepromSetDefaultParameters>:

/************************************************************************/
/* @ set initial values to eeprom  if nothin there yet                                                                   */
/************************************************************************/
void eepromSetDefaultParameters(void){
	eestruct_var.initEeprom=1; // emprom init
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	80 93 9d 01 	sts	0x019D, r24
	
	eestruct_var.setPointTemp = SETPOINT_TEMP_DEFAULT;
     c92:	80 e0       	ldi	r24, 0x00	; 0
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	a0 ea       	ldi	r26, 0xA0	; 160
     c98:	b1 e4       	ldi	r27, 0x41	; 65
     c9a:	80 93 9e 01 	sts	0x019E, r24
     c9e:	90 93 9f 01 	sts	0x019F, r25
     ca2:	a0 93 a0 01 	sts	0x01A0, r26
     ca6:	b0 93 a1 01 	sts	0x01A1, r27
	eestruct_var.setPointHist = SETPOINT_HISTERESYS_DEFAULT;
     caa:	80 e0       	ldi	r24, 0x00	; 0
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	a0 e4       	ldi	r26, 0x40	; 64
     cb0:	b0 e4       	ldi	r27, 0x40	; 64
     cb2:	80 93 a2 01 	sts	0x01A2, r24
     cb6:	90 93 a3 01 	sts	0x01A3, r25
     cba:	a0 93 a4 01 	sts	0x01A4, r26
     cbe:	b0 93 a5 01 	sts	0x01A5, r27
	
	eeprom_write_block((const void*)&eestruct_var,(void*)&eestruct_eemem,sizeof(eestruct_t));
     cc2:	49 e0       	ldi	r20, 0x09	; 9
     cc4:	50 e0       	ldi	r21, 0x00	; 0
     cc6:	60 e0       	ldi	r22, 0x00	; 0
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	8d e9       	ldi	r24, 0x9D	; 157
     ccc:	91 e0       	ldi	r25, 0x01	; 1
     cce:	a9 c7       	rjmp	.+3922   	; 0x1c22 <__eewr_block_m128>
     cd0:	08 95       	ret

00000cd2 <paramLoadFromEeprom>:
/* @ load eeprom saved values                                                                     */
/************************************************************************/
void paramLoadFromEeprom(void){
	//uint8_t temp=0;
	// read from emprom
	eeprom_read_block((void*)&eestruct_var, (const void*)&eestruct_eemem,sizeof(eestruct_t));
     cd2:	49 e0       	ldi	r20, 0x09	; 9
     cd4:	50 e0       	ldi	r21, 0x00	; 0
     cd6:	60 e0       	ldi	r22, 0x00	; 0
     cd8:	70 e0       	ldi	r23, 0x00	; 0
     cda:	8d e9       	ldi	r24, 0x9D	; 157
     cdc:	91 e0       	ldi	r25, 0x01	; 1
     cde:	91 d7       	rcall	.+3874   	; 0x1c02 <__eerd_block_m128>
	
	// test the fits field to check if it was written else use default and load
	if((eestruct_var.initEeprom &0xFF) ==0xFF){
     ce0:	80 91 9d 01 	lds	r24, 0x019D
     ce4:	8f 3f       	cpi	r24, 0xFF	; 255
     ce6:	19 f4       	brne	.+6      	; 0xcee <paramLoadFromEeprom+0x1c>
		eepromSetDefaultParameters();
     ce8:	d1 df       	rcall	.-94     	; 0xc8c <eepromSetDefaultParameters>
		paramLoadDefaultParameters();
     cea:	b7 cf       	rjmp	.-146    	; 0xc5a <paramLoadDefaultParameters>
     cec:	08 95       	ret
		
	}
	else{
		// write to the global variables
		currentTempSetPoint = eestruct_var.setPointTemp;
     cee:	80 91 9e 01 	lds	r24, 0x019E
     cf2:	90 91 9f 01 	lds	r25, 0x019F
     cf6:	a0 91 a0 01 	lds	r26, 0x01A0
     cfa:	b0 91 a1 01 	lds	r27, 0x01A1
     cfe:	80 93 04 01 	sts	0x0104, r24
     d02:	90 93 05 01 	sts	0x0105, r25
     d06:	a0 93 06 01 	sts	0x0106, r26
     d0a:	b0 93 07 01 	sts	0x0107, r27
		currentHistSetPoint = eestruct_var.setPointHist;
     d0e:	80 91 a2 01 	lds	r24, 0x01A2
     d12:	90 91 a3 01 	lds	r25, 0x01A3
     d16:	a0 91 a4 01 	lds	r26, 0x01A4
     d1a:	b0 91 a5 01 	lds	r27, 0x01A5
     d1e:	80 93 00 01 	sts	0x0100, r24
     d22:	90 93 01 01 	sts	0x0101, r25
     d26:	a0 93 02 01 	sts	0x0102, r26
     d2a:	b0 93 03 01 	sts	0x0103, r27
     d2e:	08 95       	ret

00000d30 <paramSavetoEeprom>:
/************************************************************************/
/* @save current values to eerprom                                                                     */
/************************************************************************/
void paramSavetoEeprom(void){
	// save paramenetrs on the run
	eestruct_var.initEeprom=1; // emprom init
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	80 93 9d 01 	sts	0x019D, r24
	eestruct_var.setPointTemp = currentTempSetPoint;
     d36:	80 91 04 01 	lds	r24, 0x0104
     d3a:	90 91 05 01 	lds	r25, 0x0105
     d3e:	a0 91 06 01 	lds	r26, 0x0106
     d42:	b0 91 07 01 	lds	r27, 0x0107
     d46:	80 93 9e 01 	sts	0x019E, r24
     d4a:	90 93 9f 01 	sts	0x019F, r25
     d4e:	a0 93 a0 01 	sts	0x01A0, r26
     d52:	b0 93 a1 01 	sts	0x01A1, r27
	eestruct_var.setPointHist = currentHistSetPoint;
     d56:	80 91 00 01 	lds	r24, 0x0100
     d5a:	90 91 01 01 	lds	r25, 0x0101
     d5e:	a0 91 02 01 	lds	r26, 0x0102
     d62:	b0 91 03 01 	lds	r27, 0x0103
     d66:	80 93 a2 01 	sts	0x01A2, r24
     d6a:	90 93 a3 01 	sts	0x01A3, r25
     d6e:	a0 93 a4 01 	sts	0x01A4, r26
     d72:	b0 93 a5 01 	sts	0x01A5, r27
	
	// save block
	eeprom_write_block((const void*)&eestruct_var,(void*)&eestruct_eemem,sizeof(eestruct_t));
     d76:	49 e0       	ldi	r20, 0x09	; 9
     d78:	50 e0       	ldi	r21, 0x00	; 0
     d7a:	60 e0       	ldi	r22, 0x00	; 0
     d7c:	70 e0       	ldi	r23, 0x00	; 0
     d7e:	8d e9       	ldi	r24, 0x9D	; 157
     d80:	91 e0       	ldi	r25, 0x01	; 1
     d82:	4f c7       	rjmp	.+3742   	; 0x1c22 <__eewr_block_m128>
     d84:	08 95       	ret

00000d86 <showLcdSplash>:
/************************************************************************/
/* @show initial splash                                                                     */
/************************************************************************/
void showLcdSplash(void){
	
	LCD_gotoXY(2,0);
     d86:	60 e0       	ldi	r22, 0x00	; 0
     d88:	82 e0       	ldi	r24, 0x02	; 2
     d8a:	ed dc       	rcall	.-1574   	; 0x766 <LCD_gotoXY>
	LCD_sendString("Wine Control");
     d8c:	82 e1       	ldi	r24, 0x12	; 18
     d8e:	91 e0       	ldi	r25, 0x01	; 1
     d90:	cd dc       	rcall	.-1638   	; 0x72c <LCD_sendString>
	LCD_gotoXY(1,1);
     d92:	61 e0       	ldi	r22, 0x01	; 1
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	e7 dc       	rcall	.-1586   	; 0x766 <LCD_gotoXY>
	LCD_sendString("Serafim Cunha");
     d98:	8f e1       	ldi	r24, 0x1F	; 31
     d9a:	91 e0       	ldi	r25, 0x01	; 1
     d9c:	c7 dc       	rcall	.-1650   	; 0x72c <LCD_sendString>
     d9e:	2f ef       	ldi	r18, 0xFF	; 255
     da0:	87 ea       	ldi	r24, 0xA7	; 167
     da2:	91 e6       	ldi	r25, 0x61	; 97
     da4:	21 50       	subi	r18, 0x01	; 1
     da6:	80 40       	sbci	r24, 0x00	; 0
     da8:	90 40       	sbci	r25, 0x00	; 0
     daa:	e1 f7       	brne	.-8      	; 0xda4 <showLcdSplash+0x1e>
     dac:	00 c0       	rjmp	.+0      	; 0xdae <showLcdSplash+0x28>
     dae:	00 00       	nop
	_delay_ms(2000);
	LCD_clr();
     db0:	b4 cc       	rjmp	.-1688   	; 0x71a <LCD_clr>
     db2:	08 95       	ret

00000db4 <setLcdInitialFields>:
/************************************************************************/
/* @set lcd initail fields                                                                     */
/************************************************************************/
void setLcdInitialFields(void){

	LCD_clr();
     db4:	b2 dc       	rcall	.-1692   	; 0x71a <LCD_clr>
	LCD_gotoXY(0,0);
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	d5 dc       	rcall	.-1622   	; 0x766 <LCD_gotoXY>
	LCD_sendString("T:");
     dbc:	8e e2       	ldi	r24, 0x2E	; 46
     dbe:	91 e0       	ldi	r25, 0x01	; 1
     dc0:	b5 dc       	rcall	.-1686   	; 0x72c <LCD_sendString>
	LCD_gotoXY(9,0);
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	89 e0       	ldi	r24, 0x09	; 9
     dc6:	cf dc       	rcall	.-1634   	; 0x766 <LCD_gotoXY>
	LCD_sendString("ST:");
     dc8:	8d e2       	ldi	r24, 0x2D	; 45
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	af dc       	rcall	.-1698   	; 0x72c <LCD_sendString>
	
	// sendond filds	
	LCD_gotoXY(0,1);
     dce:	61 e0       	ldi	r22, 0x01	; 1
     dd0:	80 e0       	ldi	r24, 0x00	; 0
     dd2:	c9 dc       	rcall	.-1646   	; 0x766 <LCD_gotoXY>
	LCD_sendString("S:");
     dd4:	81 e3       	ldi	r24, 0x31	; 49
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	a9 dc       	rcall	.-1710   	; 0x72c <LCD_sendString>
	LCD_gotoXY(9,1);
     dda:	61 e0       	ldi	r22, 0x01	; 1
     ddc:	89 e0       	ldi	r24, 0x09	; 9
     dde:	c3 dc       	rcall	.-1658   	; 0x766 <LCD_gotoXY>
	LCD_sendString("D:");	
     de0:	84 e3       	ldi	r24, 0x34	; 52
     de2:	91 e0       	ldi	r25, 0x01	; 1
     de4:	a3 cc       	rjmp	.-1722   	; 0x72c <LCD_sendString>
     de6:	08 95       	ret

00000de8 <showLcdSavedMessage>:
/************************************************************************/
/* @show saved messsage on lcd                                                                      */
/************************************************************************/
void showLcdSavedMessage(void){
	
	LCD_clr();
     de8:	98 dc       	rcall	.-1744   	; 0x71a <LCD_clr>
	LCD_gotoXY(7,0);
     dea:	60 e0       	ldi	r22, 0x00	; 0
     dec:	87 e0       	ldi	r24, 0x07	; 7
     dee:	bb dc       	rcall	.-1674   	; 0x766 <LCD_gotoXY>
	LCD_sendString(" SAVED");
     df0:	87 e3       	ldi	r24, 0x37	; 55
     df2:	91 e0       	ldi	r25, 0x01	; 1
     df4:	9b dc       	rcall	.-1738   	; 0x72c <LCD_sendString>
     df6:	2f ef       	ldi	r18, 0xFF	; 255
     df8:	89 e6       	ldi	r24, 0x69	; 105
     dfa:	98 e1       	ldi	r25, 0x18	; 24
     dfc:	21 50       	subi	r18, 0x01	; 1
     dfe:	80 40       	sbci	r24, 0x00	; 0
     e00:	90 40       	sbci	r25, 0x00	; 0
     e02:	e1 f7       	brne	.-8      	; 0xdfc <showLcdSavedMessage+0x14>
     e04:	00 c0       	rjmp	.+0      	; 0xe06 <showLcdSavedMessage+0x1e>
     e06:	00 00       	nop
     e08:	08 95       	ret

00000e0a <splitDouble>:
}

/************************************************************************/
/* @ convert double two parts to print                                                                     */
/************************************************************************/
void splitDouble(double *d, int precision, int *intPart, int *decPart ){
     e0a:	8f 92       	push	r8
     e0c:	9f 92       	push	r9
     e0e:	af 92       	push	r10
     e10:	bf 92       	push	r11
     e12:	cf 92       	push	r12
     e14:	df 92       	push	r13
     e16:	ef 92       	push	r14
     e18:	ff 92       	push	r15
     e1a:	0f 93       	push	r16
     e1c:	1f 93       	push	r17
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	ec 01       	movw	r28, r24
     e24:	7b 01       	movw	r14, r22
     e26:	6a 01       	movw	r12, r20
     e28:	89 01       	movw	r16, r18
	*intPart = (int)*d;
     e2a:	68 81       	ld	r22, Y
     e2c:	79 81       	ldd	r23, Y+1	; 0x01
     e2e:	8a 81       	ldd	r24, Y+2	; 0x02
     e30:	9b 81       	ldd	r25, Y+3	; 0x03
     e32:	39 d2       	rcall	.+1138   	; 0x12a6 <__fixsfsi>
     e34:	4b 01       	movw	r8, r22
     e36:	5c 01       	movw	r10, r24
     e38:	f6 01       	movw	r30, r12
     e3a:	71 83       	std	Z+1, r23	; 0x01
     e3c:	60 83       	st	Z, r22
	*decPart = (int)( (*d - *intPart) *pow(10, precision) + 0.5);
     e3e:	b7 01       	movw	r22, r14
     e40:	88 27       	eor	r24, r24
     e42:	77 fd       	sbrc	r23, 7
     e44:	80 95       	com	r24
     e46:	98 2f       	mov	r25, r24
     e48:	61 d2       	rcall	.+1218   	; 0x130c <__floatsisf>
     e4a:	9b 01       	movw	r18, r22
     e4c:	ac 01       	movw	r20, r24
     e4e:	60 e0       	ldi	r22, 0x00	; 0
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	80 e2       	ldi	r24, 0x20	; 32
     e54:	91 e4       	ldi	r25, 0x41	; 65
     e56:	4b d4       	rcall	.+2198   	; 0x16ee <pow>
     e58:	6b 01       	movw	r12, r22
     e5a:	7c 01       	movw	r14, r24
     e5c:	b4 01       	movw	r22, r8
     e5e:	88 27       	eor	r24, r24
     e60:	77 fd       	sbrc	r23, 7
     e62:	80 95       	com	r24
     e64:	98 2f       	mov	r25, r24
     e66:	52 d2       	rcall	.+1188   	; 0x130c <__floatsisf>
     e68:	9b 01       	movw	r18, r22
     e6a:	ac 01       	movw	r20, r24
     e6c:	68 81       	ld	r22, Y
     e6e:	79 81       	ldd	r23, Y+1	; 0x01
     e70:	8a 81       	ldd	r24, Y+2	; 0x02
     e72:	9b 81       	ldd	r25, Y+3	; 0x03
     e74:	16 d1       	rcall	.+556    	; 0x10a2 <__subsf3>
     e76:	a7 01       	movw	r20, r14
     e78:	96 01       	movw	r18, r12
     e7a:	d6 d3       	rcall	.+1964   	; 0x1628 <__mulsf3>
     e7c:	20 e0       	ldi	r18, 0x00	; 0
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	40 e0       	ldi	r20, 0x00	; 0
     e82:	5f e3       	ldi	r21, 0x3F	; 63
     e84:	0f d1       	rcall	.+542    	; 0x10a4 <__addsf3>
     e86:	0f d2       	rcall	.+1054   	; 0x12a6 <__fixsfsi>
     e88:	f8 01       	movw	r30, r16
     e8a:	71 83       	std	Z+1, r23	; 0x01
     e8c:	60 83       	st	Z, r22
	
}
     e8e:	df 91       	pop	r29
     e90:	cf 91       	pop	r28
     e92:	1f 91       	pop	r17
     e94:	0f 91       	pop	r16
     e96:	ff 90       	pop	r15
     e98:	ef 90       	pop	r14
     e9a:	df 90       	pop	r13
     e9c:	cf 90       	pop	r12
     e9e:	bf 90       	pop	r11
     ea0:	af 90       	pop	r10
     ea2:	9f 90       	pop	r9
     ea4:	8f 90       	pop	r8
     ea6:	08 95       	ret

00000ea8 <updateLcd>:

/************************************************************************/
/* @update lcd with current vars                                                                     */
/************************************************************************/ 
void updateLcd(void){
     ea8:	ef 92       	push	r14
     eaa:	ff 92       	push	r15
     eac:	0f 93       	push	r16
     eae:	1f 93       	push	r17
     eb0:	cf 93       	push	r28
     eb2:	df 93       	push	r29
     eb4:	cd b7       	in	r28, 0x3d	; 61
     eb6:	de b7       	in	r29, 0x3e	; 62
     eb8:	28 97       	sbiw	r28, 0x08	; 8
     eba:	0f b6       	in	r0, 0x3f	; 63
     ebc:	f8 94       	cli
     ebe:	de bf       	out	0x3e, r29	; 62
     ec0:	0f be       	out	0x3f, r0	; 63
     ec2:	cd bf       	out	0x3d, r28	; 61
	char buffer[4];
	int integerPart;
	int decimalPart;
	// RELAY
	LCD_gotoXY(13,0);
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	8d e0       	ldi	r24, 0x0D	; 13
     ec8:	4e dc       	rcall	.-1892   	; 0x766 <LCD_gotoXY>
	if(currentStatus)LCD_sendString("ON ");
     eca:	80 91 5a 01 	lds	r24, 0x015A
     ece:	88 23       	and	r24, r24
     ed0:	21 f0       	breq	.+8      	; 0xeda <updateLcd+0x32>
     ed2:	8e e3       	ldi	r24, 0x3E	; 62
     ed4:	91 e0       	ldi	r25, 0x01	; 1
     ed6:	2a dc       	rcall	.-1964   	; 0x72c <LCD_sendString>
     ed8:	03 c0       	rjmp	.+6      	; 0xee0 <updateLcd+0x38>
	else LCD_sendString("OFF");
     eda:	82 e4       	ldi	r24, 0x42	; 66
     edc:	91 e0       	ldi	r25, 0x01	; 1
     ede:	26 dc       	rcall	.-1972   	; 0x72c <LCD_sendString>
	
	
	// current temp
	LCD_gotoXY(2,0);
     ee0:	60 e0       	ldi	r22, 0x00	; 0
     ee2:	82 e0       	ldi	r24, 0x02	; 2
     ee4:	40 dc       	rcall	.-1920   	; 0x766 <LCD_gotoXY>
	splitDouble(&currentTemp,1,&integerPart,&decimalPart);
     ee6:	9e 01       	movw	r18, r28
     ee8:	29 5f       	subi	r18, 0xF9	; 249
     eea:	3f 4f       	sbci	r19, 0xFF	; 255
     eec:	ae 01       	movw	r20, r28
     eee:	4b 5f       	subi	r20, 0xFB	; 251
     ef0:	5f 4f       	sbci	r21, 0xFF	; 255
     ef2:	61 e0       	ldi	r22, 0x01	; 1
     ef4:	70 e0       	ldi	r23, 0x00	; 0
     ef6:	88 e0       	ldi	r24, 0x08	; 8
     ef8:	91 e0       	ldi	r25, 0x01	; 1
     efa:	87 df       	rcall	.-242    	; 0xe0a <splitDouble>
	sprintf(buffer,"%3d.%1d",integerPart, decimalPart);
     efc:	88 85       	ldd	r24, Y+8	; 0x08
     efe:	8f 93       	push	r24
     f00:	8f 81       	ldd	r24, Y+7	; 0x07
     f02:	8f 93       	push	r24
     f04:	8e 81       	ldd	r24, Y+6	; 0x06
     f06:	8f 93       	push	r24
     f08:	8d 81       	ldd	r24, Y+5	; 0x05
     f0a:	8f 93       	push	r24
     f0c:	0f 2e       	mov	r0, r31
     f0e:	f6 e4       	ldi	r31, 0x46	; 70
     f10:	ef 2e       	mov	r14, r31
     f12:	f1 e0       	ldi	r31, 0x01	; 1
     f14:	ff 2e       	mov	r15, r31
     f16:	f0 2d       	mov	r31, r0
     f18:	ff 92       	push	r15
     f1a:	ef 92       	push	r14
     f1c:	8e 01       	movw	r16, r28
     f1e:	0f 5f       	subi	r16, 0xFF	; 255
     f20:	1f 4f       	sbci	r17, 0xFF	; 255
     f22:	1f 93       	push	r17
     f24:	0f 93       	push	r16
     f26:	51 d4       	rcall	.+2210   	; 0x17ca <sprintf>
	LCD_sendString(buffer);
     f28:	c8 01       	movw	r24, r16
     f2a:	00 dc       	rcall	.-2048   	; 0x72c <LCD_sendString>
	
	// current setpoint
	LCD_gotoXY(2,1);
     f2c:	61 e0       	ldi	r22, 0x01	; 1
     f2e:	82 e0       	ldi	r24, 0x02	; 2
     f30:	1a dc       	rcall	.-1996   	; 0x766 <LCD_gotoXY>
	splitDouble(&currentTempSetPoint,1,&integerPart,&decimalPart);
     f32:	9e 01       	movw	r18, r28
     f34:	29 5f       	subi	r18, 0xF9	; 249
     f36:	3f 4f       	sbci	r19, 0xFF	; 255
     f38:	ae 01       	movw	r20, r28
     f3a:	4b 5f       	subi	r20, 0xFB	; 251
     f3c:	5f 4f       	sbci	r21, 0xFF	; 255
     f3e:	61 e0       	ldi	r22, 0x01	; 1
     f40:	70 e0       	ldi	r23, 0x00	; 0
     f42:	84 e0       	ldi	r24, 0x04	; 4
     f44:	91 e0       	ldi	r25, 0x01	; 1
     f46:	61 df       	rcall	.-318    	; 0xe0a <splitDouble>
	sprintf(buffer,"%3d.%1d",integerPart, decimalPart);
     f48:	88 85       	ldd	r24, Y+8	; 0x08
     f4a:	8f 93       	push	r24
     f4c:	8f 81       	ldd	r24, Y+7	; 0x07
     f4e:	8f 93       	push	r24
     f50:	8e 81       	ldd	r24, Y+6	; 0x06
     f52:	8f 93       	push	r24
     f54:	8d 81       	ldd	r24, Y+5	; 0x05
     f56:	8f 93       	push	r24
     f58:	ff 92       	push	r15
     f5a:	ef 92       	push	r14
     f5c:	1f 93       	push	r17
     f5e:	0f 93       	push	r16
     f60:	34 d4       	rcall	.+2152   	; 0x17ca <sprintf>
	LCD_sendString(buffer);
     f62:	c8 01       	movw	r24, r16
     f64:	e3 db       	rcall	.-2106   	; 0x72c <LCD_sendString>
	
	// current hist
	LCD_gotoXY(11,1);
     f66:	61 e0       	ldi	r22, 0x01	; 1
     f68:	8b e0       	ldi	r24, 0x0B	; 11
     f6a:	fd db       	rcall	.-2054   	; 0x766 <LCD_gotoXY>
	splitDouble(&currentHistSetPoint,1,&integerPart,&decimalPart);
     f6c:	9e 01       	movw	r18, r28
     f6e:	29 5f       	subi	r18, 0xF9	; 249
     f70:	3f 4f       	sbci	r19, 0xFF	; 255
     f72:	ae 01       	movw	r20, r28
     f74:	4b 5f       	subi	r20, 0xFB	; 251
     f76:	5f 4f       	sbci	r21, 0xFF	; 255
     f78:	61 e0       	ldi	r22, 0x01	; 1
     f7a:	70 e0       	ldi	r23, 0x00	; 0
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	91 e0       	ldi	r25, 0x01	; 1
     f80:	44 df       	rcall	.-376    	; 0xe0a <splitDouble>
	sprintf(buffer,"%3d.%1d",integerPart, decimalPart);
     f82:	88 85       	ldd	r24, Y+8	; 0x08
     f84:	8f 93       	push	r24
     f86:	8f 81       	ldd	r24, Y+7	; 0x07
     f88:	8f 93       	push	r24
     f8a:	8e 81       	ldd	r24, Y+6	; 0x06
     f8c:	8f 93       	push	r24
     f8e:	8d 81       	ldd	r24, Y+5	; 0x05
     f90:	8f 93       	push	r24
     f92:	ff 92       	push	r15
     f94:	ef 92       	push	r14
     f96:	1f 93       	push	r17
     f98:	0f 93       	push	r16
     f9a:	17 d4       	rcall	.+2094   	; 0x17ca <sprintf>
	LCD_sendString(buffer);
     f9c:	c8 01       	movw	r24, r16
     f9e:	c6 db       	rcall	.-2164   	; 0x72c <LCD_sendString>
     fa0:	0f b6       	in	r0, 0x3f	; 63
     fa2:	f8 94       	cli
     fa4:	de bf       	out	0x3e, r29	; 62
     fa6:	0f be       	out	0x3f, r0	; 63
     fa8:	cd bf       	out	0x3d, r28	; 61
	

}
     faa:	28 96       	adiw	r28, 0x08	; 8
     fac:	0f b6       	in	r0, 0x3f	; 63
     fae:	f8 94       	cli
     fb0:	de bf       	out	0x3e, r29	; 62
     fb2:	0f be       	out	0x3f, r0	; 63
     fb4:	cd bf       	out	0x3d, r28	; 61
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	ff 90       	pop	r15
     fc0:	ef 90       	pop	r14
     fc2:	08 95       	ret

00000fc4 <main>:
	#ifdef USE_WDT
	WDT_init(WDTO_8S); 
	#endif
	
	
	initGPIO();
     fc4:	42 de       	rcall	.-892    	; 0xc4a <initGPIO>
	LCD_init();
     fc6:	ff db       	rcall	.-2050   	; 0x7c6 <LCD_init>
	
	showLcdSplash();
     fc8:	de de       	rcall	.-580    	; 0xd86 <showLcdSplash>
		
	setLcdInitialFields();
     fca:	f4 de       	rcall	.-536    	; 0xdb4 <setLcdInitialFields>
		
	paramLoadFromEeprom();
     fcc:	82 de       	rcall	.-764    	; 0xcd2 <paramLoadFromEeprom>
		
	USART1_config(USART1_MY_UBBRN,USART_DATA_FORMAT_8BITS|USART_STOP_BITS_1,USART_TRANSMIT_ENABLE|USART_RECEIVE_ENABLE| USART_INTERRUPT_ENABLE);
     fce:	48 e9       	ldi	r20, 0x98	; 152
     fd0:	66 e0       	ldi	r22, 0x06	; 6
     fd2:	80 e1       	ldi	r24, 0x10	; 16
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	4c dc       	rcall	.-1896   	; 0x870 <USART1_config>
	
	USART1_sendStr("Hello");
     fd8:	8e e4       	ldi	r24, 0x4E	; 78
     fda:	91 e0       	ldi	r25, 0x01	; 1
     fdc:	5a dc       	rcall	.-1868   	; 0x892 <USART1_sendStr>
	
	schedulerInit();
     fde:	95 dc       	rcall	.-1750   	; 0x90a <schedulerInit>
	#ifdef USE_WDT
	WDT_init(WDTO_8S);
	#endif
	
	
	sei(); //enable interrups
     fe0:	78 94       	sei
#define DS18B20_STATUS_END_CONV 2

// main loop
int main(void){
	
	uint8_t stateDS18=DS18B20_STATUS_READY;
     fe2:	10 e0       	ldi	r17, 0x00	; 0
				stateDS18=DS18B20_STATUS_CONV;
			
			// check if convertion ended	
			}else if(stateDS18==DS18B20_STATUS_CONV){
				if(DS18B20_convComplete()){
					stateDS18=DS18B20_STATUS_END_CONV;
     fe4:	d2 e0       	ldi	r29, 0x02	; 2
			
			LED_RUN_OFF;
			// fire the DS
			if(stateDS18==DS18B20_STATUS_READY){
				DS18B20_startConv();
				stateDS18=DS18B20_STATUS_CONV;
     fe6:	c1 e0       	ldi	r28, 0x01	; 1
	// loop while	
    while(1){
		
		
		// cintrol zone
		if(flagTaskControl){
     fe8:	80 91 5c 01 	lds	r24, 0x015C
     fec:	88 23       	and	r24, r24
     fee:	09 f4       	brne	.+2      	; 0xff2 <main+0x2e>
     ff0:	3b c0       	rjmp	.+118    	; 0x1068 <main+0xa4>
			#ifdef USE_WDT
			WDT_reset();
			#endif
			
			
			LED_RUN_OFF;
     ff2:	c2 9a       	sbi	0x18, 2	; 24
			// fire the DS
			if(stateDS18==DS18B20_STATUS_READY){
     ff4:	11 11       	cpse	r17, r1
     ff6:	03 c0       	rjmp	.+6      	; 0xffe <main+0x3a>
				DS18B20_startConv();
     ff8:	1f d9       	rcall	.-3522   	; 0x238 <DS18B20_startConv>
				stateDS18=DS18B20_STATUS_CONV;
     ffa:	1c 2f       	mov	r17, r28
     ffc:	33 c0       	rjmp	.+102    	; 0x1064 <main+0xa0>
			
			// check if convertion ended	
			}else if(stateDS18==DS18B20_STATUS_CONV){
     ffe:	11 30       	cpi	r17, 0x01	; 1
    1000:	21 f4       	brne	.+8      	; 0x100a <main+0x46>
				if(DS18B20_convComplete()){
    1002:	20 d9       	rcall	.-3520   	; 0x244 <DS18B20_convComplete>
    1004:	81 11       	cpse	r24, r1
    1006:	2d c0       	rjmp	.+90     	; 0x1062 <main+0x9e>
    1008:	2d c0       	rjmp	.+90     	; 0x1064 <main+0xa0>
					stateDS18=DS18B20_STATUS_END_CONV;
				}
			
			// convertion ready	
			}else if (stateDS18==DS18B20_STATUS_END_CONV){
    100a:	12 30       	cpi	r17, 0x02	; 2
    100c:	59 f5       	brne	.+86     	; 0x1064 <main+0xa0>
				LED_RUN_ON;
    100e:	c2 98       	cbi	0x18, 2	; 24
				currentTemp=DS18B20_getTemp();
    1010:	1b d9       	rcall	.-3530   	; 0x248 <DS18B20_getTemp>
    1012:	60 93 08 01 	sts	0x0108, r22
    1016:	70 93 09 01 	sts	0x0109, r23
    101a:	80 93 0a 01 	sts	0x010A, r24
    101e:	90 93 0b 01 	sts	0x010B, r25
				stateDS18=DS18B20_STATUS_READY;
				
				currentStatus = checkTempError(currentTemp,currentTempSetPoint,currentHistSetPoint); // chec the out
    1022:	e0 90 00 01 	lds	r14, 0x0100
    1026:	f0 90 01 01 	lds	r15, 0x0101
    102a:	00 91 02 01 	lds	r16, 0x0102
    102e:	10 91 03 01 	lds	r17, 0x0103
    1032:	20 91 04 01 	lds	r18, 0x0104
    1036:	30 91 05 01 	lds	r19, 0x0105
    103a:	40 91 06 01 	lds	r20, 0x0106
    103e:	50 91 07 01 	lds	r21, 0x0107
    1042:	b0 dc       	rcall	.-1696   	; 0x9a4 <checkTempError>
    1044:	80 93 5a 01 	sts	0x015A, r24
				setOutputRelay(currentStatus);
    1048:	f8 dd       	rcall	.-1040   	; 0xc3a <setOutputRelay>
    104a:	2f ef       	ldi	r18, 0xFF	; 255
    104c:	80 e7       	ldi	r24, 0x70	; 112
    104e:	92 e0       	ldi	r25, 0x02	; 2
    1050:	21 50       	subi	r18, 0x01	; 1
    1052:	80 40       	sbci	r24, 0x00	; 0
    1054:	90 40       	sbci	r25, 0x00	; 0
    1056:	e1 f7       	brne	.-8      	; 0x1050 <main+0x8c>
    1058:	00 c0       	rjmp	.+0      	; 0x105a <main+0x96>
    105a:	00 00       	nop
				_delay_ms(50);
				LED_RUN_OFF;
    105c:	c2 9a       	sbi	0x18, 2	; 24
			
			// convertion ready	
			}else if (stateDS18==DS18B20_STATUS_END_CONV){
				LED_RUN_ON;
				currentTemp=DS18B20_getTemp();
				stateDS18=DS18B20_STATUS_READY;
    105e:	10 e0       	ldi	r17, 0x00	; 0
    1060:	01 c0       	rjmp	.+2      	; 0x1064 <main+0xa0>
				stateDS18=DS18B20_STATUS_CONV;
			
			// check if convertion ended	
			}else if(stateDS18==DS18B20_STATUS_CONV){
				if(DS18B20_convComplete()){
					stateDS18=DS18B20_STATUS_END_CONV;
    1062:	1d 2f       	mov	r17, r29
				LED_RUN_OFF;
					
				
			}
			
			flagTaskControl=0;
    1064:	10 92 5c 01 	sts	0x015C, r1
		}
		
		// user bottons area
		if(flagTaskReadButtons){
    1068:	80 91 5e 01 	lds	r24, 0x015E
    106c:	88 23       	and	r24, r24
    106e:	31 f0       	breq	.+12     	; 0x107c <main+0xb8>
			#ifdef USE_WDT
			WDT_reset();
			#endif
			
			uint8_t portVal = readButtons();
    1070:	e0 dd       	rcall	.-1088   	; 0xc32 <readButtons>
			uint8_t code = decodeButton(portVal);
    1072:	57 dc       	rcall	.-1874   	; 0x922 <decodeButton>
			code = debounceKey(code);
    1074:	6c dc       	rcall	.-1832   	; 0x94e <debounceKey>
			#ifdef MAIN_DEBUG
			sprintf(debugBuffer,"Key %d",code);
			USART1_sendStr(debugBuffer);
			#endif
			
			stateMachine(code); // go to machine
    1076:	90 dd       	rcall	.-1248   	; 0xb98 <stateMachine>
			
			flagTaskReadButtons=0;
    1078:	10 92 5e 01 	sts	0x015E, r1
		}
		
		 
		 // lcd update area
		 if(flagTaskUpdateLcd){
    107c:	80 91 5d 01 	lds	r24, 0x015D
    1080:	88 23       	and	r24, r24
    1082:	19 f0       	breq	.+6      	; 0x108a <main+0xc6>
			 #ifdef USE_WDT
			 WDT_reset();
			 #endif
			 //showLcdSavedMessage();
			 updateLcd(); // update the lcd
    1084:	11 df       	rcall	.-478    	; 0xea8 <updateLcd>
			 
			 flagTaskUpdateLcd=0;
    1086:	10 92 5d 01 	sts	0x015D, r1
		 }
		 
		 // save to eeprom
		 if(flagSaveParametersEeprom){
    108a:	80 91 5b 01 	lds	r24, 0x015B
    108e:	88 23       	and	r24, r24
    1090:	09 f4       	brne	.+2      	; 0x1094 <main+0xd0>
    1092:	aa cf       	rjmp	.-172    	; 0xfe8 <main+0x24>
			 #ifdef USE_WDT
			 WDT_reset();
			 #endif
			 
			 paramSavetoEeprom(); // save value sto eeprom
    1094:	4d de       	rcall	.-870    	; 0xd30 <paramSavetoEeprom>
			 showLcdSavedMessage();
    1096:	a8 de       	rcall	.-688    	; 0xde8 <showLcdSavedMessage>
			 setLcdInitialFields();
    1098:	8d de       	rcall	.-742    	; 0xdb4 <setLcdInitialFields>
			 updateLcd();
    109a:	06 df       	rcall	.-500    	; 0xea8 <updateLcd>
			 flagSaveParametersEeprom=0;
    109c:	10 92 5b 01 	sts	0x015B, r1
    10a0:	a3 cf       	rjmp	.-186    	; 0xfe8 <main+0x24>

000010a2 <__subsf3>:
    10a2:	50 58       	subi	r21, 0x80	; 128

000010a4 <__addsf3>:
    10a4:	bb 27       	eor	r27, r27
    10a6:	aa 27       	eor	r26, r26
    10a8:	0e d0       	rcall	.+28     	; 0x10c6 <__addsf3x>
    10aa:	cb c1       	rjmp	.+918    	; 0x1442 <__fp_round>
    10ac:	bc d1       	rcall	.+888    	; 0x1426 <__fp_pscA>
    10ae:	30 f0       	brcs	.+12     	; 0x10bc <__addsf3+0x18>
    10b0:	c1 d1       	rcall	.+898    	; 0x1434 <__fp_pscB>
    10b2:	20 f0       	brcs	.+8      	; 0x10bc <__addsf3+0x18>
    10b4:	31 f4       	brne	.+12     	; 0x10c2 <__addsf3+0x1e>
    10b6:	9f 3f       	cpi	r25, 0xFF	; 255
    10b8:	11 f4       	brne	.+4      	; 0x10be <__addsf3+0x1a>
    10ba:	1e f4       	brtc	.+6      	; 0x10c2 <__addsf3+0x1e>
    10bc:	8c c1       	rjmp	.+792    	; 0x13d6 <__fp_nan>
    10be:	0e f4       	brtc	.+2      	; 0x10c2 <__addsf3+0x1e>
    10c0:	e0 95       	com	r30
    10c2:	e7 fb       	bst	r30, 7
    10c4:	82 c1       	rjmp	.+772    	; 0x13ca <__fp_inf>

000010c6 <__addsf3x>:
    10c6:	e9 2f       	mov	r30, r25
    10c8:	cd d1       	rcall	.+922    	; 0x1464 <__fp_split3>
    10ca:	80 f3       	brcs	.-32     	; 0x10ac <__addsf3+0x8>
    10cc:	ba 17       	cp	r27, r26
    10ce:	62 07       	cpc	r22, r18
    10d0:	73 07       	cpc	r23, r19
    10d2:	84 07       	cpc	r24, r20
    10d4:	95 07       	cpc	r25, r21
    10d6:	18 f0       	brcs	.+6      	; 0x10de <__addsf3x+0x18>
    10d8:	71 f4       	brne	.+28     	; 0x10f6 <__addsf3x+0x30>
    10da:	9e f5       	brtc	.+102    	; 0x1142 <__stack+0x43>
    10dc:	e5 c1       	rjmp	.+970    	; 0x14a8 <__fp_zero>
    10de:	0e f4       	brtc	.+2      	; 0x10e2 <__addsf3x+0x1c>
    10e0:	e0 95       	com	r30
    10e2:	0b 2e       	mov	r0, r27
    10e4:	ba 2f       	mov	r27, r26
    10e6:	a0 2d       	mov	r26, r0
    10e8:	0b 01       	movw	r0, r22
    10ea:	b9 01       	movw	r22, r18
    10ec:	90 01       	movw	r18, r0
    10ee:	0c 01       	movw	r0, r24
    10f0:	ca 01       	movw	r24, r20
    10f2:	a0 01       	movw	r20, r0
    10f4:	11 24       	eor	r1, r1
    10f6:	ff 27       	eor	r31, r31
    10f8:	59 1b       	sub	r21, r25
    10fa:	99 f0       	breq	.+38     	; 0x1122 <__stack+0x23>
    10fc:	59 3f       	cpi	r21, 0xF9	; 249
    10fe:	50 f4       	brcc	.+20     	; 0x1114 <__stack+0x15>
    1100:	50 3e       	cpi	r21, 0xE0	; 224
    1102:	68 f1       	brcs	.+90     	; 0x115e <__stack+0x5f>
    1104:	1a 16       	cp	r1, r26
    1106:	f0 40       	sbci	r31, 0x00	; 0
    1108:	a2 2f       	mov	r26, r18
    110a:	23 2f       	mov	r18, r19
    110c:	34 2f       	mov	r19, r20
    110e:	44 27       	eor	r20, r20
    1110:	58 5f       	subi	r21, 0xF8	; 248
    1112:	f3 cf       	rjmp	.-26     	; 0x10fa <__addsf3x+0x34>
    1114:	46 95       	lsr	r20
    1116:	37 95       	ror	r19
    1118:	27 95       	ror	r18
    111a:	a7 95       	ror	r26
    111c:	f0 40       	sbci	r31, 0x00	; 0
    111e:	53 95       	inc	r21
    1120:	c9 f7       	brne	.-14     	; 0x1114 <__stack+0x15>
    1122:	7e f4       	brtc	.+30     	; 0x1142 <__stack+0x43>
    1124:	1f 16       	cp	r1, r31
    1126:	ba 0b       	sbc	r27, r26
    1128:	62 0b       	sbc	r22, r18
    112a:	73 0b       	sbc	r23, r19
    112c:	84 0b       	sbc	r24, r20
    112e:	ba f0       	brmi	.+46     	; 0x115e <__stack+0x5f>
    1130:	91 50       	subi	r25, 0x01	; 1
    1132:	a1 f0       	breq	.+40     	; 0x115c <__stack+0x5d>
    1134:	ff 0f       	add	r31, r31
    1136:	bb 1f       	adc	r27, r27
    1138:	66 1f       	adc	r22, r22
    113a:	77 1f       	adc	r23, r23
    113c:	88 1f       	adc	r24, r24
    113e:	c2 f7       	brpl	.-16     	; 0x1130 <__stack+0x31>
    1140:	0e c0       	rjmp	.+28     	; 0x115e <__stack+0x5f>
    1142:	ba 0f       	add	r27, r26
    1144:	62 1f       	adc	r22, r18
    1146:	73 1f       	adc	r23, r19
    1148:	84 1f       	adc	r24, r20
    114a:	48 f4       	brcc	.+18     	; 0x115e <__stack+0x5f>
    114c:	87 95       	ror	r24
    114e:	77 95       	ror	r23
    1150:	67 95       	ror	r22
    1152:	b7 95       	ror	r27
    1154:	f7 95       	ror	r31
    1156:	9e 3f       	cpi	r25, 0xFE	; 254
    1158:	08 f0       	brcs	.+2      	; 0x115c <__stack+0x5d>
    115a:	b3 cf       	rjmp	.-154    	; 0x10c2 <__addsf3+0x1e>
    115c:	93 95       	inc	r25
    115e:	88 0f       	add	r24, r24
    1160:	08 f0       	brcs	.+2      	; 0x1164 <__stack+0x65>
    1162:	99 27       	eor	r25, r25
    1164:	ee 0f       	add	r30, r30
    1166:	97 95       	ror	r25
    1168:	87 95       	ror	r24
    116a:	08 95       	ret

0000116c <__cmpsf2>:
    116c:	0a d1       	rcall	.+532    	; 0x1382 <__fp_cmp>
    116e:	08 f4       	brcc	.+2      	; 0x1172 <__cmpsf2+0x6>
    1170:	81 e0       	ldi	r24, 0x01	; 1
    1172:	08 95       	ret

00001174 <__divsf3>:
    1174:	0c d0       	rcall	.+24     	; 0x118e <__divsf3x>
    1176:	65 c1       	rjmp	.+714    	; 0x1442 <__fp_round>
    1178:	5d d1       	rcall	.+698    	; 0x1434 <__fp_pscB>
    117a:	40 f0       	brcs	.+16     	; 0x118c <__divsf3+0x18>
    117c:	54 d1       	rcall	.+680    	; 0x1426 <__fp_pscA>
    117e:	30 f0       	brcs	.+12     	; 0x118c <__divsf3+0x18>
    1180:	21 f4       	brne	.+8      	; 0x118a <__divsf3+0x16>
    1182:	5f 3f       	cpi	r21, 0xFF	; 255
    1184:	19 f0       	breq	.+6      	; 0x118c <__divsf3+0x18>
    1186:	21 c1       	rjmp	.+578    	; 0x13ca <__fp_inf>
    1188:	51 11       	cpse	r21, r1
    118a:	8f c1       	rjmp	.+798    	; 0x14aa <__fp_szero>
    118c:	24 c1       	rjmp	.+584    	; 0x13d6 <__fp_nan>

0000118e <__divsf3x>:
    118e:	6a d1       	rcall	.+724    	; 0x1464 <__fp_split3>
    1190:	98 f3       	brcs	.-26     	; 0x1178 <__divsf3+0x4>

00001192 <__divsf3_pse>:
    1192:	99 23       	and	r25, r25
    1194:	c9 f3       	breq	.-14     	; 0x1188 <__divsf3+0x14>
    1196:	55 23       	and	r21, r21
    1198:	b1 f3       	breq	.-20     	; 0x1186 <__divsf3+0x12>
    119a:	95 1b       	sub	r25, r21
    119c:	55 0b       	sbc	r21, r21
    119e:	bb 27       	eor	r27, r27
    11a0:	aa 27       	eor	r26, r26
    11a2:	62 17       	cp	r22, r18
    11a4:	73 07       	cpc	r23, r19
    11a6:	84 07       	cpc	r24, r20
    11a8:	38 f0       	brcs	.+14     	; 0x11b8 <__divsf3_pse+0x26>
    11aa:	9f 5f       	subi	r25, 0xFF	; 255
    11ac:	5f 4f       	sbci	r21, 0xFF	; 255
    11ae:	22 0f       	add	r18, r18
    11b0:	33 1f       	adc	r19, r19
    11b2:	44 1f       	adc	r20, r20
    11b4:	aa 1f       	adc	r26, r26
    11b6:	a9 f3       	breq	.-22     	; 0x11a2 <__divsf3_pse+0x10>
    11b8:	33 d0       	rcall	.+102    	; 0x1220 <__divsf3_pse+0x8e>
    11ba:	0e 2e       	mov	r0, r30
    11bc:	3a f0       	brmi	.+14     	; 0x11cc <__divsf3_pse+0x3a>
    11be:	e0 e8       	ldi	r30, 0x80	; 128
    11c0:	30 d0       	rcall	.+96     	; 0x1222 <__divsf3_pse+0x90>
    11c2:	91 50       	subi	r25, 0x01	; 1
    11c4:	50 40       	sbci	r21, 0x00	; 0
    11c6:	e6 95       	lsr	r30
    11c8:	00 1c       	adc	r0, r0
    11ca:	ca f7       	brpl	.-14     	; 0x11be <__divsf3_pse+0x2c>
    11cc:	29 d0       	rcall	.+82     	; 0x1220 <__divsf3_pse+0x8e>
    11ce:	fe 2f       	mov	r31, r30
    11d0:	27 d0       	rcall	.+78     	; 0x1220 <__divsf3_pse+0x8e>
    11d2:	66 0f       	add	r22, r22
    11d4:	77 1f       	adc	r23, r23
    11d6:	88 1f       	adc	r24, r24
    11d8:	bb 1f       	adc	r27, r27
    11da:	26 17       	cp	r18, r22
    11dc:	37 07       	cpc	r19, r23
    11de:	48 07       	cpc	r20, r24
    11e0:	ab 07       	cpc	r26, r27
    11e2:	b0 e8       	ldi	r27, 0x80	; 128
    11e4:	09 f0       	breq	.+2      	; 0x11e8 <__divsf3_pse+0x56>
    11e6:	bb 0b       	sbc	r27, r27
    11e8:	80 2d       	mov	r24, r0
    11ea:	bf 01       	movw	r22, r30
    11ec:	ff 27       	eor	r31, r31
    11ee:	93 58       	subi	r25, 0x83	; 131
    11f0:	5f 4f       	sbci	r21, 0xFF	; 255
    11f2:	2a f0       	brmi	.+10     	; 0x11fe <__divsf3_pse+0x6c>
    11f4:	9e 3f       	cpi	r25, 0xFE	; 254
    11f6:	51 05       	cpc	r21, r1
    11f8:	68 f0       	brcs	.+26     	; 0x1214 <__divsf3_pse+0x82>
    11fa:	e7 c0       	rjmp	.+462    	; 0x13ca <__fp_inf>
    11fc:	56 c1       	rjmp	.+684    	; 0x14aa <__fp_szero>
    11fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1200:	ec f3       	brlt	.-6      	; 0x11fc <__divsf3_pse+0x6a>
    1202:	98 3e       	cpi	r25, 0xE8	; 232
    1204:	dc f3       	brlt	.-10     	; 0x11fc <__divsf3_pse+0x6a>
    1206:	86 95       	lsr	r24
    1208:	77 95       	ror	r23
    120a:	67 95       	ror	r22
    120c:	b7 95       	ror	r27
    120e:	f7 95       	ror	r31
    1210:	9f 5f       	subi	r25, 0xFF	; 255
    1212:	c9 f7       	brne	.-14     	; 0x1206 <__divsf3_pse+0x74>
    1214:	88 0f       	add	r24, r24
    1216:	91 1d       	adc	r25, r1
    1218:	96 95       	lsr	r25
    121a:	87 95       	ror	r24
    121c:	97 f9       	bld	r25, 7
    121e:	08 95       	ret
    1220:	e1 e0       	ldi	r30, 0x01	; 1
    1222:	66 0f       	add	r22, r22
    1224:	77 1f       	adc	r23, r23
    1226:	88 1f       	adc	r24, r24
    1228:	bb 1f       	adc	r27, r27
    122a:	62 17       	cp	r22, r18
    122c:	73 07       	cpc	r23, r19
    122e:	84 07       	cpc	r24, r20
    1230:	ba 07       	cpc	r27, r26
    1232:	20 f0       	brcs	.+8      	; 0x123c <__divsf3_pse+0xaa>
    1234:	62 1b       	sub	r22, r18
    1236:	73 0b       	sbc	r23, r19
    1238:	84 0b       	sbc	r24, r20
    123a:	ba 0b       	sbc	r27, r26
    123c:	ee 1f       	adc	r30, r30
    123e:	88 f7       	brcc	.-30     	; 0x1222 <__divsf3_pse+0x90>
    1240:	e0 95       	com	r30
    1242:	08 95       	ret
    1244:	19 f4       	brne	.+6      	; 0x124c <__divsf3_pse+0xba>
    1246:	0e f0       	brts	.+2      	; 0x124a <__divsf3_pse+0xb8>
    1248:	c0 c0       	rjmp	.+384    	; 0x13ca <__fp_inf>
    124a:	2e c1       	rjmp	.+604    	; 0x14a8 <__fp_zero>
    124c:	c4 c0       	rjmp	.+392    	; 0x13d6 <__fp_nan>

0000124e <exp>:
    124e:	12 d1       	rcall	.+548    	; 0x1474 <__fp_splitA>
    1250:	c8 f3       	brcs	.-14     	; 0x1244 <__divsf3_pse+0xb2>
    1252:	96 38       	cpi	r25, 0x86	; 134
    1254:	c0 f7       	brcc	.-16     	; 0x1246 <__divsf3_pse+0xb4>
    1256:	07 f8       	bld	r0, 7
    1258:	0f 92       	push	r0
    125a:	e8 94       	clt
    125c:	2b e3       	ldi	r18, 0x3B	; 59
    125e:	3a ea       	ldi	r19, 0xAA	; 170
    1260:	48 eb       	ldi	r20, 0xB8	; 184
    1262:	5f e7       	ldi	r21, 0x7F	; 127
    1264:	ef d1       	rcall	.+990    	; 0x1644 <__mulsf3_pse>
    1266:	0f 92       	push	r0
    1268:	0f 92       	push	r0
    126a:	0f 92       	push	r0
    126c:	4d b7       	in	r20, 0x3d	; 61
    126e:	5e b7       	in	r21, 0x3e	; 62
    1270:	0f 92       	push	r0
    1272:	a7 d1       	rcall	.+846    	; 0x15c2 <modf>
    1274:	ec e8       	ldi	r30, 0x8C	; 140
    1276:	f0 e0       	ldi	r31, 0x00	; 0
    1278:	b1 d0       	rcall	.+354    	; 0x13dc <__fp_powser>
    127a:	4f 91       	pop	r20
    127c:	5f 91       	pop	r21
    127e:	ef 91       	pop	r30
    1280:	ff 91       	pop	r31
    1282:	e5 95       	asr	r30
    1284:	ee 1f       	adc	r30, r30
    1286:	ff 1f       	adc	r31, r31
    1288:	49 f0       	breq	.+18     	; 0x129c <exp+0x4e>
    128a:	fe 57       	subi	r31, 0x7E	; 126
    128c:	e0 68       	ori	r30, 0x80	; 128
    128e:	44 27       	eor	r20, r20
    1290:	ee 0f       	add	r30, r30
    1292:	44 1f       	adc	r20, r20
    1294:	fa 95       	dec	r31
    1296:	e1 f7       	brne	.-8      	; 0x1290 <exp+0x42>
    1298:	41 95       	neg	r20
    129a:	55 0b       	sbc	r21, r21
    129c:	19 d1       	rcall	.+562    	; 0x14d0 <ldexp>
    129e:	0f 90       	pop	r0
    12a0:	07 fe       	sbrs	r0, 7
    12a2:	0d c1       	rjmp	.+538    	; 0x14be <inverse>
    12a4:	08 95       	ret

000012a6 <__fixsfsi>:
    12a6:	04 d0       	rcall	.+8      	; 0x12b0 <__fixunssfsi>
    12a8:	68 94       	set
    12aa:	b1 11       	cpse	r27, r1
    12ac:	fe c0       	rjmp	.+508    	; 0x14aa <__fp_szero>
    12ae:	08 95       	ret

000012b0 <__fixunssfsi>:
    12b0:	e1 d0       	rcall	.+450    	; 0x1474 <__fp_splitA>
    12b2:	88 f0       	brcs	.+34     	; 0x12d6 <__fixunssfsi+0x26>
    12b4:	9f 57       	subi	r25, 0x7F	; 127
    12b6:	90 f0       	brcs	.+36     	; 0x12dc <__fixunssfsi+0x2c>
    12b8:	b9 2f       	mov	r27, r25
    12ba:	99 27       	eor	r25, r25
    12bc:	b7 51       	subi	r27, 0x17	; 23
    12be:	a0 f0       	brcs	.+40     	; 0x12e8 <__fixunssfsi+0x38>
    12c0:	d1 f0       	breq	.+52     	; 0x12f6 <__fixunssfsi+0x46>
    12c2:	66 0f       	add	r22, r22
    12c4:	77 1f       	adc	r23, r23
    12c6:	88 1f       	adc	r24, r24
    12c8:	99 1f       	adc	r25, r25
    12ca:	1a f0       	brmi	.+6      	; 0x12d2 <__fixunssfsi+0x22>
    12cc:	ba 95       	dec	r27
    12ce:	c9 f7       	brne	.-14     	; 0x12c2 <__fixunssfsi+0x12>
    12d0:	12 c0       	rjmp	.+36     	; 0x12f6 <__fixunssfsi+0x46>
    12d2:	b1 30       	cpi	r27, 0x01	; 1
    12d4:	81 f0       	breq	.+32     	; 0x12f6 <__fixunssfsi+0x46>
    12d6:	e8 d0       	rcall	.+464    	; 0x14a8 <__fp_zero>
    12d8:	b1 e0       	ldi	r27, 0x01	; 1
    12da:	08 95       	ret
    12dc:	e5 c0       	rjmp	.+458    	; 0x14a8 <__fp_zero>
    12de:	67 2f       	mov	r22, r23
    12e0:	78 2f       	mov	r23, r24
    12e2:	88 27       	eor	r24, r24
    12e4:	b8 5f       	subi	r27, 0xF8	; 248
    12e6:	39 f0       	breq	.+14     	; 0x12f6 <__fixunssfsi+0x46>
    12e8:	b9 3f       	cpi	r27, 0xF9	; 249
    12ea:	cc f3       	brlt	.-14     	; 0x12de <__fixunssfsi+0x2e>
    12ec:	86 95       	lsr	r24
    12ee:	77 95       	ror	r23
    12f0:	67 95       	ror	r22
    12f2:	b3 95       	inc	r27
    12f4:	d9 f7       	brne	.-10     	; 0x12ec <__fixunssfsi+0x3c>
    12f6:	3e f4       	brtc	.+14     	; 0x1306 <__fixunssfsi+0x56>
    12f8:	90 95       	com	r25
    12fa:	80 95       	com	r24
    12fc:	70 95       	com	r23
    12fe:	61 95       	neg	r22
    1300:	7f 4f       	sbci	r23, 0xFF	; 255
    1302:	8f 4f       	sbci	r24, 0xFF	; 255
    1304:	9f 4f       	sbci	r25, 0xFF	; 255
    1306:	08 95       	ret

00001308 <__floatunsisf>:
    1308:	e8 94       	clt
    130a:	09 c0       	rjmp	.+18     	; 0x131e <__floatsisf+0x12>

0000130c <__floatsisf>:
    130c:	97 fb       	bst	r25, 7
    130e:	3e f4       	brtc	.+14     	; 0x131e <__floatsisf+0x12>
    1310:	90 95       	com	r25
    1312:	80 95       	com	r24
    1314:	70 95       	com	r23
    1316:	61 95       	neg	r22
    1318:	7f 4f       	sbci	r23, 0xFF	; 255
    131a:	8f 4f       	sbci	r24, 0xFF	; 255
    131c:	9f 4f       	sbci	r25, 0xFF	; 255
    131e:	99 23       	and	r25, r25
    1320:	a9 f0       	breq	.+42     	; 0x134c <__floatsisf+0x40>
    1322:	f9 2f       	mov	r31, r25
    1324:	96 e9       	ldi	r25, 0x96	; 150
    1326:	bb 27       	eor	r27, r27
    1328:	93 95       	inc	r25
    132a:	f6 95       	lsr	r31
    132c:	87 95       	ror	r24
    132e:	77 95       	ror	r23
    1330:	67 95       	ror	r22
    1332:	b7 95       	ror	r27
    1334:	f1 11       	cpse	r31, r1
    1336:	f8 cf       	rjmp	.-16     	; 0x1328 <__floatsisf+0x1c>
    1338:	fa f4       	brpl	.+62     	; 0x1378 <__floatsisf+0x6c>
    133a:	bb 0f       	add	r27, r27
    133c:	11 f4       	brne	.+4      	; 0x1342 <__floatsisf+0x36>
    133e:	60 ff       	sbrs	r22, 0
    1340:	1b c0       	rjmp	.+54     	; 0x1378 <__floatsisf+0x6c>
    1342:	6f 5f       	subi	r22, 0xFF	; 255
    1344:	7f 4f       	sbci	r23, 0xFF	; 255
    1346:	8f 4f       	sbci	r24, 0xFF	; 255
    1348:	9f 4f       	sbci	r25, 0xFF	; 255
    134a:	16 c0       	rjmp	.+44     	; 0x1378 <__floatsisf+0x6c>
    134c:	88 23       	and	r24, r24
    134e:	11 f0       	breq	.+4      	; 0x1354 <__floatsisf+0x48>
    1350:	96 e9       	ldi	r25, 0x96	; 150
    1352:	11 c0       	rjmp	.+34     	; 0x1376 <__floatsisf+0x6a>
    1354:	77 23       	and	r23, r23
    1356:	21 f0       	breq	.+8      	; 0x1360 <__floatsisf+0x54>
    1358:	9e e8       	ldi	r25, 0x8E	; 142
    135a:	87 2f       	mov	r24, r23
    135c:	76 2f       	mov	r23, r22
    135e:	05 c0       	rjmp	.+10     	; 0x136a <__floatsisf+0x5e>
    1360:	66 23       	and	r22, r22
    1362:	71 f0       	breq	.+28     	; 0x1380 <__floatsisf+0x74>
    1364:	96 e8       	ldi	r25, 0x86	; 134
    1366:	86 2f       	mov	r24, r22
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	60 e0       	ldi	r22, 0x00	; 0
    136c:	2a f0       	brmi	.+10     	; 0x1378 <__floatsisf+0x6c>
    136e:	9a 95       	dec	r25
    1370:	66 0f       	add	r22, r22
    1372:	77 1f       	adc	r23, r23
    1374:	88 1f       	adc	r24, r24
    1376:	da f7       	brpl	.-10     	; 0x136e <__floatsisf+0x62>
    1378:	88 0f       	add	r24, r24
    137a:	96 95       	lsr	r25
    137c:	87 95       	ror	r24
    137e:	97 f9       	bld	r25, 7
    1380:	08 95       	ret

00001382 <__fp_cmp>:
    1382:	99 0f       	add	r25, r25
    1384:	00 08       	sbc	r0, r0
    1386:	55 0f       	add	r21, r21
    1388:	aa 0b       	sbc	r26, r26
    138a:	e0 e8       	ldi	r30, 0x80	; 128
    138c:	fe ef       	ldi	r31, 0xFE	; 254
    138e:	16 16       	cp	r1, r22
    1390:	17 06       	cpc	r1, r23
    1392:	e8 07       	cpc	r30, r24
    1394:	f9 07       	cpc	r31, r25
    1396:	c0 f0       	brcs	.+48     	; 0x13c8 <__fp_cmp+0x46>
    1398:	12 16       	cp	r1, r18
    139a:	13 06       	cpc	r1, r19
    139c:	e4 07       	cpc	r30, r20
    139e:	f5 07       	cpc	r31, r21
    13a0:	98 f0       	brcs	.+38     	; 0x13c8 <__fp_cmp+0x46>
    13a2:	62 1b       	sub	r22, r18
    13a4:	73 0b       	sbc	r23, r19
    13a6:	84 0b       	sbc	r24, r20
    13a8:	95 0b       	sbc	r25, r21
    13aa:	39 f4       	brne	.+14     	; 0x13ba <__fp_cmp+0x38>
    13ac:	0a 26       	eor	r0, r26
    13ae:	61 f0       	breq	.+24     	; 0x13c8 <__fp_cmp+0x46>
    13b0:	23 2b       	or	r18, r19
    13b2:	24 2b       	or	r18, r20
    13b4:	25 2b       	or	r18, r21
    13b6:	21 f4       	brne	.+8      	; 0x13c0 <__fp_cmp+0x3e>
    13b8:	08 95       	ret
    13ba:	0a 26       	eor	r0, r26
    13bc:	09 f4       	brne	.+2      	; 0x13c0 <__fp_cmp+0x3e>
    13be:	a1 40       	sbci	r26, 0x01	; 1
    13c0:	a6 95       	lsr	r26
    13c2:	8f ef       	ldi	r24, 0xFF	; 255
    13c4:	81 1d       	adc	r24, r1
    13c6:	81 1d       	adc	r24, r1
    13c8:	08 95       	ret

000013ca <__fp_inf>:
    13ca:	97 f9       	bld	r25, 7
    13cc:	9f 67       	ori	r25, 0x7F	; 127
    13ce:	80 e8       	ldi	r24, 0x80	; 128
    13d0:	70 e0       	ldi	r23, 0x00	; 0
    13d2:	60 e0       	ldi	r22, 0x00	; 0
    13d4:	08 95       	ret

000013d6 <__fp_nan>:
    13d6:	9f ef       	ldi	r25, 0xFF	; 255
    13d8:	80 ec       	ldi	r24, 0xC0	; 192
    13da:	08 95       	ret

000013dc <__fp_powser>:
    13dc:	df 93       	push	r29
    13de:	cf 93       	push	r28
    13e0:	1f 93       	push	r17
    13e2:	0f 93       	push	r16
    13e4:	ff 92       	push	r15
    13e6:	ef 92       	push	r14
    13e8:	df 92       	push	r13
    13ea:	7b 01       	movw	r14, r22
    13ec:	8c 01       	movw	r16, r24
    13ee:	68 94       	set
    13f0:	05 c0       	rjmp	.+10     	; 0x13fc <__fp_powser+0x20>
    13f2:	da 2e       	mov	r13, r26
    13f4:	ef 01       	movw	r28, r30
    13f6:	24 d1       	rcall	.+584    	; 0x1640 <__mulsf3x>
    13f8:	fe 01       	movw	r30, r28
    13fa:	e8 94       	clt
    13fc:	a5 91       	lpm	r26, Z+
    13fe:	25 91       	lpm	r18, Z+
    1400:	35 91       	lpm	r19, Z+
    1402:	45 91       	lpm	r20, Z+
    1404:	55 91       	lpm	r21, Z+
    1406:	ae f3       	brts	.-22     	; 0x13f2 <__fp_powser+0x16>
    1408:	ef 01       	movw	r28, r30
    140a:	5d de       	rcall	.-838    	; 0x10c6 <__addsf3x>
    140c:	fe 01       	movw	r30, r28
    140e:	97 01       	movw	r18, r14
    1410:	a8 01       	movw	r20, r16
    1412:	da 94       	dec	r13
    1414:	79 f7       	brne	.-34     	; 0x13f4 <__fp_powser+0x18>
    1416:	df 90       	pop	r13
    1418:	ef 90       	pop	r14
    141a:	ff 90       	pop	r15
    141c:	0f 91       	pop	r16
    141e:	1f 91       	pop	r17
    1420:	cf 91       	pop	r28
    1422:	df 91       	pop	r29
    1424:	08 95       	ret

00001426 <__fp_pscA>:
    1426:	00 24       	eor	r0, r0
    1428:	0a 94       	dec	r0
    142a:	16 16       	cp	r1, r22
    142c:	17 06       	cpc	r1, r23
    142e:	18 06       	cpc	r1, r24
    1430:	09 06       	cpc	r0, r25
    1432:	08 95       	ret

00001434 <__fp_pscB>:
    1434:	00 24       	eor	r0, r0
    1436:	0a 94       	dec	r0
    1438:	12 16       	cp	r1, r18
    143a:	13 06       	cpc	r1, r19
    143c:	14 06       	cpc	r1, r20
    143e:	05 06       	cpc	r0, r21
    1440:	08 95       	ret

00001442 <__fp_round>:
    1442:	09 2e       	mov	r0, r25
    1444:	03 94       	inc	r0
    1446:	00 0c       	add	r0, r0
    1448:	11 f4       	brne	.+4      	; 0x144e <__fp_round+0xc>
    144a:	88 23       	and	r24, r24
    144c:	52 f0       	brmi	.+20     	; 0x1462 <__fp_round+0x20>
    144e:	bb 0f       	add	r27, r27
    1450:	40 f4       	brcc	.+16     	; 0x1462 <__fp_round+0x20>
    1452:	bf 2b       	or	r27, r31
    1454:	11 f4       	brne	.+4      	; 0x145a <__fp_round+0x18>
    1456:	60 ff       	sbrs	r22, 0
    1458:	04 c0       	rjmp	.+8      	; 0x1462 <__fp_round+0x20>
    145a:	6f 5f       	subi	r22, 0xFF	; 255
    145c:	7f 4f       	sbci	r23, 0xFF	; 255
    145e:	8f 4f       	sbci	r24, 0xFF	; 255
    1460:	9f 4f       	sbci	r25, 0xFF	; 255
    1462:	08 95       	ret

00001464 <__fp_split3>:
    1464:	57 fd       	sbrc	r21, 7
    1466:	90 58       	subi	r25, 0x80	; 128
    1468:	44 0f       	add	r20, r20
    146a:	55 1f       	adc	r21, r21
    146c:	59 f0       	breq	.+22     	; 0x1484 <__fp_splitA+0x10>
    146e:	5f 3f       	cpi	r21, 0xFF	; 255
    1470:	71 f0       	breq	.+28     	; 0x148e <__fp_splitA+0x1a>
    1472:	47 95       	ror	r20

00001474 <__fp_splitA>:
    1474:	88 0f       	add	r24, r24
    1476:	97 fb       	bst	r25, 7
    1478:	99 1f       	adc	r25, r25
    147a:	61 f0       	breq	.+24     	; 0x1494 <__fp_splitA+0x20>
    147c:	9f 3f       	cpi	r25, 0xFF	; 255
    147e:	79 f0       	breq	.+30     	; 0x149e <__fp_splitA+0x2a>
    1480:	87 95       	ror	r24
    1482:	08 95       	ret
    1484:	12 16       	cp	r1, r18
    1486:	13 06       	cpc	r1, r19
    1488:	14 06       	cpc	r1, r20
    148a:	55 1f       	adc	r21, r21
    148c:	f2 cf       	rjmp	.-28     	; 0x1472 <__fp_split3+0xe>
    148e:	46 95       	lsr	r20
    1490:	f1 df       	rcall	.-30     	; 0x1474 <__fp_splitA>
    1492:	08 c0       	rjmp	.+16     	; 0x14a4 <__fp_splitA+0x30>
    1494:	16 16       	cp	r1, r22
    1496:	17 06       	cpc	r1, r23
    1498:	18 06       	cpc	r1, r24
    149a:	99 1f       	adc	r25, r25
    149c:	f1 cf       	rjmp	.-30     	; 0x1480 <__fp_splitA+0xc>
    149e:	86 95       	lsr	r24
    14a0:	71 05       	cpc	r23, r1
    14a2:	61 05       	cpc	r22, r1
    14a4:	08 94       	sec
    14a6:	08 95       	ret

000014a8 <__fp_zero>:
    14a8:	e8 94       	clt

000014aa <__fp_szero>:
    14aa:	bb 27       	eor	r27, r27
    14ac:	66 27       	eor	r22, r22
    14ae:	77 27       	eor	r23, r23
    14b0:	cb 01       	movw	r24, r22
    14b2:	97 f9       	bld	r25, 7
    14b4:	08 95       	ret

000014b6 <__gesf2>:
    14b6:	65 df       	rcall	.-310    	; 0x1382 <__fp_cmp>
    14b8:	08 f4       	brcc	.+2      	; 0x14bc <__gesf2+0x6>
    14ba:	8f ef       	ldi	r24, 0xFF	; 255
    14bc:	08 95       	ret

000014be <inverse>:
    14be:	9b 01       	movw	r18, r22
    14c0:	ac 01       	movw	r20, r24
    14c2:	60 e0       	ldi	r22, 0x00	; 0
    14c4:	70 e0       	ldi	r23, 0x00	; 0
    14c6:	80 e8       	ldi	r24, 0x80	; 128
    14c8:	9f e3       	ldi	r25, 0x3F	; 63
    14ca:	54 ce       	rjmp	.-856    	; 0x1174 <__divsf3>
    14cc:	7e cf       	rjmp	.-260    	; 0x13ca <__fp_inf>
    14ce:	5b c1       	rjmp	.+694    	; 0x1786 <__fp_mpack>

000014d0 <ldexp>:
    14d0:	d1 df       	rcall	.-94     	; 0x1474 <__fp_splitA>
    14d2:	e8 f3       	brcs	.-6      	; 0x14ce <inverse+0x10>
    14d4:	99 23       	and	r25, r25
    14d6:	d9 f3       	breq	.-10     	; 0x14ce <inverse+0x10>
    14d8:	94 0f       	add	r25, r20
    14da:	51 1d       	adc	r21, r1
    14dc:	bb f3       	brvs	.-18     	; 0x14cc <inverse+0xe>
    14de:	91 50       	subi	r25, 0x01	; 1
    14e0:	50 40       	sbci	r21, 0x00	; 0
    14e2:	94 f0       	brlt	.+36     	; 0x1508 <ldexp+0x38>
    14e4:	59 f0       	breq	.+22     	; 0x14fc <ldexp+0x2c>
    14e6:	88 23       	and	r24, r24
    14e8:	32 f0       	brmi	.+12     	; 0x14f6 <ldexp+0x26>
    14ea:	66 0f       	add	r22, r22
    14ec:	77 1f       	adc	r23, r23
    14ee:	88 1f       	adc	r24, r24
    14f0:	91 50       	subi	r25, 0x01	; 1
    14f2:	50 40       	sbci	r21, 0x00	; 0
    14f4:	c1 f7       	brne	.-16     	; 0x14e6 <ldexp+0x16>
    14f6:	9e 3f       	cpi	r25, 0xFE	; 254
    14f8:	51 05       	cpc	r21, r1
    14fa:	44 f7       	brge	.-48     	; 0x14cc <inverse+0xe>
    14fc:	88 0f       	add	r24, r24
    14fe:	91 1d       	adc	r25, r1
    1500:	96 95       	lsr	r25
    1502:	87 95       	ror	r24
    1504:	97 f9       	bld	r25, 7
    1506:	08 95       	ret
    1508:	5f 3f       	cpi	r21, 0xFF	; 255
    150a:	ac f0       	brlt	.+42     	; 0x1536 <ldexp+0x66>
    150c:	98 3e       	cpi	r25, 0xE8	; 232
    150e:	9c f0       	brlt	.+38     	; 0x1536 <ldexp+0x66>
    1510:	bb 27       	eor	r27, r27
    1512:	86 95       	lsr	r24
    1514:	77 95       	ror	r23
    1516:	67 95       	ror	r22
    1518:	b7 95       	ror	r27
    151a:	08 f4       	brcc	.+2      	; 0x151e <ldexp+0x4e>
    151c:	b1 60       	ori	r27, 0x01	; 1
    151e:	93 95       	inc	r25
    1520:	c1 f7       	brne	.-16     	; 0x1512 <ldexp+0x42>
    1522:	bb 0f       	add	r27, r27
    1524:	58 f7       	brcc	.-42     	; 0x14fc <ldexp+0x2c>
    1526:	11 f4       	brne	.+4      	; 0x152c <ldexp+0x5c>
    1528:	60 ff       	sbrs	r22, 0
    152a:	e8 cf       	rjmp	.-48     	; 0x14fc <ldexp+0x2c>
    152c:	6f 5f       	subi	r22, 0xFF	; 255
    152e:	7f 4f       	sbci	r23, 0xFF	; 255
    1530:	8f 4f       	sbci	r24, 0xFF	; 255
    1532:	9f 4f       	sbci	r25, 0xFF	; 255
    1534:	e3 cf       	rjmp	.-58     	; 0x14fc <ldexp+0x2c>
    1536:	b9 cf       	rjmp	.-142    	; 0x14aa <__fp_szero>
    1538:	0e f0       	brts	.+2      	; 0x153c <ldexp+0x6c>
    153a:	25 c1       	rjmp	.+586    	; 0x1786 <__fp_mpack>
    153c:	4c cf       	rjmp	.-360    	; 0x13d6 <__fp_nan>
    153e:	68 94       	set
    1540:	44 cf       	rjmp	.-376    	; 0x13ca <__fp_inf>

00001542 <log>:
    1542:	98 df       	rcall	.-208    	; 0x1474 <__fp_splitA>
    1544:	c8 f3       	brcs	.-14     	; 0x1538 <ldexp+0x68>
    1546:	99 23       	and	r25, r25
    1548:	d1 f3       	breq	.-12     	; 0x153e <ldexp+0x6e>
    154a:	c6 f3       	brts	.-16     	; 0x153c <ldexp+0x6c>
    154c:	df 93       	push	r29
    154e:	cf 93       	push	r28
    1550:	1f 93       	push	r17
    1552:	0f 93       	push	r16
    1554:	ff 92       	push	r15
    1556:	c9 2f       	mov	r28, r25
    1558:	dd 27       	eor	r29, r29
    155a:	88 23       	and	r24, r24
    155c:	2a f0       	brmi	.+10     	; 0x1568 <log+0x26>
    155e:	21 97       	sbiw	r28, 0x01	; 1
    1560:	66 0f       	add	r22, r22
    1562:	77 1f       	adc	r23, r23
    1564:	88 1f       	adc	r24, r24
    1566:	da f7       	brpl	.-10     	; 0x155e <log+0x1c>
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	40 e8       	ldi	r20, 0x80	; 128
    156e:	5f eb       	ldi	r21, 0xBF	; 191
    1570:	9f e3       	ldi	r25, 0x3F	; 63
    1572:	88 39       	cpi	r24, 0x98	; 152
    1574:	20 f0       	brcs	.+8      	; 0x157e <log+0x3c>
    1576:	80 3e       	cpi	r24, 0xE0	; 224
    1578:	30 f0       	brcs	.+12     	; 0x1586 <log+0x44>
    157a:	21 96       	adiw	r28, 0x01	; 1
    157c:	8f 77       	andi	r24, 0x7F	; 127
    157e:	92 dd       	rcall	.-1244   	; 0x10a4 <__addsf3>
    1580:	e4 eb       	ldi	r30, 0xB4	; 180
    1582:	f0 e0       	ldi	r31, 0x00	; 0
    1584:	03 c0       	rjmp	.+6      	; 0x158c <log+0x4a>
    1586:	8e dd       	rcall	.-1252   	; 0x10a4 <__addsf3>
    1588:	e1 ee       	ldi	r30, 0xE1	; 225
    158a:	f0 e0       	ldi	r31, 0x00	; 0
    158c:	27 df       	rcall	.-434    	; 0x13dc <__fp_powser>
    158e:	8b 01       	movw	r16, r22
    1590:	be 01       	movw	r22, r28
    1592:	ec 01       	movw	r28, r24
    1594:	fb 2e       	mov	r15, r27
    1596:	6f 57       	subi	r22, 0x7F	; 127
    1598:	71 09       	sbc	r23, r1
    159a:	75 95       	asr	r23
    159c:	77 1f       	adc	r23, r23
    159e:	88 0b       	sbc	r24, r24
    15a0:	99 0b       	sbc	r25, r25
    15a2:	b4 de       	rcall	.-664    	; 0x130c <__floatsisf>
    15a4:	28 e1       	ldi	r18, 0x18	; 24
    15a6:	32 e7       	ldi	r19, 0x72	; 114
    15a8:	41 e3       	ldi	r20, 0x31	; 49
    15aa:	5f e3       	ldi	r21, 0x3F	; 63
    15ac:	49 d0       	rcall	.+146    	; 0x1640 <__mulsf3x>
    15ae:	af 2d       	mov	r26, r15
    15b0:	98 01       	movw	r18, r16
    15b2:	ae 01       	movw	r20, r28
    15b4:	ff 90       	pop	r15
    15b6:	0f 91       	pop	r16
    15b8:	1f 91       	pop	r17
    15ba:	cf 91       	pop	r28
    15bc:	df 91       	pop	r29
    15be:	83 dd       	rcall	.-1274   	; 0x10c6 <__addsf3x>
    15c0:	40 cf       	rjmp	.-384    	; 0x1442 <__fp_round>

000015c2 <modf>:
    15c2:	fa 01       	movw	r30, r20
    15c4:	dc 01       	movw	r26, r24
    15c6:	aa 0f       	add	r26, r26
    15c8:	bb 1f       	adc	r27, r27
    15ca:	9b 01       	movw	r18, r22
    15cc:	ac 01       	movw	r20, r24
    15ce:	bf 57       	subi	r27, 0x7F	; 127
    15d0:	28 f4       	brcc	.+10     	; 0x15dc <modf+0x1a>
    15d2:	22 27       	eor	r18, r18
    15d4:	33 27       	eor	r19, r19
    15d6:	44 27       	eor	r20, r20
    15d8:	50 78       	andi	r21, 0x80	; 128
    15da:	1f c0       	rjmp	.+62     	; 0x161a <modf+0x58>
    15dc:	b7 51       	subi	r27, 0x17	; 23
    15de:	88 f4       	brcc	.+34     	; 0x1602 <modf+0x40>
    15e0:	ab 2f       	mov	r26, r27
    15e2:	00 24       	eor	r0, r0
    15e4:	46 95       	lsr	r20
    15e6:	37 95       	ror	r19
    15e8:	27 95       	ror	r18
    15ea:	01 1c       	adc	r0, r1
    15ec:	a3 95       	inc	r26
    15ee:	d2 f3       	brmi	.-12     	; 0x15e4 <modf+0x22>
    15f0:	00 20       	and	r0, r0
    15f2:	69 f0       	breq	.+26     	; 0x160e <modf+0x4c>
    15f4:	22 0f       	add	r18, r18
    15f6:	33 1f       	adc	r19, r19
    15f8:	44 1f       	adc	r20, r20
    15fa:	b3 95       	inc	r27
    15fc:	da f3       	brmi	.-10     	; 0x15f4 <modf+0x32>
    15fe:	0d d0       	rcall	.+26     	; 0x161a <modf+0x58>
    1600:	50 cd       	rjmp	.-1376   	; 0x10a2 <__subsf3>
    1602:	61 30       	cpi	r22, 0x01	; 1
    1604:	71 05       	cpc	r23, r1
    1606:	a0 e8       	ldi	r26, 0x80	; 128
    1608:	8a 07       	cpc	r24, r26
    160a:	b9 46       	sbci	r27, 0x69	; 105
    160c:	30 f4       	brcc	.+12     	; 0x161a <modf+0x58>
    160e:	9b 01       	movw	r18, r22
    1610:	ac 01       	movw	r20, r24
    1612:	66 27       	eor	r22, r22
    1614:	77 27       	eor	r23, r23
    1616:	88 27       	eor	r24, r24
    1618:	90 78       	andi	r25, 0x80	; 128
    161a:	30 96       	adiw	r30, 0x00	; 0
    161c:	21 f0       	breq	.+8      	; 0x1626 <modf+0x64>
    161e:	20 83       	st	Z, r18
    1620:	31 83       	std	Z+1, r19	; 0x01
    1622:	42 83       	std	Z+2, r20	; 0x02
    1624:	53 83       	std	Z+3, r21	; 0x03
    1626:	08 95       	ret

00001628 <__mulsf3>:
    1628:	0b d0       	rcall	.+22     	; 0x1640 <__mulsf3x>
    162a:	0b cf       	rjmp	.-490    	; 0x1442 <__fp_round>
    162c:	fc de       	rcall	.-520    	; 0x1426 <__fp_pscA>
    162e:	28 f0       	brcs	.+10     	; 0x163a <__mulsf3+0x12>
    1630:	01 df       	rcall	.-510    	; 0x1434 <__fp_pscB>
    1632:	18 f0       	brcs	.+6      	; 0x163a <__mulsf3+0x12>
    1634:	95 23       	and	r25, r21
    1636:	09 f0       	breq	.+2      	; 0x163a <__mulsf3+0x12>
    1638:	c8 ce       	rjmp	.-624    	; 0x13ca <__fp_inf>
    163a:	cd ce       	rjmp	.-614    	; 0x13d6 <__fp_nan>
    163c:	11 24       	eor	r1, r1
    163e:	35 cf       	rjmp	.-406    	; 0x14aa <__fp_szero>

00001640 <__mulsf3x>:
    1640:	11 df       	rcall	.-478    	; 0x1464 <__fp_split3>
    1642:	a0 f3       	brcs	.-24     	; 0x162c <__mulsf3+0x4>

00001644 <__mulsf3_pse>:
    1644:	95 9f       	mul	r25, r21
    1646:	d1 f3       	breq	.-12     	; 0x163c <__mulsf3+0x14>
    1648:	95 0f       	add	r25, r21
    164a:	50 e0       	ldi	r21, 0x00	; 0
    164c:	55 1f       	adc	r21, r21
    164e:	62 9f       	mul	r22, r18
    1650:	f0 01       	movw	r30, r0
    1652:	72 9f       	mul	r23, r18
    1654:	bb 27       	eor	r27, r27
    1656:	f0 0d       	add	r31, r0
    1658:	b1 1d       	adc	r27, r1
    165a:	63 9f       	mul	r22, r19
    165c:	aa 27       	eor	r26, r26
    165e:	f0 0d       	add	r31, r0
    1660:	b1 1d       	adc	r27, r1
    1662:	aa 1f       	adc	r26, r26
    1664:	64 9f       	mul	r22, r20
    1666:	66 27       	eor	r22, r22
    1668:	b0 0d       	add	r27, r0
    166a:	a1 1d       	adc	r26, r1
    166c:	66 1f       	adc	r22, r22
    166e:	82 9f       	mul	r24, r18
    1670:	22 27       	eor	r18, r18
    1672:	b0 0d       	add	r27, r0
    1674:	a1 1d       	adc	r26, r1
    1676:	62 1f       	adc	r22, r18
    1678:	73 9f       	mul	r23, r19
    167a:	b0 0d       	add	r27, r0
    167c:	a1 1d       	adc	r26, r1
    167e:	62 1f       	adc	r22, r18
    1680:	83 9f       	mul	r24, r19
    1682:	a0 0d       	add	r26, r0
    1684:	61 1d       	adc	r22, r1
    1686:	22 1f       	adc	r18, r18
    1688:	74 9f       	mul	r23, r20
    168a:	33 27       	eor	r19, r19
    168c:	a0 0d       	add	r26, r0
    168e:	61 1d       	adc	r22, r1
    1690:	23 1f       	adc	r18, r19
    1692:	84 9f       	mul	r24, r20
    1694:	60 0d       	add	r22, r0
    1696:	21 1d       	adc	r18, r1
    1698:	82 2f       	mov	r24, r18
    169a:	76 2f       	mov	r23, r22
    169c:	6a 2f       	mov	r22, r26
    169e:	11 24       	eor	r1, r1
    16a0:	9f 57       	subi	r25, 0x7F	; 127
    16a2:	50 40       	sbci	r21, 0x00	; 0
    16a4:	8a f0       	brmi	.+34     	; 0x16c8 <__mulsf3_pse+0x84>
    16a6:	e1 f0       	breq	.+56     	; 0x16e0 <__mulsf3_pse+0x9c>
    16a8:	88 23       	and	r24, r24
    16aa:	4a f0       	brmi	.+18     	; 0x16be <__mulsf3_pse+0x7a>
    16ac:	ee 0f       	add	r30, r30
    16ae:	ff 1f       	adc	r31, r31
    16b0:	bb 1f       	adc	r27, r27
    16b2:	66 1f       	adc	r22, r22
    16b4:	77 1f       	adc	r23, r23
    16b6:	88 1f       	adc	r24, r24
    16b8:	91 50       	subi	r25, 0x01	; 1
    16ba:	50 40       	sbci	r21, 0x00	; 0
    16bc:	a9 f7       	brne	.-22     	; 0x16a8 <__mulsf3_pse+0x64>
    16be:	9e 3f       	cpi	r25, 0xFE	; 254
    16c0:	51 05       	cpc	r21, r1
    16c2:	70 f0       	brcs	.+28     	; 0x16e0 <__mulsf3_pse+0x9c>
    16c4:	82 ce       	rjmp	.-764    	; 0x13ca <__fp_inf>
    16c6:	f1 ce       	rjmp	.-542    	; 0x14aa <__fp_szero>
    16c8:	5f 3f       	cpi	r21, 0xFF	; 255
    16ca:	ec f3       	brlt	.-6      	; 0x16c6 <__mulsf3_pse+0x82>
    16cc:	98 3e       	cpi	r25, 0xE8	; 232
    16ce:	dc f3       	brlt	.-10     	; 0x16c6 <__mulsf3_pse+0x82>
    16d0:	86 95       	lsr	r24
    16d2:	77 95       	ror	r23
    16d4:	67 95       	ror	r22
    16d6:	b7 95       	ror	r27
    16d8:	f7 95       	ror	r31
    16da:	e7 95       	ror	r30
    16dc:	9f 5f       	subi	r25, 0xFF	; 255
    16de:	c1 f7       	brne	.-16     	; 0x16d0 <__mulsf3_pse+0x8c>
    16e0:	fe 2b       	or	r31, r30
    16e2:	88 0f       	add	r24, r24
    16e4:	91 1d       	adc	r25, r1
    16e6:	96 95       	lsr	r25
    16e8:	87 95       	ror	r24
    16ea:	97 f9       	bld	r25, 7
    16ec:	08 95       	ret

000016ee <pow>:
    16ee:	fa 01       	movw	r30, r20
    16f0:	ee 0f       	add	r30, r30
    16f2:	ff 1f       	adc	r31, r31
    16f4:	30 96       	adiw	r30, 0x00	; 0
    16f6:	21 05       	cpc	r18, r1
    16f8:	31 05       	cpc	r19, r1
    16fa:	99 f1       	breq	.+102    	; 0x1762 <pow+0x74>
    16fc:	61 15       	cp	r22, r1
    16fe:	71 05       	cpc	r23, r1
    1700:	61 f4       	brne	.+24     	; 0x171a <pow+0x2c>
    1702:	80 38       	cpi	r24, 0x80	; 128
    1704:	bf e3       	ldi	r27, 0x3F	; 63
    1706:	9b 07       	cpc	r25, r27
    1708:	49 f1       	breq	.+82     	; 0x175c <pow+0x6e>
    170a:	68 94       	set
    170c:	90 38       	cpi	r25, 0x80	; 128
    170e:	81 05       	cpc	r24, r1
    1710:	61 f0       	breq	.+24     	; 0x172a <pow+0x3c>
    1712:	80 38       	cpi	r24, 0x80	; 128
    1714:	bf ef       	ldi	r27, 0xFF	; 255
    1716:	9b 07       	cpc	r25, r27
    1718:	41 f0       	breq	.+16     	; 0x172a <pow+0x3c>
    171a:	99 23       	and	r25, r25
    171c:	42 f5       	brpl	.+80     	; 0x176e <pow+0x80>
    171e:	ff 3f       	cpi	r31, 0xFF	; 255
    1720:	e1 05       	cpc	r30, r1
    1722:	31 05       	cpc	r19, r1
    1724:	21 05       	cpc	r18, r1
    1726:	11 f1       	breq	.+68     	; 0x176c <pow+0x7e>
    1728:	e8 94       	clt
    172a:	08 94       	sec
    172c:	e7 95       	ror	r30
    172e:	d9 01       	movw	r26, r18
    1730:	aa 23       	and	r26, r26
    1732:	29 f4       	brne	.+10     	; 0x173e <pow+0x50>
    1734:	ab 2f       	mov	r26, r27
    1736:	be 2f       	mov	r27, r30
    1738:	f8 5f       	subi	r31, 0xF8	; 248
    173a:	d0 f3       	brcs	.-12     	; 0x1730 <pow+0x42>
    173c:	10 c0       	rjmp	.+32     	; 0x175e <pow+0x70>
    173e:	ff 5f       	subi	r31, 0xFF	; 255
    1740:	70 f4       	brcc	.+28     	; 0x175e <pow+0x70>
    1742:	a6 95       	lsr	r26
    1744:	e0 f7       	brcc	.-8      	; 0x173e <pow+0x50>
    1746:	f7 39       	cpi	r31, 0x97	; 151
    1748:	50 f0       	brcs	.+20     	; 0x175e <pow+0x70>
    174a:	19 f0       	breq	.+6      	; 0x1752 <pow+0x64>
    174c:	ff 3a       	cpi	r31, 0xAF	; 175
    174e:	38 f4       	brcc	.+14     	; 0x175e <pow+0x70>
    1750:	9f 77       	andi	r25, 0x7F	; 127
    1752:	9f 93       	push	r25
    1754:	0c d0       	rcall	.+24     	; 0x176e <pow+0x80>
    1756:	0f 90       	pop	r0
    1758:	07 fc       	sbrc	r0, 7
    175a:	90 58       	subi	r25, 0x80	; 128
    175c:	08 95       	ret
    175e:	3e f0       	brts	.+14     	; 0x176e <pow+0x80>
    1760:	3a ce       	rjmp	.-908    	; 0x13d6 <__fp_nan>
    1762:	60 e0       	ldi	r22, 0x00	; 0
    1764:	70 e0       	ldi	r23, 0x00	; 0
    1766:	80 e8       	ldi	r24, 0x80	; 128
    1768:	9f e3       	ldi	r25, 0x3F	; 63
    176a:	08 95       	ret
    176c:	4f e7       	ldi	r20, 0x7F	; 127
    176e:	9f 77       	andi	r25, 0x7F	; 127
    1770:	5f 93       	push	r21
    1772:	4f 93       	push	r20
    1774:	3f 93       	push	r19
    1776:	2f 93       	push	r18
    1778:	e4 de       	rcall	.-568    	; 0x1542 <log>
    177a:	2f 91       	pop	r18
    177c:	3f 91       	pop	r19
    177e:	4f 91       	pop	r20
    1780:	5f 91       	pop	r21
    1782:	52 df       	rcall	.-348    	; 0x1628 <__mulsf3>
    1784:	64 cd       	rjmp	.-1336   	; 0x124e <exp>

00001786 <__fp_mpack>:
    1786:	9f 3f       	cpi	r25, 0xFF	; 255
    1788:	31 f0       	breq	.+12     	; 0x1796 <__fp_mpack_finite+0xc>

0000178a <__fp_mpack_finite>:
    178a:	91 50       	subi	r25, 0x01	; 1
    178c:	20 f4       	brcc	.+8      	; 0x1796 <__fp_mpack_finite+0xc>
    178e:	87 95       	ror	r24
    1790:	77 95       	ror	r23
    1792:	67 95       	ror	r22
    1794:	b7 95       	ror	r27
    1796:	88 0f       	add	r24, r24
    1798:	91 1d       	adc	r25, r1
    179a:	96 95       	lsr	r25
    179c:	87 95       	ror	r24
    179e:	97 f9       	bld	r25, 7
    17a0:	08 95       	ret

000017a2 <__udivmodhi4>:
    17a2:	aa 1b       	sub	r26, r26
    17a4:	bb 1b       	sub	r27, r27
    17a6:	51 e1       	ldi	r21, 0x11	; 17
    17a8:	07 c0       	rjmp	.+14     	; 0x17b8 <__udivmodhi4_ep>

000017aa <__udivmodhi4_loop>:
    17aa:	aa 1f       	adc	r26, r26
    17ac:	bb 1f       	adc	r27, r27
    17ae:	a6 17       	cp	r26, r22
    17b0:	b7 07       	cpc	r27, r23
    17b2:	10 f0       	brcs	.+4      	; 0x17b8 <__udivmodhi4_ep>
    17b4:	a6 1b       	sub	r26, r22
    17b6:	b7 0b       	sbc	r27, r23

000017b8 <__udivmodhi4_ep>:
    17b8:	88 1f       	adc	r24, r24
    17ba:	99 1f       	adc	r25, r25
    17bc:	5a 95       	dec	r21
    17be:	a9 f7       	brne	.-22     	; 0x17aa <__udivmodhi4_loop>
    17c0:	80 95       	com	r24
    17c2:	90 95       	com	r25
    17c4:	bc 01       	movw	r22, r24
    17c6:	cd 01       	movw	r24, r26
    17c8:	08 95       	ret

000017ca <sprintf>:
    17ca:	0f 93       	push	r16
    17cc:	1f 93       	push	r17
    17ce:	cf 93       	push	r28
    17d0:	df 93       	push	r29
    17d2:	cd b7       	in	r28, 0x3d	; 61
    17d4:	de b7       	in	r29, 0x3e	; 62
    17d6:	2e 97       	sbiw	r28, 0x0e	; 14
    17d8:	0f b6       	in	r0, 0x3f	; 63
    17da:	f8 94       	cli
    17dc:	de bf       	out	0x3e, r29	; 62
    17de:	0f be       	out	0x3f, r0	; 63
    17e0:	cd bf       	out	0x3d, r28	; 61
    17e2:	0d 89       	ldd	r16, Y+21	; 0x15
    17e4:	1e 89       	ldd	r17, Y+22	; 0x16
    17e6:	86 e0       	ldi	r24, 0x06	; 6
    17e8:	8c 83       	std	Y+4, r24	; 0x04
    17ea:	1a 83       	std	Y+2, r17	; 0x02
    17ec:	09 83       	std	Y+1, r16	; 0x01
    17ee:	8f ef       	ldi	r24, 0xFF	; 255
    17f0:	9f e7       	ldi	r25, 0x7F	; 127
    17f2:	9e 83       	std	Y+6, r25	; 0x06
    17f4:	8d 83       	std	Y+5, r24	; 0x05
    17f6:	ae 01       	movw	r20, r28
    17f8:	47 5e       	subi	r20, 0xE7	; 231
    17fa:	5f 4f       	sbci	r21, 0xFF	; 255
    17fc:	6f 89       	ldd	r22, Y+23	; 0x17
    17fe:	78 8d       	ldd	r23, Y+24	; 0x18
    1800:	ce 01       	movw	r24, r28
    1802:	01 96       	adiw	r24, 0x01	; 1
    1804:	10 d0       	rcall	.+32     	; 0x1826 <vfprintf>
    1806:	ef 81       	ldd	r30, Y+7	; 0x07
    1808:	f8 85       	ldd	r31, Y+8	; 0x08
    180a:	e0 0f       	add	r30, r16
    180c:	f1 1f       	adc	r31, r17
    180e:	10 82       	st	Z, r1
    1810:	2e 96       	adiw	r28, 0x0e	; 14
    1812:	0f b6       	in	r0, 0x3f	; 63
    1814:	f8 94       	cli
    1816:	de bf       	out	0x3e, r29	; 62
    1818:	0f be       	out	0x3f, r0	; 63
    181a:	cd bf       	out	0x3d, r28	; 61
    181c:	df 91       	pop	r29
    181e:	cf 91       	pop	r28
    1820:	1f 91       	pop	r17
    1822:	0f 91       	pop	r16
    1824:	08 95       	ret

00001826 <vfprintf>:
    1826:	2f 92       	push	r2
    1828:	3f 92       	push	r3
    182a:	4f 92       	push	r4
    182c:	5f 92       	push	r5
    182e:	6f 92       	push	r6
    1830:	7f 92       	push	r7
    1832:	8f 92       	push	r8
    1834:	9f 92       	push	r9
    1836:	af 92       	push	r10
    1838:	bf 92       	push	r11
    183a:	cf 92       	push	r12
    183c:	df 92       	push	r13
    183e:	ef 92       	push	r14
    1840:	ff 92       	push	r15
    1842:	0f 93       	push	r16
    1844:	1f 93       	push	r17
    1846:	cf 93       	push	r28
    1848:	df 93       	push	r29
    184a:	cd b7       	in	r28, 0x3d	; 61
    184c:	de b7       	in	r29, 0x3e	; 62
    184e:	2c 97       	sbiw	r28, 0x0c	; 12
    1850:	0f b6       	in	r0, 0x3f	; 63
    1852:	f8 94       	cli
    1854:	de bf       	out	0x3e, r29	; 62
    1856:	0f be       	out	0x3f, r0	; 63
    1858:	cd bf       	out	0x3d, r28	; 61
    185a:	7c 01       	movw	r14, r24
    185c:	6b 01       	movw	r12, r22
    185e:	8a 01       	movw	r16, r20
    1860:	fc 01       	movw	r30, r24
    1862:	17 82       	std	Z+7, r1	; 0x07
    1864:	16 82       	std	Z+6, r1	; 0x06
    1866:	83 81       	ldd	r24, Z+3	; 0x03
    1868:	81 ff       	sbrs	r24, 1
    186a:	b0 c1       	rjmp	.+864    	; 0x1bcc <vfprintf+0x3a6>
    186c:	ce 01       	movw	r24, r28
    186e:	01 96       	adiw	r24, 0x01	; 1
    1870:	4c 01       	movw	r8, r24
    1872:	f7 01       	movw	r30, r14
    1874:	93 81       	ldd	r25, Z+3	; 0x03
    1876:	f6 01       	movw	r30, r12
    1878:	93 fd       	sbrc	r25, 3
    187a:	85 91       	lpm	r24, Z+
    187c:	93 ff       	sbrs	r25, 3
    187e:	81 91       	ld	r24, Z+
    1880:	6f 01       	movw	r12, r30
    1882:	88 23       	and	r24, r24
    1884:	09 f4       	brne	.+2      	; 0x1888 <vfprintf+0x62>
    1886:	9e c1       	rjmp	.+828    	; 0x1bc4 <vfprintf+0x39e>
    1888:	85 32       	cpi	r24, 0x25	; 37
    188a:	39 f4       	brne	.+14     	; 0x189a <vfprintf+0x74>
    188c:	93 fd       	sbrc	r25, 3
    188e:	85 91       	lpm	r24, Z+
    1890:	93 ff       	sbrs	r25, 3
    1892:	81 91       	ld	r24, Z+
    1894:	6f 01       	movw	r12, r30
    1896:	85 32       	cpi	r24, 0x25	; 37
    1898:	21 f4       	brne	.+8      	; 0x18a2 <vfprintf+0x7c>
    189a:	b7 01       	movw	r22, r14
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	ed d1       	rcall	.+986    	; 0x1c7a <fputc>
    18a0:	e8 cf       	rjmp	.-48     	; 0x1872 <vfprintf+0x4c>
    18a2:	51 2c       	mov	r5, r1
    18a4:	31 2c       	mov	r3, r1
    18a6:	20 e0       	ldi	r18, 0x00	; 0
    18a8:	20 32       	cpi	r18, 0x20	; 32
    18aa:	a0 f4       	brcc	.+40     	; 0x18d4 <vfprintf+0xae>
    18ac:	8b 32       	cpi	r24, 0x2B	; 43
    18ae:	69 f0       	breq	.+26     	; 0x18ca <vfprintf+0xa4>
    18b0:	30 f4       	brcc	.+12     	; 0x18be <vfprintf+0x98>
    18b2:	80 32       	cpi	r24, 0x20	; 32
    18b4:	59 f0       	breq	.+22     	; 0x18cc <vfprintf+0xa6>
    18b6:	83 32       	cpi	r24, 0x23	; 35
    18b8:	69 f4       	brne	.+26     	; 0x18d4 <vfprintf+0xae>
    18ba:	20 61       	ori	r18, 0x10	; 16
    18bc:	2c c0       	rjmp	.+88     	; 0x1916 <vfprintf+0xf0>
    18be:	8d 32       	cpi	r24, 0x2D	; 45
    18c0:	39 f0       	breq	.+14     	; 0x18d0 <vfprintf+0xaa>
    18c2:	80 33       	cpi	r24, 0x30	; 48
    18c4:	39 f4       	brne	.+14     	; 0x18d4 <vfprintf+0xae>
    18c6:	21 60       	ori	r18, 0x01	; 1
    18c8:	26 c0       	rjmp	.+76     	; 0x1916 <vfprintf+0xf0>
    18ca:	22 60       	ori	r18, 0x02	; 2
    18cc:	24 60       	ori	r18, 0x04	; 4
    18ce:	23 c0       	rjmp	.+70     	; 0x1916 <vfprintf+0xf0>
    18d0:	28 60       	ori	r18, 0x08	; 8
    18d2:	21 c0       	rjmp	.+66     	; 0x1916 <vfprintf+0xf0>
    18d4:	27 fd       	sbrc	r18, 7
    18d6:	27 c0       	rjmp	.+78     	; 0x1926 <vfprintf+0x100>
    18d8:	30 ed       	ldi	r19, 0xD0	; 208
    18da:	38 0f       	add	r19, r24
    18dc:	3a 30       	cpi	r19, 0x0A	; 10
    18de:	78 f4       	brcc	.+30     	; 0x18fe <vfprintf+0xd8>
    18e0:	26 ff       	sbrs	r18, 6
    18e2:	06 c0       	rjmp	.+12     	; 0x18f0 <vfprintf+0xca>
    18e4:	fa e0       	ldi	r31, 0x0A	; 10
    18e6:	5f 9e       	mul	r5, r31
    18e8:	30 0d       	add	r19, r0
    18ea:	11 24       	eor	r1, r1
    18ec:	53 2e       	mov	r5, r19
    18ee:	13 c0       	rjmp	.+38     	; 0x1916 <vfprintf+0xf0>
    18f0:	8a e0       	ldi	r24, 0x0A	; 10
    18f2:	38 9e       	mul	r3, r24
    18f4:	30 0d       	add	r19, r0
    18f6:	11 24       	eor	r1, r1
    18f8:	33 2e       	mov	r3, r19
    18fa:	20 62       	ori	r18, 0x20	; 32
    18fc:	0c c0       	rjmp	.+24     	; 0x1916 <vfprintf+0xf0>
    18fe:	8e 32       	cpi	r24, 0x2E	; 46
    1900:	21 f4       	brne	.+8      	; 0x190a <vfprintf+0xe4>
    1902:	26 fd       	sbrc	r18, 6
    1904:	5f c1       	rjmp	.+702    	; 0x1bc4 <vfprintf+0x39e>
    1906:	20 64       	ori	r18, 0x40	; 64
    1908:	06 c0       	rjmp	.+12     	; 0x1916 <vfprintf+0xf0>
    190a:	8c 36       	cpi	r24, 0x6C	; 108
    190c:	11 f4       	brne	.+4      	; 0x1912 <vfprintf+0xec>
    190e:	20 68       	ori	r18, 0x80	; 128
    1910:	02 c0       	rjmp	.+4      	; 0x1916 <vfprintf+0xf0>
    1912:	88 36       	cpi	r24, 0x68	; 104
    1914:	41 f4       	brne	.+16     	; 0x1926 <vfprintf+0x100>
    1916:	f6 01       	movw	r30, r12
    1918:	93 fd       	sbrc	r25, 3
    191a:	85 91       	lpm	r24, Z+
    191c:	93 ff       	sbrs	r25, 3
    191e:	81 91       	ld	r24, Z+
    1920:	6f 01       	movw	r12, r30
    1922:	81 11       	cpse	r24, r1
    1924:	c1 cf       	rjmp	.-126    	; 0x18a8 <vfprintf+0x82>
    1926:	98 2f       	mov	r25, r24
    1928:	9f 7d       	andi	r25, 0xDF	; 223
    192a:	95 54       	subi	r25, 0x45	; 69
    192c:	93 30       	cpi	r25, 0x03	; 3
    192e:	28 f4       	brcc	.+10     	; 0x193a <vfprintf+0x114>
    1930:	0c 5f       	subi	r16, 0xFC	; 252
    1932:	1f 4f       	sbci	r17, 0xFF	; 255
    1934:	ff e3       	ldi	r31, 0x3F	; 63
    1936:	f9 83       	std	Y+1, r31	; 0x01
    1938:	0d c0       	rjmp	.+26     	; 0x1954 <vfprintf+0x12e>
    193a:	83 36       	cpi	r24, 0x63	; 99
    193c:	31 f0       	breq	.+12     	; 0x194a <vfprintf+0x124>
    193e:	83 37       	cpi	r24, 0x73	; 115
    1940:	71 f0       	breq	.+28     	; 0x195e <vfprintf+0x138>
    1942:	83 35       	cpi	r24, 0x53	; 83
    1944:	09 f0       	breq	.+2      	; 0x1948 <vfprintf+0x122>
    1946:	57 c0       	rjmp	.+174    	; 0x19f6 <vfprintf+0x1d0>
    1948:	21 c0       	rjmp	.+66     	; 0x198c <vfprintf+0x166>
    194a:	f8 01       	movw	r30, r16
    194c:	80 81       	ld	r24, Z
    194e:	89 83       	std	Y+1, r24	; 0x01
    1950:	0e 5f       	subi	r16, 0xFE	; 254
    1952:	1f 4f       	sbci	r17, 0xFF	; 255
    1954:	44 24       	eor	r4, r4
    1956:	43 94       	inc	r4
    1958:	51 2c       	mov	r5, r1
    195a:	54 01       	movw	r10, r8
    195c:	14 c0       	rjmp	.+40     	; 0x1986 <vfprintf+0x160>
    195e:	38 01       	movw	r6, r16
    1960:	f2 e0       	ldi	r31, 0x02	; 2
    1962:	6f 0e       	add	r6, r31
    1964:	71 1c       	adc	r7, r1
    1966:	f8 01       	movw	r30, r16
    1968:	a0 80       	ld	r10, Z
    196a:	b1 80       	ldd	r11, Z+1	; 0x01
    196c:	26 ff       	sbrs	r18, 6
    196e:	03 c0       	rjmp	.+6      	; 0x1976 <vfprintf+0x150>
    1970:	65 2d       	mov	r22, r5
    1972:	70 e0       	ldi	r23, 0x00	; 0
    1974:	02 c0       	rjmp	.+4      	; 0x197a <vfprintf+0x154>
    1976:	6f ef       	ldi	r22, 0xFF	; 255
    1978:	7f ef       	ldi	r23, 0xFF	; 255
    197a:	c5 01       	movw	r24, r10
    197c:	2c 87       	std	Y+12, r18	; 0x0c
    197e:	72 d1       	rcall	.+740    	; 0x1c64 <strnlen>
    1980:	2c 01       	movw	r4, r24
    1982:	83 01       	movw	r16, r6
    1984:	2c 85       	ldd	r18, Y+12	; 0x0c
    1986:	2f 77       	andi	r18, 0x7F	; 127
    1988:	22 2e       	mov	r2, r18
    198a:	16 c0       	rjmp	.+44     	; 0x19b8 <vfprintf+0x192>
    198c:	38 01       	movw	r6, r16
    198e:	f2 e0       	ldi	r31, 0x02	; 2
    1990:	6f 0e       	add	r6, r31
    1992:	71 1c       	adc	r7, r1
    1994:	f8 01       	movw	r30, r16
    1996:	a0 80       	ld	r10, Z
    1998:	b1 80       	ldd	r11, Z+1	; 0x01
    199a:	26 ff       	sbrs	r18, 6
    199c:	03 c0       	rjmp	.+6      	; 0x19a4 <vfprintf+0x17e>
    199e:	65 2d       	mov	r22, r5
    19a0:	70 e0       	ldi	r23, 0x00	; 0
    19a2:	02 c0       	rjmp	.+4      	; 0x19a8 <vfprintf+0x182>
    19a4:	6f ef       	ldi	r22, 0xFF	; 255
    19a6:	7f ef       	ldi	r23, 0xFF	; 255
    19a8:	c5 01       	movw	r24, r10
    19aa:	2c 87       	std	Y+12, r18	; 0x0c
    19ac:	50 d1       	rcall	.+672    	; 0x1c4e <strnlen_P>
    19ae:	2c 01       	movw	r4, r24
    19b0:	2c 85       	ldd	r18, Y+12	; 0x0c
    19b2:	20 68       	ori	r18, 0x80	; 128
    19b4:	22 2e       	mov	r2, r18
    19b6:	83 01       	movw	r16, r6
    19b8:	23 fc       	sbrc	r2, 3
    19ba:	19 c0       	rjmp	.+50     	; 0x19ee <vfprintf+0x1c8>
    19bc:	83 2d       	mov	r24, r3
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	48 16       	cp	r4, r24
    19c2:	59 06       	cpc	r5, r25
    19c4:	a0 f4       	brcc	.+40     	; 0x19ee <vfprintf+0x1c8>
    19c6:	b7 01       	movw	r22, r14
    19c8:	80 e2       	ldi	r24, 0x20	; 32
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	56 d1       	rcall	.+684    	; 0x1c7a <fputc>
    19ce:	3a 94       	dec	r3
    19d0:	f5 cf       	rjmp	.-22     	; 0x19bc <vfprintf+0x196>
    19d2:	f5 01       	movw	r30, r10
    19d4:	27 fc       	sbrc	r2, 7
    19d6:	85 91       	lpm	r24, Z+
    19d8:	27 fe       	sbrs	r2, 7
    19da:	81 91       	ld	r24, Z+
    19dc:	5f 01       	movw	r10, r30
    19de:	b7 01       	movw	r22, r14
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	4b d1       	rcall	.+662    	; 0x1c7a <fputc>
    19e4:	31 10       	cpse	r3, r1
    19e6:	3a 94       	dec	r3
    19e8:	f1 e0       	ldi	r31, 0x01	; 1
    19ea:	4f 1a       	sub	r4, r31
    19ec:	51 08       	sbc	r5, r1
    19ee:	41 14       	cp	r4, r1
    19f0:	51 04       	cpc	r5, r1
    19f2:	79 f7       	brne	.-34     	; 0x19d2 <vfprintf+0x1ac>
    19f4:	de c0       	rjmp	.+444    	; 0x1bb2 <vfprintf+0x38c>
    19f6:	84 36       	cpi	r24, 0x64	; 100
    19f8:	11 f0       	breq	.+4      	; 0x19fe <vfprintf+0x1d8>
    19fa:	89 36       	cpi	r24, 0x69	; 105
    19fc:	31 f5       	brne	.+76     	; 0x1a4a <vfprintf+0x224>
    19fe:	f8 01       	movw	r30, r16
    1a00:	27 ff       	sbrs	r18, 7
    1a02:	07 c0       	rjmp	.+14     	; 0x1a12 <vfprintf+0x1ec>
    1a04:	60 81       	ld	r22, Z
    1a06:	71 81       	ldd	r23, Z+1	; 0x01
    1a08:	82 81       	ldd	r24, Z+2	; 0x02
    1a0a:	93 81       	ldd	r25, Z+3	; 0x03
    1a0c:	0c 5f       	subi	r16, 0xFC	; 252
    1a0e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a10:	08 c0       	rjmp	.+16     	; 0x1a22 <vfprintf+0x1fc>
    1a12:	60 81       	ld	r22, Z
    1a14:	71 81       	ldd	r23, Z+1	; 0x01
    1a16:	88 27       	eor	r24, r24
    1a18:	77 fd       	sbrc	r23, 7
    1a1a:	80 95       	com	r24
    1a1c:	98 2f       	mov	r25, r24
    1a1e:	0e 5f       	subi	r16, 0xFE	; 254
    1a20:	1f 4f       	sbci	r17, 0xFF	; 255
    1a22:	2f 76       	andi	r18, 0x6F	; 111
    1a24:	b2 2e       	mov	r11, r18
    1a26:	97 ff       	sbrs	r25, 7
    1a28:	09 c0       	rjmp	.+18     	; 0x1a3c <vfprintf+0x216>
    1a2a:	90 95       	com	r25
    1a2c:	80 95       	com	r24
    1a2e:	70 95       	com	r23
    1a30:	61 95       	neg	r22
    1a32:	7f 4f       	sbci	r23, 0xFF	; 255
    1a34:	8f 4f       	sbci	r24, 0xFF	; 255
    1a36:	9f 4f       	sbci	r25, 0xFF	; 255
    1a38:	20 68       	ori	r18, 0x80	; 128
    1a3a:	b2 2e       	mov	r11, r18
    1a3c:	2a e0       	ldi	r18, 0x0A	; 10
    1a3e:	30 e0       	ldi	r19, 0x00	; 0
    1a40:	a4 01       	movw	r20, r8
    1a42:	4d d1       	rcall	.+666    	; 0x1cde <__ultoa_invert>
    1a44:	a8 2e       	mov	r10, r24
    1a46:	a8 18       	sub	r10, r8
    1a48:	43 c0       	rjmp	.+134    	; 0x1ad0 <vfprintf+0x2aa>
    1a4a:	85 37       	cpi	r24, 0x75	; 117
    1a4c:	29 f4       	brne	.+10     	; 0x1a58 <vfprintf+0x232>
    1a4e:	2f 7e       	andi	r18, 0xEF	; 239
    1a50:	b2 2e       	mov	r11, r18
    1a52:	2a e0       	ldi	r18, 0x0A	; 10
    1a54:	30 e0       	ldi	r19, 0x00	; 0
    1a56:	25 c0       	rjmp	.+74     	; 0x1aa2 <vfprintf+0x27c>
    1a58:	f2 2f       	mov	r31, r18
    1a5a:	f9 7f       	andi	r31, 0xF9	; 249
    1a5c:	bf 2e       	mov	r11, r31
    1a5e:	8f 36       	cpi	r24, 0x6F	; 111
    1a60:	c1 f0       	breq	.+48     	; 0x1a92 <vfprintf+0x26c>
    1a62:	18 f4       	brcc	.+6      	; 0x1a6a <vfprintf+0x244>
    1a64:	88 35       	cpi	r24, 0x58	; 88
    1a66:	79 f0       	breq	.+30     	; 0x1a86 <vfprintf+0x260>
    1a68:	ad c0       	rjmp	.+346    	; 0x1bc4 <vfprintf+0x39e>
    1a6a:	80 37       	cpi	r24, 0x70	; 112
    1a6c:	19 f0       	breq	.+6      	; 0x1a74 <vfprintf+0x24e>
    1a6e:	88 37       	cpi	r24, 0x78	; 120
    1a70:	21 f0       	breq	.+8      	; 0x1a7a <vfprintf+0x254>
    1a72:	a8 c0       	rjmp	.+336    	; 0x1bc4 <vfprintf+0x39e>
    1a74:	2f 2f       	mov	r18, r31
    1a76:	20 61       	ori	r18, 0x10	; 16
    1a78:	b2 2e       	mov	r11, r18
    1a7a:	b4 fe       	sbrs	r11, 4
    1a7c:	0d c0       	rjmp	.+26     	; 0x1a98 <vfprintf+0x272>
    1a7e:	8b 2d       	mov	r24, r11
    1a80:	84 60       	ori	r24, 0x04	; 4
    1a82:	b8 2e       	mov	r11, r24
    1a84:	09 c0       	rjmp	.+18     	; 0x1a98 <vfprintf+0x272>
    1a86:	24 ff       	sbrs	r18, 4
    1a88:	0a c0       	rjmp	.+20     	; 0x1a9e <vfprintf+0x278>
    1a8a:	9f 2f       	mov	r25, r31
    1a8c:	96 60       	ori	r25, 0x06	; 6
    1a8e:	b9 2e       	mov	r11, r25
    1a90:	06 c0       	rjmp	.+12     	; 0x1a9e <vfprintf+0x278>
    1a92:	28 e0       	ldi	r18, 0x08	; 8
    1a94:	30 e0       	ldi	r19, 0x00	; 0
    1a96:	05 c0       	rjmp	.+10     	; 0x1aa2 <vfprintf+0x27c>
    1a98:	20 e1       	ldi	r18, 0x10	; 16
    1a9a:	30 e0       	ldi	r19, 0x00	; 0
    1a9c:	02 c0       	rjmp	.+4      	; 0x1aa2 <vfprintf+0x27c>
    1a9e:	20 e1       	ldi	r18, 0x10	; 16
    1aa0:	32 e0       	ldi	r19, 0x02	; 2
    1aa2:	f8 01       	movw	r30, r16
    1aa4:	b7 fe       	sbrs	r11, 7
    1aa6:	07 c0       	rjmp	.+14     	; 0x1ab6 <vfprintf+0x290>
    1aa8:	60 81       	ld	r22, Z
    1aaa:	71 81       	ldd	r23, Z+1	; 0x01
    1aac:	82 81       	ldd	r24, Z+2	; 0x02
    1aae:	93 81       	ldd	r25, Z+3	; 0x03
    1ab0:	0c 5f       	subi	r16, 0xFC	; 252
    1ab2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ab4:	06 c0       	rjmp	.+12     	; 0x1ac2 <vfprintf+0x29c>
    1ab6:	60 81       	ld	r22, Z
    1ab8:	71 81       	ldd	r23, Z+1	; 0x01
    1aba:	80 e0       	ldi	r24, 0x00	; 0
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 5f       	subi	r16, 0xFE	; 254
    1ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac2:	a4 01       	movw	r20, r8
    1ac4:	0c d1       	rcall	.+536    	; 0x1cde <__ultoa_invert>
    1ac6:	a8 2e       	mov	r10, r24
    1ac8:	a8 18       	sub	r10, r8
    1aca:	fb 2d       	mov	r31, r11
    1acc:	ff 77       	andi	r31, 0x7F	; 127
    1ace:	bf 2e       	mov	r11, r31
    1ad0:	b6 fe       	sbrs	r11, 6
    1ad2:	0b c0       	rjmp	.+22     	; 0x1aea <vfprintf+0x2c4>
    1ad4:	2b 2d       	mov	r18, r11
    1ad6:	2e 7f       	andi	r18, 0xFE	; 254
    1ad8:	a5 14       	cp	r10, r5
    1ada:	50 f4       	brcc	.+20     	; 0x1af0 <vfprintf+0x2ca>
    1adc:	b4 fe       	sbrs	r11, 4
    1ade:	0a c0       	rjmp	.+20     	; 0x1af4 <vfprintf+0x2ce>
    1ae0:	b2 fc       	sbrc	r11, 2
    1ae2:	08 c0       	rjmp	.+16     	; 0x1af4 <vfprintf+0x2ce>
    1ae4:	2b 2d       	mov	r18, r11
    1ae6:	2e 7e       	andi	r18, 0xEE	; 238
    1ae8:	05 c0       	rjmp	.+10     	; 0x1af4 <vfprintf+0x2ce>
    1aea:	7a 2c       	mov	r7, r10
    1aec:	2b 2d       	mov	r18, r11
    1aee:	03 c0       	rjmp	.+6      	; 0x1af6 <vfprintf+0x2d0>
    1af0:	7a 2c       	mov	r7, r10
    1af2:	01 c0       	rjmp	.+2      	; 0x1af6 <vfprintf+0x2d0>
    1af4:	75 2c       	mov	r7, r5
    1af6:	24 ff       	sbrs	r18, 4
    1af8:	0d c0       	rjmp	.+26     	; 0x1b14 <vfprintf+0x2ee>
    1afa:	fe 01       	movw	r30, r28
    1afc:	ea 0d       	add	r30, r10
    1afe:	f1 1d       	adc	r31, r1
    1b00:	80 81       	ld	r24, Z
    1b02:	80 33       	cpi	r24, 0x30	; 48
    1b04:	11 f4       	brne	.+4      	; 0x1b0a <vfprintf+0x2e4>
    1b06:	29 7e       	andi	r18, 0xE9	; 233
    1b08:	09 c0       	rjmp	.+18     	; 0x1b1c <vfprintf+0x2f6>
    1b0a:	22 ff       	sbrs	r18, 2
    1b0c:	06 c0       	rjmp	.+12     	; 0x1b1a <vfprintf+0x2f4>
    1b0e:	73 94       	inc	r7
    1b10:	73 94       	inc	r7
    1b12:	04 c0       	rjmp	.+8      	; 0x1b1c <vfprintf+0x2f6>
    1b14:	82 2f       	mov	r24, r18
    1b16:	86 78       	andi	r24, 0x86	; 134
    1b18:	09 f0       	breq	.+2      	; 0x1b1c <vfprintf+0x2f6>
    1b1a:	73 94       	inc	r7
    1b1c:	23 fd       	sbrc	r18, 3
    1b1e:	12 c0       	rjmp	.+36     	; 0x1b44 <vfprintf+0x31e>
    1b20:	20 ff       	sbrs	r18, 0
    1b22:	06 c0       	rjmp	.+12     	; 0x1b30 <vfprintf+0x30a>
    1b24:	5a 2c       	mov	r5, r10
    1b26:	73 14       	cp	r7, r3
    1b28:	18 f4       	brcc	.+6      	; 0x1b30 <vfprintf+0x30a>
    1b2a:	53 0c       	add	r5, r3
    1b2c:	57 18       	sub	r5, r7
    1b2e:	73 2c       	mov	r7, r3
    1b30:	73 14       	cp	r7, r3
    1b32:	60 f4       	brcc	.+24     	; 0x1b4c <vfprintf+0x326>
    1b34:	b7 01       	movw	r22, r14
    1b36:	80 e2       	ldi	r24, 0x20	; 32
    1b38:	90 e0       	ldi	r25, 0x00	; 0
    1b3a:	2c 87       	std	Y+12, r18	; 0x0c
    1b3c:	9e d0       	rcall	.+316    	; 0x1c7a <fputc>
    1b3e:	73 94       	inc	r7
    1b40:	2c 85       	ldd	r18, Y+12	; 0x0c
    1b42:	f6 cf       	rjmp	.-20     	; 0x1b30 <vfprintf+0x30a>
    1b44:	73 14       	cp	r7, r3
    1b46:	10 f4       	brcc	.+4      	; 0x1b4c <vfprintf+0x326>
    1b48:	37 18       	sub	r3, r7
    1b4a:	01 c0       	rjmp	.+2      	; 0x1b4e <vfprintf+0x328>
    1b4c:	31 2c       	mov	r3, r1
    1b4e:	24 ff       	sbrs	r18, 4
    1b50:	11 c0       	rjmp	.+34     	; 0x1b74 <vfprintf+0x34e>
    1b52:	b7 01       	movw	r22, r14
    1b54:	80 e3       	ldi	r24, 0x30	; 48
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	2c 87       	std	Y+12, r18	; 0x0c
    1b5a:	8f d0       	rcall	.+286    	; 0x1c7a <fputc>
    1b5c:	2c 85       	ldd	r18, Y+12	; 0x0c
    1b5e:	22 ff       	sbrs	r18, 2
    1b60:	16 c0       	rjmp	.+44     	; 0x1b8e <vfprintf+0x368>
    1b62:	21 ff       	sbrs	r18, 1
    1b64:	03 c0       	rjmp	.+6      	; 0x1b6c <vfprintf+0x346>
    1b66:	88 e5       	ldi	r24, 0x58	; 88
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	02 c0       	rjmp	.+4      	; 0x1b70 <vfprintf+0x34a>
    1b6c:	88 e7       	ldi	r24, 0x78	; 120
    1b6e:	90 e0       	ldi	r25, 0x00	; 0
    1b70:	b7 01       	movw	r22, r14
    1b72:	0c c0       	rjmp	.+24     	; 0x1b8c <vfprintf+0x366>
    1b74:	82 2f       	mov	r24, r18
    1b76:	86 78       	andi	r24, 0x86	; 134
    1b78:	51 f0       	breq	.+20     	; 0x1b8e <vfprintf+0x368>
    1b7a:	21 fd       	sbrc	r18, 1
    1b7c:	02 c0       	rjmp	.+4      	; 0x1b82 <vfprintf+0x35c>
    1b7e:	80 e2       	ldi	r24, 0x20	; 32
    1b80:	01 c0       	rjmp	.+2      	; 0x1b84 <vfprintf+0x35e>
    1b82:	8b e2       	ldi	r24, 0x2B	; 43
    1b84:	27 fd       	sbrc	r18, 7
    1b86:	8d e2       	ldi	r24, 0x2D	; 45
    1b88:	b7 01       	movw	r22, r14
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	76 d0       	rcall	.+236    	; 0x1c7a <fputc>
    1b8e:	a5 14       	cp	r10, r5
    1b90:	30 f4       	brcc	.+12     	; 0x1b9e <vfprintf+0x378>
    1b92:	b7 01       	movw	r22, r14
    1b94:	80 e3       	ldi	r24, 0x30	; 48
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	70 d0       	rcall	.+224    	; 0x1c7a <fputc>
    1b9a:	5a 94       	dec	r5
    1b9c:	f8 cf       	rjmp	.-16     	; 0x1b8e <vfprintf+0x368>
    1b9e:	aa 94       	dec	r10
    1ba0:	f4 01       	movw	r30, r8
    1ba2:	ea 0d       	add	r30, r10
    1ba4:	f1 1d       	adc	r31, r1
    1ba6:	80 81       	ld	r24, Z
    1ba8:	b7 01       	movw	r22, r14
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	66 d0       	rcall	.+204    	; 0x1c7a <fputc>
    1bae:	a1 10       	cpse	r10, r1
    1bb0:	f6 cf       	rjmp	.-20     	; 0x1b9e <vfprintf+0x378>
    1bb2:	33 20       	and	r3, r3
    1bb4:	09 f4       	brne	.+2      	; 0x1bb8 <vfprintf+0x392>
    1bb6:	5d ce       	rjmp	.-838    	; 0x1872 <vfprintf+0x4c>
    1bb8:	b7 01       	movw	r22, r14
    1bba:	80 e2       	ldi	r24, 0x20	; 32
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	5d d0       	rcall	.+186    	; 0x1c7a <fputc>
    1bc0:	3a 94       	dec	r3
    1bc2:	f7 cf       	rjmp	.-18     	; 0x1bb2 <vfprintf+0x38c>
    1bc4:	f7 01       	movw	r30, r14
    1bc6:	86 81       	ldd	r24, Z+6	; 0x06
    1bc8:	97 81       	ldd	r25, Z+7	; 0x07
    1bca:	02 c0       	rjmp	.+4      	; 0x1bd0 <vfprintf+0x3aa>
    1bcc:	8f ef       	ldi	r24, 0xFF	; 255
    1bce:	9f ef       	ldi	r25, 0xFF	; 255
    1bd0:	2c 96       	adiw	r28, 0x0c	; 12
    1bd2:	0f b6       	in	r0, 0x3f	; 63
    1bd4:	f8 94       	cli
    1bd6:	de bf       	out	0x3e, r29	; 62
    1bd8:	0f be       	out	0x3f, r0	; 63
    1bda:	cd bf       	out	0x3d, r28	; 61
    1bdc:	df 91       	pop	r29
    1bde:	cf 91       	pop	r28
    1be0:	1f 91       	pop	r17
    1be2:	0f 91       	pop	r16
    1be4:	ff 90       	pop	r15
    1be6:	ef 90       	pop	r14
    1be8:	df 90       	pop	r13
    1bea:	cf 90       	pop	r12
    1bec:	bf 90       	pop	r11
    1bee:	af 90       	pop	r10
    1bf0:	9f 90       	pop	r9
    1bf2:	8f 90       	pop	r8
    1bf4:	7f 90       	pop	r7
    1bf6:	6f 90       	pop	r6
    1bf8:	5f 90       	pop	r5
    1bfa:	4f 90       	pop	r4
    1bfc:	3f 90       	pop	r3
    1bfe:	2f 90       	pop	r2
    1c00:	08 95       	ret

00001c02 <__eerd_block_m128>:
    1c02:	dc 01       	movw	r26, r24
    1c04:	cb 01       	movw	r24, r22

00001c06 <__eerd_blraw_m128>:
    1c06:	fc 01       	movw	r30, r24
    1c08:	e1 99       	sbic	0x1c, 1	; 28
    1c0a:	fe cf       	rjmp	.-4      	; 0x1c08 <__eerd_blraw_m128+0x2>
    1c0c:	06 c0       	rjmp	.+12     	; 0x1c1a <__eerd_blraw_m128+0x14>
    1c0e:	ff bb       	out	0x1f, r31	; 31
    1c10:	ee bb       	out	0x1e, r30	; 30
    1c12:	e0 9a       	sbi	0x1c, 0	; 28
    1c14:	31 96       	adiw	r30, 0x01	; 1
    1c16:	0d b2       	in	r0, 0x1d	; 29
    1c18:	0d 92       	st	X+, r0
    1c1a:	41 50       	subi	r20, 0x01	; 1
    1c1c:	50 40       	sbci	r21, 0x00	; 0
    1c1e:	b8 f7       	brcc	.-18     	; 0x1c0e <__eerd_blraw_m128+0x8>
    1c20:	08 95       	ret

00001c22 <__eewr_block_m128>:
    1c22:	dc 01       	movw	r26, r24
    1c24:	cb 01       	movw	r24, r22
    1c26:	02 c0       	rjmp	.+4      	; 0x1c2c <__eewr_block_m128+0xa>
    1c28:	2d 91       	ld	r18, X+
    1c2a:	05 d0       	rcall	.+10     	; 0x1c36 <__eewr_r18_m128>
    1c2c:	41 50       	subi	r20, 0x01	; 1
    1c2e:	50 40       	sbci	r21, 0x00	; 0
    1c30:	d8 f7       	brcc	.-10     	; 0x1c28 <__eewr_block_m128+0x6>
    1c32:	08 95       	ret

00001c34 <__eewr_byte_m128>:
    1c34:	26 2f       	mov	r18, r22

00001c36 <__eewr_r18_m128>:
    1c36:	e1 99       	sbic	0x1c, 1	; 28
    1c38:	fe cf       	rjmp	.-4      	; 0x1c36 <__eewr_r18_m128>
    1c3a:	9f bb       	out	0x1f, r25	; 31
    1c3c:	8e bb       	out	0x1e, r24	; 30
    1c3e:	2d bb       	out	0x1d, r18	; 29
    1c40:	0f b6       	in	r0, 0x3f	; 63
    1c42:	f8 94       	cli
    1c44:	e2 9a       	sbi	0x1c, 2	; 28
    1c46:	e1 9a       	sbi	0x1c, 1	; 28
    1c48:	0f be       	out	0x3f, r0	; 63
    1c4a:	01 96       	adiw	r24, 0x01	; 1
    1c4c:	08 95       	ret

00001c4e <strnlen_P>:
    1c4e:	fc 01       	movw	r30, r24
    1c50:	05 90       	lpm	r0, Z+
    1c52:	61 50       	subi	r22, 0x01	; 1
    1c54:	70 40       	sbci	r23, 0x00	; 0
    1c56:	01 10       	cpse	r0, r1
    1c58:	d8 f7       	brcc	.-10     	; 0x1c50 <strnlen_P+0x2>
    1c5a:	80 95       	com	r24
    1c5c:	90 95       	com	r25
    1c5e:	8e 0f       	add	r24, r30
    1c60:	9f 1f       	adc	r25, r31
    1c62:	08 95       	ret

00001c64 <strnlen>:
    1c64:	fc 01       	movw	r30, r24
    1c66:	61 50       	subi	r22, 0x01	; 1
    1c68:	70 40       	sbci	r23, 0x00	; 0
    1c6a:	01 90       	ld	r0, Z+
    1c6c:	01 10       	cpse	r0, r1
    1c6e:	d8 f7       	brcc	.-10     	; 0x1c66 <strnlen+0x2>
    1c70:	80 95       	com	r24
    1c72:	90 95       	com	r25
    1c74:	8e 0f       	add	r24, r30
    1c76:	9f 1f       	adc	r25, r31
    1c78:	08 95       	ret

00001c7a <fputc>:
    1c7a:	0f 93       	push	r16
    1c7c:	1f 93       	push	r17
    1c7e:	cf 93       	push	r28
    1c80:	df 93       	push	r29
    1c82:	18 2f       	mov	r17, r24
    1c84:	09 2f       	mov	r16, r25
    1c86:	eb 01       	movw	r28, r22
    1c88:	8b 81       	ldd	r24, Y+3	; 0x03
    1c8a:	81 fd       	sbrc	r24, 1
    1c8c:	03 c0       	rjmp	.+6      	; 0x1c94 <fputc+0x1a>
    1c8e:	8f ef       	ldi	r24, 0xFF	; 255
    1c90:	9f ef       	ldi	r25, 0xFF	; 255
    1c92:	20 c0       	rjmp	.+64     	; 0x1cd4 <fputc+0x5a>
    1c94:	82 ff       	sbrs	r24, 2
    1c96:	10 c0       	rjmp	.+32     	; 0x1cb8 <fputc+0x3e>
    1c98:	4e 81       	ldd	r20, Y+6	; 0x06
    1c9a:	5f 81       	ldd	r21, Y+7	; 0x07
    1c9c:	2c 81       	ldd	r18, Y+4	; 0x04
    1c9e:	3d 81       	ldd	r19, Y+5	; 0x05
    1ca0:	42 17       	cp	r20, r18
    1ca2:	53 07       	cpc	r21, r19
    1ca4:	7c f4       	brge	.+30     	; 0x1cc4 <fputc+0x4a>
    1ca6:	e8 81       	ld	r30, Y
    1ca8:	f9 81       	ldd	r31, Y+1	; 0x01
    1caa:	9f 01       	movw	r18, r30
    1cac:	2f 5f       	subi	r18, 0xFF	; 255
    1cae:	3f 4f       	sbci	r19, 0xFF	; 255
    1cb0:	39 83       	std	Y+1, r19	; 0x01
    1cb2:	28 83       	st	Y, r18
    1cb4:	10 83       	st	Z, r17
    1cb6:	06 c0       	rjmp	.+12     	; 0x1cc4 <fputc+0x4a>
    1cb8:	e8 85       	ldd	r30, Y+8	; 0x08
    1cba:	f9 85       	ldd	r31, Y+9	; 0x09
    1cbc:	81 2f       	mov	r24, r17
    1cbe:	09 95       	icall
    1cc0:	89 2b       	or	r24, r25
    1cc2:	29 f7       	brne	.-54     	; 0x1c8e <fputc+0x14>
    1cc4:	2e 81       	ldd	r18, Y+6	; 0x06
    1cc6:	3f 81       	ldd	r19, Y+7	; 0x07
    1cc8:	2f 5f       	subi	r18, 0xFF	; 255
    1cca:	3f 4f       	sbci	r19, 0xFF	; 255
    1ccc:	3f 83       	std	Y+7, r19	; 0x07
    1cce:	2e 83       	std	Y+6, r18	; 0x06
    1cd0:	81 2f       	mov	r24, r17
    1cd2:	90 2f       	mov	r25, r16
    1cd4:	df 91       	pop	r29
    1cd6:	cf 91       	pop	r28
    1cd8:	1f 91       	pop	r17
    1cda:	0f 91       	pop	r16
    1cdc:	08 95       	ret

00001cde <__ultoa_invert>:
    1cde:	fa 01       	movw	r30, r20
    1ce0:	aa 27       	eor	r26, r26
    1ce2:	28 30       	cpi	r18, 0x08	; 8
    1ce4:	51 f1       	breq	.+84     	; 0x1d3a <__ultoa_invert+0x5c>
    1ce6:	20 31       	cpi	r18, 0x10	; 16
    1ce8:	81 f1       	breq	.+96     	; 0x1d4a <__ultoa_invert+0x6c>
    1cea:	e8 94       	clt
    1cec:	6f 93       	push	r22
    1cee:	6e 7f       	andi	r22, 0xFE	; 254
    1cf0:	6e 5f       	subi	r22, 0xFE	; 254
    1cf2:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf4:	8f 4f       	sbci	r24, 0xFF	; 255
    1cf6:	9f 4f       	sbci	r25, 0xFF	; 255
    1cf8:	af 4f       	sbci	r26, 0xFF	; 255
    1cfa:	b1 e0       	ldi	r27, 0x01	; 1
    1cfc:	3e d0       	rcall	.+124    	; 0x1d7a <__ultoa_invert+0x9c>
    1cfe:	b4 e0       	ldi	r27, 0x04	; 4
    1d00:	3c d0       	rcall	.+120    	; 0x1d7a <__ultoa_invert+0x9c>
    1d02:	67 0f       	add	r22, r23
    1d04:	78 1f       	adc	r23, r24
    1d06:	89 1f       	adc	r24, r25
    1d08:	9a 1f       	adc	r25, r26
    1d0a:	a1 1d       	adc	r26, r1
    1d0c:	68 0f       	add	r22, r24
    1d0e:	79 1f       	adc	r23, r25
    1d10:	8a 1f       	adc	r24, r26
    1d12:	91 1d       	adc	r25, r1
    1d14:	a1 1d       	adc	r26, r1
    1d16:	6a 0f       	add	r22, r26
    1d18:	71 1d       	adc	r23, r1
    1d1a:	81 1d       	adc	r24, r1
    1d1c:	91 1d       	adc	r25, r1
    1d1e:	a1 1d       	adc	r26, r1
    1d20:	20 d0       	rcall	.+64     	; 0x1d62 <__ultoa_invert+0x84>
    1d22:	09 f4       	brne	.+2      	; 0x1d26 <__ultoa_invert+0x48>
    1d24:	68 94       	set
    1d26:	3f 91       	pop	r19
    1d28:	2a e0       	ldi	r18, 0x0A	; 10
    1d2a:	26 9f       	mul	r18, r22
    1d2c:	11 24       	eor	r1, r1
    1d2e:	30 19       	sub	r19, r0
    1d30:	30 5d       	subi	r19, 0xD0	; 208
    1d32:	31 93       	st	Z+, r19
    1d34:	de f6       	brtc	.-74     	; 0x1cec <__ultoa_invert+0xe>
    1d36:	cf 01       	movw	r24, r30
    1d38:	08 95       	ret
    1d3a:	46 2f       	mov	r20, r22
    1d3c:	47 70       	andi	r20, 0x07	; 7
    1d3e:	40 5d       	subi	r20, 0xD0	; 208
    1d40:	41 93       	st	Z+, r20
    1d42:	b3 e0       	ldi	r27, 0x03	; 3
    1d44:	0f d0       	rcall	.+30     	; 0x1d64 <__ultoa_invert+0x86>
    1d46:	c9 f7       	brne	.-14     	; 0x1d3a <__ultoa_invert+0x5c>
    1d48:	f6 cf       	rjmp	.-20     	; 0x1d36 <__ultoa_invert+0x58>
    1d4a:	46 2f       	mov	r20, r22
    1d4c:	4f 70       	andi	r20, 0x0F	; 15
    1d4e:	40 5d       	subi	r20, 0xD0	; 208
    1d50:	4a 33       	cpi	r20, 0x3A	; 58
    1d52:	18 f0       	brcs	.+6      	; 0x1d5a <__ultoa_invert+0x7c>
    1d54:	49 5d       	subi	r20, 0xD9	; 217
    1d56:	31 fd       	sbrc	r19, 1
    1d58:	40 52       	subi	r20, 0x20	; 32
    1d5a:	41 93       	st	Z+, r20
    1d5c:	02 d0       	rcall	.+4      	; 0x1d62 <__ultoa_invert+0x84>
    1d5e:	a9 f7       	brne	.-22     	; 0x1d4a <__ultoa_invert+0x6c>
    1d60:	ea cf       	rjmp	.-44     	; 0x1d36 <__ultoa_invert+0x58>
    1d62:	b4 e0       	ldi	r27, 0x04	; 4
    1d64:	a6 95       	lsr	r26
    1d66:	97 95       	ror	r25
    1d68:	87 95       	ror	r24
    1d6a:	77 95       	ror	r23
    1d6c:	67 95       	ror	r22
    1d6e:	ba 95       	dec	r27
    1d70:	c9 f7       	brne	.-14     	; 0x1d64 <__ultoa_invert+0x86>
    1d72:	00 97       	sbiw	r24, 0x00	; 0
    1d74:	61 05       	cpc	r22, r1
    1d76:	71 05       	cpc	r23, r1
    1d78:	08 95       	ret
    1d7a:	9b 01       	movw	r18, r22
    1d7c:	ac 01       	movw	r20, r24
    1d7e:	0a 2e       	mov	r0, r26
    1d80:	06 94       	lsr	r0
    1d82:	57 95       	ror	r21
    1d84:	47 95       	ror	r20
    1d86:	37 95       	ror	r19
    1d88:	27 95       	ror	r18
    1d8a:	ba 95       	dec	r27
    1d8c:	c9 f7       	brne	.-14     	; 0x1d80 <__ultoa_invert+0xa2>
    1d8e:	62 0f       	add	r22, r18
    1d90:	73 1f       	adc	r23, r19
    1d92:	84 1f       	adc	r24, r20
    1d94:	95 1f       	adc	r25, r21
    1d96:	a0 1d       	adc	r26, r0
    1d98:	08 95       	ret

00001d9a <_exit>:
    1d9a:	f8 94       	cli

00001d9c <__stop_program>:
    1d9c:	ff cf       	rjmp	.-2      	; 0x1d9c <__stop_program>
